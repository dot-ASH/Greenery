(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2963],{62610:function(E){var e=.999,T=/[\\\/\-_+.# \t"@\[\(\{&]/,t=/[\\\/\-_+.# \t"@\[\(\{&]/g;function R(E,A,n,S,r,O){if(O===A.length)return r===E.length?1:.99;for(var N,I,s,o=S.charAt(O),i=n.indexOf(o,r),a=0;i>=0;)(N=R(E,A,n,S,i+1,O+1))>a&&(i===r?N*=1:T.test(E.charAt(i-1))?(N*=.9,(s=E.slice(r,i-1).match(t))&&r>0&&(N*=Math.pow(e,s.length))):T.test(E.slice(r,i-1))?(N*=0,r>0&&(N*=Math.pow(e,i-r))):(N*=.3,r>0&&(N*=Math.pow(e,i-r))),E.charAt(i)!==A.charAt(O)&&(N*=.9999)),N<.1&&n.charAt(i-1)===S.charAt(O+1)&&n.charAt(i-1)!==S.charAt(O)&&.1*(I=R(E,A,n,S,i+1,O+2))>N&&(N=.1*I),N>a&&(a=N),i=n.indexOf(o,i+1);return a}E.exports=function(E,e){return R(E,e,E.toLowerCase(),e.toLowerCase(),0,0)}},36012:function(E,e,T){"use strict";var t=T(93185),R={"text/plain":"Text","text/html":"Url",default:"Text"};E.exports=function(E,e){var T,A,n,S,r,O,N=!1;e||(e={}),T=e.debug||!1;try{if(n=t(),S=document.createRange(),r=document.getSelection(),(O=document.createElement("span")).textContent=E,O.ariaHidden="true",O.style.all="unset",O.style.position="fixed",O.style.top=0,O.style.clip="rect(0, 0, 0, 0)",O.style.whiteSpace="pre",O.style.webkitUserSelect="text",O.style.MozUserSelect="text",O.style.msUserSelect="text",O.style.userSelect="text",O.addEventListener("copy",(function(t){if(t.stopPropagation(),e.format)if(t.preventDefault(),"undefined"===typeof t.clipboardData){T&&console.warn("unable to use e.clipboardData"),T&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var A=R[e.format]||R.default;window.clipboardData.setData(A,E)}else t.clipboardData.clearData(),t.clipboardData.setData(e.format,E);e.onCopy&&(t.preventDefault(),e.onCopy(t.clipboardData))})),document.body.appendChild(O),S.selectNodeContents(O),r.addRange(S),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");N=!0}catch(I){T&&console.error("unable to copy using execCommand: ",I),T&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(e.format||"text",E),e.onCopy&&e.onCopy(window.clipboardData),N=!0}catch(I){T&&console.error("unable to copy using clipboardData: ",I),T&&console.error("falling back to prompt"),A=function(E){var e=(/mac os x/i.test(navigator.userAgent)?"\u2318":"Ctrl")+"+C";return E.replace(/#{\s*key\s*}/g,e)}("message"in e?e.message:"Copy to clipboard: #{key}, Enter"),window.prompt(A,E)}}finally{r&&("function"==typeof r.removeRange?r.removeRange(S):r.removeAllRanges()),O&&document.body.removeChild(O),n()}return N}},96958:function(E,e,T){"use strict";var t=T(28326),R=A(Error);function A(E){return e.displayName=E.displayName||E.name,e;function e(e){return e&&(e=t.apply(null,arguments)),new E(e)}}E.exports=R,R.eval=A(EvalError),R.range=A(RangeError),R.reference=A(ReferenceError),R.syntax=A(SyntaxError),R.type=A(TypeError),R.uri=A(URIError),R.create=A},28326:function(E){!function(){var e;function T(E){for(var e,T,t,R,A=1,n=[].slice.call(arguments),S=0,r=E.length,O="",N=!1,I=!1,s=function(){return n[A++]},o=function(){for(var T="";/\d/.test(E[S]);)T+=E[S++],e=E[S];return T.length>0?parseInt(T):null};S<r;++S)if(e=E[S],N)switch(N=!1,"."==e?(I=!1,e=E[++S]):"0"==e&&"."==E[S+1]?(I=!0,e=E[S+=2]):I=!0,R=o(),e){case"b":O+=parseInt(s(),10).toString(2);break;case"c":O+="string"===typeof(T=s())||T instanceof String?T:String.fromCharCode(parseInt(T,10));break;case"d":O+=parseInt(s(),10);break;case"f":t=String(parseFloat(s()).toFixed(R||6)),O+=I?t:t.replace(/^0/,"");break;case"j":O+=JSON.stringify(s());break;case"o":O+="0"+parseInt(s(),10).toString(8);break;case"s":O+=s();break;case"x":O+="0x"+parseInt(s(),10).toString(16);break;case"X":O+="0x"+parseInt(s(),10).toString(16).toUpperCase();break;default:O+=e}else"%"===e?N=!0:O+=e;return O}(e=E.exports=T).format=T,e.vsprintf=function(E,e){return T.apply(null,[E].concat(e))},"undefined"!==typeof console&&"function"===typeof console.log&&(e.printf=function(){console.log(T.apply(null,arguments))})}()},30906:function(E){function e(E){return E instanceof Map?E.clear=E.delete=E.set=function(){throw new Error("map is read-only")}:E instanceof Set&&(E.add=E.clear=E.delete=function(){throw new Error("set is read-only")}),Object.freeze(E),Object.getOwnPropertyNames(E).forEach((function(T){var t=E[T];"object"!=typeof t||Object.isFrozen(t)||e(t)})),E}var T=e,t=e;T.default=t;class R{constructor(E){void 0===E.data&&(E.data={}),this.data=E.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function A(E){return E.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function n(E,...e){const T=Object.create(null);for(const t in E)T[t]=E[t];return e.forEach((function(E){for(const e in E)T[e]=E[e]})),T}const S=E=>!!E.kind;class r{constructor(E,e){this.buffer="",this.classPrefix=e.classPrefix,E.walk(this)}addText(E){this.buffer+=A(E)}openNode(E){if(!S(E))return;let e=E.kind;E.sublanguage||(e=`${this.classPrefix}${e}`),this.span(e)}closeNode(E){S(E)&&(this.buffer+="</span>")}value(){return this.buffer}span(E){this.buffer+=`<span class="${E}">`}}class O{constructor(){this.rootNode={children:[]},this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(E){this.top.children.push(E)}openNode(E){const e={kind:E,children:[]};this.add(e),this.stack.push(e)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(E){return this.constructor._walk(E,this.rootNode)}static _walk(E,e){return"string"===typeof e?E.addText(e):e.children&&(E.openNode(e),e.children.forEach((e=>this._walk(E,e))),E.closeNode(e)),E}static _collapse(E){"string"!==typeof E&&E.children&&(E.children.every((E=>"string"===typeof E))?E.children=[E.children.join("")]:E.children.forEach((E=>{O._collapse(E)})))}}class N extends O{constructor(E){super(),this.options=E}addKeyword(E,e){""!==E&&(this.openNode(e),this.addText(E),this.closeNode())}addText(E){""!==E&&this.add(E)}addSublanguage(E,e){const T=E.root;T.kind=e,T.sublanguage=!0,this.add(T)}toHTML(){return new r(this,this.options).value()}finalize(){return!0}}function I(E){return E?"string"===typeof E?E:E.source:null}const s=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;const o="[a-zA-Z]\\w*",i="[a-zA-Z_]\\w*",a="\\b\\d+(\\.\\d+)?",C="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",_="\\b(0b[01]+)",L={begin:"\\\\[\\s\\S]",relevance:0},l={className:"string",begin:"'",end:"'",illegal:"\\n",contains:[L]},c={className:"string",begin:'"',end:'"',illegal:"\\n",contains:[L]},D={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},u=function(E,e,T={}){const t=n({className:"comment",begin:E,end:e,contains:[]},T);return t.contains.push(D),t.contains.push({className:"doctag",begin:"(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):",relevance:0}),t},P=u("//","$"),M=u("/\\*","\\*/"),U=u("#","$"),d={className:"number",begin:a,relevance:0},p={className:"number",begin:C,relevance:0},f={className:"number",begin:_,relevance:0},G={className:"number",begin:a+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},h={begin:/(?=\/[^/\n]*\/)/,contains:[{className:"regexp",begin:/\//,end:/\/[gimuy]*/,illegal:/\n/,contains:[L,{begin:/\[/,end:/\]/,relevance:0,contains:[L]}]}]},m={className:"title",begin:o,relevance:0},g={className:"title",begin:i,relevance:0},H={begin:"\\.\\s*[a-zA-Z_]\\w*",relevance:0};var B=Object.freeze({__proto__:null,MATCH_NOTHING_RE:/\b\B/,IDENT_RE:o,UNDERSCORE_IDENT_RE:i,NUMBER_RE:a,C_NUMBER_RE:C,BINARY_NUMBER_RE:_,RE_STARTERS_RE:"!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",SHEBANG:(E={})=>{const e=/^#![ ]*\//;return E.binary&&(E.begin=function(...E){return E.map((E=>I(E))).join("")}(e,/.*\b/,E.binary,/\b.*/)),n({className:"meta",begin:e,end:/$/,relevance:0,"on:begin":(E,e)=>{0!==E.index&&e.ignoreMatch()}},E)},BACKSLASH_ESCAPE:L,APOS_STRING_MODE:l,QUOTE_STRING_MODE:c,PHRASAL_WORDS_MODE:D,COMMENT:u,C_LINE_COMMENT_MODE:P,C_BLOCK_COMMENT_MODE:M,HASH_COMMENT_MODE:U,NUMBER_MODE:d,C_NUMBER_MODE:p,BINARY_NUMBER_MODE:f,CSS_NUMBER_MODE:G,REGEXP_MODE:h,TITLE_MODE:m,UNDERSCORE_TITLE_MODE:g,METHOD_GUARD:H,END_SAME_AS_BEGIN:function(E){return Object.assign(E,{"on:begin":(E,e)=>{e.data._beginMatch=E[1]},"on:end":(E,e)=>{e.data._beginMatch!==E[1]&&e.ignoreMatch()}})}});function F(E,e){"."===E.input[E.index-1]&&e.ignoreMatch()}function Y(E,e){e&&E.beginKeywords&&(E.begin="\\b("+E.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",E.__beforeBegin=F,E.keywords=E.keywords||E.beginKeywords,delete E.beginKeywords,void 0===E.relevance&&(E.relevance=0))}function b(E,e){Array.isArray(E.illegal)&&(E.illegal=function(...E){return"("+E.map((E=>I(E))).join("|")+")"}(...E.illegal))}function y(E,e){if(E.match){if(E.begin||E.end)throw new Error("begin & end are not supported with match");E.begin=E.match,delete E.match}}function V(E,e){void 0===E.relevance&&(E.relevance=1)}const v=["of","and","for","in","not","or","if","then","parent","list","value"];function W(E,e,T="keyword"){const t={};return"string"===typeof E?R(T,E.split(" ")):Array.isArray(E)?R(T,E):Object.keys(E).forEach((function(T){Object.assign(t,W(E[T],e,T))})),t;function R(E,T){e&&(T=T.map((E=>E.toLowerCase()))),T.forEach((function(e){const T=e.split("|");t[T[0]]=[E,X(T[0],T[1])]}))}}function X(E,e){return e?Number(e):function(E){return v.includes(E.toLowerCase())}(E)?0:1}function x(E,{plugins:e}){function T(e,T){return new RegExp(I(e),"m"+(E.case_insensitive?"i":"")+(T?"g":""))}class t{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(E,e){e.position=this.position++,this.matchIndexes[this.matchAt]=e,this.regexes.push([e,E]),this.matchAt+=function(E){return new RegExp(E.toString()+"|").exec("").length-1}(E)+1}compile(){0===this.regexes.length&&(this.exec=()=>null);const E=this.regexes.map((E=>E[1]));this.matcherRe=T(function(E,e="|"){let T=0;return E.map((E=>{T+=1;const e=T;let t=I(E),R="";for(;t.length>0;){const E=s.exec(t);if(!E){R+=t;break}R+=t.substring(0,E.index),t=t.substring(E.index+E[0].length),"\\"===E[0][0]&&E[1]?R+="\\"+String(Number(E[1])+e):(R+=E[0],"("===E[0]&&T++)}return R})).map((E=>`(${E})`)).join(e)}(E),!0),this.lastIndex=0}exec(E){this.matcherRe.lastIndex=this.lastIndex;const e=this.matcherRe.exec(E);if(!e)return null;const T=e.findIndex(((E,e)=>e>0&&void 0!==E)),t=this.matchIndexes[T];return e.splice(0,T),Object.assign(e,t)}}class R{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(E){if(this.multiRegexes[E])return this.multiRegexes[E];const e=new t;return this.rules.slice(E).forEach((([E,T])=>e.addRule(E,T))),e.compile(),this.multiRegexes[E]=e,e}resumingScanAtSamePosition(){return 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(E,e){this.rules.push([E,e]),"begin"===e.type&&this.count++}exec(E){const e=this.getMatcher(this.regexIndex);e.lastIndex=this.lastIndex;let T=e.exec(E);if(this.resumingScanAtSamePosition())if(T&&T.index===this.lastIndex);else{const e=this.getMatcher(0);e.lastIndex=this.lastIndex+1,T=e.exec(E)}return T&&(this.regexIndex+=T.position+1,this.regexIndex===this.count&&this.considerAll()),T}}if(E.compilerExtensions||(E.compilerExtensions=[]),E.contains&&E.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return E.classNameAliases=n(E.classNameAliases||{}),function e(t,A){const S=t;if(t.isCompiled)return S;[y].forEach((E=>E(t,A))),E.compilerExtensions.forEach((E=>E(t,A))),t.__beforeBegin=null,[Y,b,V].forEach((E=>E(t,A))),t.isCompiled=!0;let r=null;if("object"===typeof t.keywords&&(r=t.keywords.$pattern,delete t.keywords.$pattern),t.keywords&&(t.keywords=W(t.keywords,E.case_insensitive)),t.lexemes&&r)throw new Error("ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) ");return r=r||t.lexemes||/\w+/,S.keywordPatternRe=T(r,!0),A&&(t.begin||(t.begin=/\B|\b/),S.beginRe=T(t.begin),t.endSameAsBegin&&(t.end=t.begin),t.end||t.endsWithParent||(t.end=/\B|\b/),t.end&&(S.endRe=T(t.end)),S.terminatorEnd=I(t.end)||"",t.endsWithParent&&A.terminatorEnd&&(S.terminatorEnd+=(t.end?"|":"")+A.terminatorEnd)),t.illegal&&(S.illegalRe=T(t.illegal)),t.contains||(t.contains=[]),t.contains=[].concat(...t.contains.map((function(E){return function(E){E.variants&&!E.cachedVariants&&(E.cachedVariants=E.variants.map((function(e){return n(E,{variants:null},e)})));if(E.cachedVariants)return E.cachedVariants;if(w(E))return n(E,{starts:E.starts?n(E.starts):null});if(Object.isFrozen(E))return n(E);return E}("self"===E?t:E)}))),t.contains.forEach((function(E){e(E,S)})),t.starts&&e(t.starts,A),S.matcher=function(E){const e=new R;return E.contains.forEach((E=>e.addRule(E.begin,{rule:E,type:"begin"}))),E.terminatorEnd&&e.addRule(E.terminatorEnd,{type:"end"}),E.illegal&&e.addRule(E.illegal,{type:"illegal"}),e}(S),S}(E)}function w(E){return!!E&&(E.endsWithParent||w(E.starts))}function K(E){const e={props:["language","code","autodetect"],data:function(){return{detectedLanguage:"",unknownLanguage:!1}},computed:{className(){return this.unknownLanguage?"":"hljs "+this.detectedLanguage},highlighted(){if(!this.autoDetect&&!E.getLanguage(this.language))return console.warn(`The language "${this.language}" you specified could not be found.`),this.unknownLanguage=!0,A(this.code);let e={};return this.autoDetect?(e=E.highlightAuto(this.code),this.detectedLanguage=e.language):(e=E.highlight(this.language,this.code,this.ignoreIllegals),this.detectedLanguage=this.language),e.value},autoDetect(){return!this.language||(E=this.autodetect,Boolean(E||""===E));var E},ignoreIllegals:()=>!0},render(E){return E("pre",{},[E("code",{class:this.className,domProps:{innerHTML:this.highlighted}})])}};return{Component:e,VuePlugin:{install(E){E.component("highlightjs",e)}}}}const k={"after:highlightElement":({el:E,result:e,text:T})=>{const t=J(E);if(!t.length)return;const R=document.createElement("div");R.innerHTML=e.value,e.value=function(E,e,T){let t=0,R="";const n=[];function S(){return E.length&&e.length?E[0].offset!==e[0].offset?E[0].offset<e[0].offset?E:e:"start"===e[0].event?E:e:E.length?E:e}function r(E){function e(E){return" "+E.nodeName+'="'+A(E.value)+'"'}R+="<"+$(E)+[].map.call(E.attributes,e).join("")+">"}function O(E){R+="</"+$(E)+">"}function N(E){("start"===E.event?r:O)(E.node)}for(;E.length||e.length;){let e=S();if(R+=A(T.substring(t,e[0].offset)),t=e[0].offset,e===E){n.reverse().forEach(O);do{N(e.splice(0,1)[0]),e=S()}while(e===E&&e.length&&e[0].offset===t);n.reverse().forEach(r)}else"start"===e[0].event?n.push(e[0].node):n.pop(),N(e.splice(0,1)[0])}return R+A(T.substr(t))}(t,J(R),T)}};function $(E){return E.nodeName.toLowerCase()}function J(E){const e=[];return function E(T,t){for(let R=T.firstChild;R;R=R.nextSibling)3===R.nodeType?t+=R.nodeValue.length:1===R.nodeType&&(e.push({event:"start",offset:t,node:R}),t=E(R,t),$(R).match(/br|hr|img|input/)||e.push({event:"stop",offset:t,node:R}));return t}(E,0),e}const Z={},Q=E=>{console.error(E)},j=(E,...e)=>{console.log(`WARN: ${E}`,...e)},q=(E,e)=>{Z[`${E}/${e}`]||(console.log(`Deprecated as of ${E}. ${e}`),Z[`${E}/${e}`]=!0)},z=A,EE=n,eE=Symbol("nomatch");var TE=function(E){const e=Object.create(null),t=Object.create(null),A=[];let n=!0;const S=/(^(<[^>]+>|\t|)+|\n)/gm,r="Could not find the language '{}', did you forget to load/include a language module?",O={disableAutodetect:!0,name:"Plain text",contains:[]};let I={noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:null,__emitter:N};function s(E){return I.noHighlightRe.test(E)}function o(E,e,T,t){let R="",A="";"object"===typeof e?(R=E,T=e.ignoreIllegals,A=e.language,t=void 0):(q("10.7.0","highlight(lang, code, ...args) has been deprecated."),q("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),A=E,R=e);const n={code:R,language:A};d("before:highlight",n);const S=n.result?n.result:i(n.language,n.code,T,t);return S.code=n.code,d("after:highlight",S),S}function i(E,T,t,S){function O(E,e){const T=D.case_insensitive?e[0].toLowerCase():e[0];return Object.prototype.hasOwnProperty.call(E.keywords,T)&&E.keywords[T]}function N(){null!=U.subLanguage?function(){if(""===f)return;let E=null;if("string"===typeof U.subLanguage){if(!e[U.subLanguage])return void p.addText(f);E=i(U.subLanguage,f,!0,d[U.subLanguage]),d[U.subLanguage]=E.top}else E=a(f,U.subLanguage.length?U.subLanguage:null);U.relevance>0&&(G+=E.relevance),p.addSublanguage(E.emitter,E.language)}():function(){if(!U.keywords)return void p.addText(f);let E=0;U.keywordPatternRe.lastIndex=0;let e=U.keywordPatternRe.exec(f),T="";for(;e;){T+=f.substring(E,e.index);const t=O(U,e);if(t){const[E,R]=t;if(p.addText(T),T="",G+=R,E.startsWith("_"))T+=e[0];else{const T=D.classNameAliases[E]||E;p.addKeyword(e[0],T)}}else T+=e[0];E=U.keywordPatternRe.lastIndex,e=U.keywordPatternRe.exec(f)}T+=f.substr(E),p.addText(T)}(),f=""}function s(E){return E.className&&p.openNode(D.classNameAliases[E.className]||E.className),U=Object.create(E,{parent:{value:U}}),U}function o(E,e,T){let t=function(E,e){const T=E&&E.exec(e);return T&&0===T.index}(E.endRe,T);if(t){if(E["on:end"]){const T=new R(E);E["on:end"](e,T),T.isMatchIgnored&&(t=!1)}if(t){for(;E.endsParent&&E.parent;)E=E.parent;return E}}if(E.endsWithParent)return o(E.parent,e,T)}function C(E){return 0===U.matcher.regexIndex?(f+=E[0],1):(g=!0,0)}function _(E){const e=E[0],T=E.rule,t=new R(T),A=[T.__beforeBegin,T["on:begin"]];for(const R of A)if(R&&(R(E,t),t.isMatchIgnored))return C(e);return T&&T.endSameAsBegin&&(T.endRe=new RegExp(e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),"m")),T.skip?f+=e:(T.excludeBegin&&(f+=e),N(),T.returnBegin||T.excludeBegin||(f=e)),s(T),T.returnBegin?0:e.length}function L(E){const e=E[0],t=T.substr(E.index),R=o(U,E,t);if(!R)return eE;const A=U;A.skip?f+=e:(A.returnEnd||A.excludeEnd||(f+=e),N(),A.excludeEnd&&(f=e));do{U.className&&p.closeNode(),U.skip||U.subLanguage||(G+=U.relevance),U=U.parent}while(U!==R.parent);return R.starts&&(R.endSameAsBegin&&(R.starts.endRe=R.endRe),s(R.starts)),A.returnEnd?0:e.length}let l={};function c(e,R){const A=R&&R[0];if(f+=e,null==A)return N(),0;if("begin"===l.type&&"end"===R.type&&l.index===R.index&&""===A){if(f+=T.slice(R.index,R.index+1),!n){const e=new Error("0 width match regex");throw e.languageName=E,e.badRule=l.rule,e}return 1}if(l=R,"begin"===R.type)return _(R);if("illegal"===R.type&&!t){const E=new Error('Illegal lexeme "'+A+'" for mode "'+(U.className||"<unnamed>")+'"');throw E.mode=U,E}if("end"===R.type){const E=L(R);if(E!==eE)return E}if("illegal"===R.type&&""===A)return 1;if(m>1e5&&m>3*R.index){throw new Error("potential infinite loop, way more iterations than matches")}return f+=A,A.length}const D=P(E);if(!D)throw Q(r.replace("{}",E)),new Error('Unknown language: "'+E+'"');const u=x(D,{plugins:A});let M="",U=S||u;const d={},p=new I.__emitter(I);!function(){const E=[];for(let e=U;e!==D;e=e.parent)e.className&&E.unshift(e.className);E.forEach((E=>p.openNode(E)))}();let f="",G=0,h=0,m=0,g=!1;try{for(U.matcher.considerAll();;){m++,g?g=!1:U.matcher.considerAll(),U.matcher.lastIndex=h;const E=U.matcher.exec(T);if(!E)break;const e=c(T.substring(h,E.index),E);h=E.index+e}return c(T.substr(h)),p.closeAllNodes(),p.finalize(),M=p.toHTML(),{relevance:Math.floor(G),value:M,language:E,illegal:!1,emitter:p,top:U}}catch(H){if(H.message&&H.message.includes("Illegal"))return{illegal:!0,illegalBy:{msg:H.message,context:T.slice(h-100,h+100),mode:H.mode},sofar:M,relevance:0,value:z(T),emitter:p};if(n)return{illegal:!1,relevance:0,value:z(T),emitter:p,language:E,top:U,errorRaised:H};throw H}}function a(E,T){T=T||I.languages||Object.keys(e);const t=function(E){const e={relevance:0,emitter:new I.__emitter(I),value:z(E),illegal:!1,top:O};return e.emitter.addText(E),e}(E),R=T.filter(P).filter(U).map((e=>i(e,E,!1)));R.unshift(t);const A=R.sort(((E,e)=>{if(E.relevance!==e.relevance)return e.relevance-E.relevance;if(E.language&&e.language){if(P(E.language).supersetOf===e.language)return 1;if(P(e.language).supersetOf===E.language)return-1}return 0})),[n,S]=A,r=n;return r.second_best=S,r}const C={"before:highlightElement":({el:E})=>{I.useBR&&(E.innerHTML=E.innerHTML.replace(/\n/g,"").replace(/<br[ /]*>/g,"\n"))},"after:highlightElement":({result:E})=>{I.useBR&&(E.value=E.value.replace(/\n/g,"<br>"))}},_=/^(<[^>]+>|\t)+/gm,L={"after:highlightElement":({result:E})=>{I.tabReplace&&(E.value=E.value.replace(_,(E=>E.replace(/\t/g,I.tabReplace))))}};function l(E){let e=null;const T=function(E){let e=E.className+" ";e+=E.parentNode?E.parentNode.className:"";const T=I.languageDetectRe.exec(e);if(T){const e=P(T[1]);return e||(j(r.replace("{}",T[1])),j("Falling back to no-highlight mode for this block.",E)),e?T[1]:"no-highlight"}return e.split(/\s+/).find((E=>s(E)||P(E)))}(E);if(s(T))return;d("before:highlightElement",{el:E,language:T}),e=E;const R=e.textContent,A=T?o(R,{language:T,ignoreIllegals:!0}):a(R);d("after:highlightElement",{el:E,result:A,text:R}),E.innerHTML=A.value,function(E,e,T){const R=e?t[e]:T;E.classList.add("hljs"),R&&E.classList.add(R)}(E,T,A.language),E.result={language:A.language,re:A.relevance,relavance:A.relevance},A.second_best&&(E.second_best={language:A.second_best.language,re:A.second_best.relevance,relavance:A.second_best.relevance})}const c=()=>{if(c.called)return;c.called=!0,q("10.6.0","initHighlighting() is deprecated.  Use highlightAll() instead.");document.querySelectorAll("pre code").forEach(l)};let D=!1;function u(){if("loading"===document.readyState)return void(D=!0);document.querySelectorAll("pre code").forEach(l)}function P(E){return E=(E||"").toLowerCase(),e[E]||e[t[E]]}function M(E,{languageName:e}){"string"===typeof E&&(E=[E]),E.forEach((E=>{t[E.toLowerCase()]=e}))}function U(E){const e=P(E);return e&&!e.disableAutodetect}function d(E,e){const T=E;A.forEach((function(E){E[T]&&E[T](e)}))}"undefined"!==typeof window&&window.addEventListener&&window.addEventListener("DOMContentLoaded",(function(){D&&u()}),!1),Object.assign(E,{highlight:o,highlightAuto:a,highlightAll:u,fixMarkup:function(E){return q("10.2.0","fixMarkup will be removed entirely in v11.0"),q("10.2.0","Please see https://github.com/highlightjs/highlight.js/issues/2534"),e=E,I.tabReplace||I.useBR?e.replace(S,(E=>"\n"===E?I.useBR?"<br>":E:I.tabReplace?E.replace(/\t/g,I.tabReplace):E)):e;var e},highlightElement:l,highlightBlock:function(E){return q("10.7.0","highlightBlock will be removed entirely in v12.0"),q("10.7.0","Please use highlightElement now."),l(E)},configure:function(E){E.useBR&&(q("10.3.0","'useBR' will be removed entirely in v11.0"),q("10.3.0","Please see https://github.com/highlightjs/highlight.js/issues/2559")),I=EE(I,E)},initHighlighting:c,initHighlightingOnLoad:function(){q("10.6.0","initHighlightingOnLoad() is deprecated.  Use highlightAll() instead."),D=!0},registerLanguage:function(T,t){let R=null;try{R=t(E)}catch(A){if(Q("Language definition for '{}' could not be registered.".replace("{}",T)),!n)throw A;Q(A),R=O}R.name||(R.name=T),e[T]=R,R.rawDefinition=t.bind(null,E),R.aliases&&M(R.aliases,{languageName:T})},unregisterLanguage:function(E){delete e[E];for(const e of Object.keys(t))t[e]===E&&delete t[e]},listLanguages:function(){return Object.keys(e)},getLanguage:P,registerAliases:M,requireLanguage:function(E){q("10.4.0","requireLanguage will be removed entirely in v11."),q("10.4.0","Please see https://github.com/highlightjs/highlight.js/pull/2844");const e=P(E);if(e)return e;throw new Error("The '{}' language is required, but not loaded.".replace("{}",E))},autoDetection:U,inherit:EE,addPlugin:function(E){!function(E){E["before:highlightBlock"]&&!E["before:highlightElement"]&&(E["before:highlightElement"]=e=>{E["before:highlightBlock"](Object.assign({block:e.el},e))}),E["after:highlightBlock"]&&!E["after:highlightElement"]&&(E["after:highlightElement"]=e=>{E["after:highlightBlock"](Object.assign({block:e.el},e))})}(E),A.push(E)},vuePlugin:K(E).VuePlugin}),E.debugMode=function(){n=!1},E.safeMode=function(){n=!0},E.versionString="10.7.3";for(const R in B)"object"===typeof B[R]&&T(B[R]);return Object.assign(E,B),E.addPlugin(C),E.addPlugin(k),E.addPlugin(L),E}({});E.exports=TE},35001:function(E){function e(...E){return E.map((E=>{return(e=E)?"string"===typeof e?e:e.source:null;var e})).join("")}E.exports=function(E){const T={},t={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[T]}]};Object.assign(T,{className:"variable",variants:[{begin:e(/\$[\w\d#@][\w\d_]*/,"(?![\\w\\d])(?![$])")},t]});const R={className:"subst",begin:/\$\(/,end:/\)/,contains:[E.BACKSLASH_ESCAPE]},A={begin:/<<-?\s*(?=\w+)/,starts:{contains:[E.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:"string"})]}},n={className:"string",begin:/"/,end:/"/,contains:[E.BACKSLASH_ESCAPE,T,R]};R.contains.push(n);const S={begin:/\$\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},E.NUMBER_MODE,T]},r=E.SHEBANG({binary:`(${["fish","bash","zsh","sh","csh","ksh","tcsh","dash","scsh"].join("|")})`,relevance:10}),O={className:"function",begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:!0,contains:[E.inherit(E.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0};return{name:"Bash",aliases:["sh","zsh"],keywords:{$pattern:/\b[a-z._-]+\b/,keyword:"if then else elif fi for while in do done case esac function",literal:"true false",built_in:"break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp"},contains:[r,E.SHEBANG(),O,S,E.HASH_COMMENT_MODE,A,n,{className:"",begin:/\\"/},{className:"string",begin:/'/,end:/'/},T]}}},17927:function(E){E.exports=function(E){const e={keyword:["abstract","as","base","break","case","class","const","continue","do","else","event","explicit","extern","finally","fixed","for","foreach","goto","if","implicit","in","interface","internal","is","lock","namespace","new","operator","out","override","params","private","protected","public","readonly","record","ref","return","sealed","sizeof","stackalloc","static","struct","switch","this","throw","try","typeof","unchecked","unsafe","using","virtual","void","volatile","while"].concat(["add","alias","and","ascending","async","await","by","descending","equals","from","get","global","group","init","into","join","let","nameof","not","notnull","on","or","orderby","partial","remove","select","set","unmanaged","value|0","var","when","where","with","yield"]),built_in:["bool","byte","char","decimal","delegate","double","dynamic","enum","float","int","long","nint","nuint","object","sbyte","short","string","ulong","uint","ushort"],literal:["default","false","null","true"]},T=E.inherit(E.TITLE_MODE,{begin:"[a-zA-Z](\\.?\\w)*"}),t={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},R={className:"string",begin:'@"',end:'"',contains:[{begin:'""'}]},A=E.inherit(R,{illegal:/\n/}),n={className:"subst",begin:/\{/,end:/\}/,keywords:e},S=E.inherit(n,{illegal:/\n/}),r={className:"string",begin:/\$"/,end:'"',illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},E.BACKSLASH_ESCAPE,S]},O={className:"string",begin:/\$@"/,end:'"',contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},n]},N=E.inherit(O,{illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},S]});n.contains=[O,r,R,E.APOS_STRING_MODE,E.QUOTE_STRING_MODE,t,E.C_BLOCK_COMMENT_MODE],S.contains=[N,r,A,E.APOS_STRING_MODE,E.QUOTE_STRING_MODE,t,E.inherit(E.C_BLOCK_COMMENT_MODE,{illegal:/\n/})];const I={variants:[O,r,R,E.APOS_STRING_MODE,E.QUOTE_STRING_MODE]},s={begin:"<",end:">",contains:[{beginKeywords:"in out"},T]},o=E.IDENT_RE+"(<"+E.IDENT_RE+"(\\s*,\\s*"+E.IDENT_RE+")*>)?(\\[\\])?",i={begin:"@"+E.IDENT_RE,relevance:0};return{name:"C#",aliases:["cs","c#"],keywords:e,illegal:/::/,contains:[E.COMMENT("///","$",{returnBegin:!0,contains:[{className:"doctag",variants:[{begin:"///",relevance:0},{begin:"\x3c!--|--\x3e"},{begin:"</?",end:">"}]}]}),E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE,{className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":"if else elif endif define undef warning error line region endregion pragma checksum"}},I,t,{beginKeywords:"class interface",relevance:0,end:/[{;=]/,illegal:/[^\s:,]/,contains:[{beginKeywords:"where class"},T,s,E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE]},{beginKeywords:"namespace",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[T,E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE]},{beginKeywords:"record",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[T,s,E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE]},{className:"meta",begin:"^\\s*\\[",excludeBegin:!0,end:"\\]",excludeEnd:!0,contains:[{className:"meta-string",begin:/"/,end:/"/}]},{beginKeywords:"new return throw await else",relevance:0},{className:"function",begin:"("+o+"\\s+)+"+E.IDENT_RE+"\\s*(<.+>\\s*)?\\(",returnBegin:!0,end:/\s*[{;=]/,excludeEnd:!0,keywords:e,contains:[{beginKeywords:["public","private","protected","static","internal","protected","abstract","async","extern","override","unsafe","virtual","new","sealed","partial"].join(" "),relevance:0},{begin:E.IDENT_RE+"\\s*(<.+>\\s*)?\\(",returnBegin:!0,contains:[E.TITLE_MODE,s],relevance:0},{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:e,relevance:0,contains:[I,t,E.C_BLOCK_COMMENT_MODE]},E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE]},i]}}},84281:function(E){E.exports=function(E){const e={className:"subst",variants:[{begin:"\\$[A-Za-z0-9_]+"}]},T={className:"subst",variants:[{begin:/\$\{/,end:/\}/}],keywords:"true false null this is new super"},t={className:"string",variants:[{begin:"r'''",end:"'''"},{begin:'r"""',end:'"""'},{begin:"r'",end:"'",illegal:"\\n"},{begin:'r"',end:'"',illegal:"\\n"},{begin:"'''",end:"'''",contains:[E.BACKSLASH_ESCAPE,e,T]},{begin:'"""',end:'"""',contains:[E.BACKSLASH_ESCAPE,e,T]},{begin:"'",end:"'",illegal:"\\n",contains:[E.BACKSLASH_ESCAPE,e,T]},{begin:'"',end:'"',illegal:"\\n",contains:[E.BACKSLASH_ESCAPE,e,T]}]};T.contains=[E.C_NUMBER_MODE,t];const R=["Comparable","DateTime","Duration","Function","Iterable","Iterator","List","Map","Match","Object","Pattern","RegExp","Set","Stopwatch","String","StringBuffer","StringSink","Symbol","Type","Uri","bool","double","int","num","Element","ElementList"],A=R.map((E=>`${E}?`));return{name:"Dart",keywords:{keyword:"abstract as assert async await break case catch class const continue covariant default deferred do dynamic else enum export extends extension external factory false final finally for Function get hide if implements import in inferface is late library mixin new null on operator part required rethrow return set show static super switch sync this throw true try typedef var void while with yield",built_in:R.concat(A).concat(["Never","Null","dynamic","print","document","querySelector","querySelectorAll","window"]),$pattern:/[A-Za-z][A-Za-z0-9_]*\??/},contains:[t,E.COMMENT(/\/\*\*(?!\/)/,/\*\//,{subLanguage:"markdown",relevance:0}),E.COMMENT(/\/{3,} ?/,/$/,{contains:[{subLanguage:"markdown",begin:".",end:"$",relevance:0}]}),E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE,{className:"class",beginKeywords:"class interface",end:/\{/,excludeEnd:!0,contains:[{beginKeywords:"extends implements"},E.UNDERSCORE_TITLE_MODE]},E.C_NUMBER_MODE,{className:"meta",begin:"@[A-Za-z]+"},{begin:"=>"}]}}},81247:function(E){const e="[A-Za-z$_][0-9A-Za-z$_]*",T=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],t=["true","false","null","undefined","NaN","Infinity"],R=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"]);function A(E){return n("(?=",E,")")}function n(...E){return E.map((E=>{return(e=E)?"string"===typeof e?e:e.source:null;var e})).join("")}E.exports=function(E){const S=e,r="<>",O="</>",N={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(E,e)=>{const T=E[0].length+E.index,t=E.input[T];"<"!==t?">"===t&&(((E,{after:e})=>{const T="</"+E[0].slice(1);return-1!==E.input.indexOf(T,e)})(E,{after:T})||e.ignoreMatch()):e.ignoreMatch()}},I={$pattern:e,keyword:T,literal:t,built_in:R},s="\\.([0-9](_?[0-9])*)",o="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",i={className:"number",variants:[{begin:`(\\b(${o})((${s})|\\.)?|(${s}))[eE][+-]?([0-9](_?[0-9])*)\\b`},{begin:`\\b(${o})\\b((${s})\\b|\\.)?|(${s})\\b`},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},a={className:"subst",begin:"\\$\\{",end:"\\}",keywords:I,contains:[]},C={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[E.BACKSLASH_ESCAPE,a],subLanguage:"xml"}},_={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[E.BACKSLASH_ESCAPE,a],subLanguage:"css"}},L={className:"string",begin:"`",end:"`",contains:[E.BACKSLASH_ESCAPE,a]},l={className:"comment",variants:[E.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+",contains:[{className:"type",begin:"\\{",end:"\\}",relevance:0},{className:"variable",begin:S+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),E.C_BLOCK_COMMENT_MODE,E.C_LINE_COMMENT_MODE]},c=[E.APOS_STRING_MODE,E.QUOTE_STRING_MODE,C,_,L,i,E.REGEXP_MODE];a.contains=c.concat({begin:/\{/,end:/\}/,keywords:I,contains:["self"].concat(c)});const D=[].concat(l,a.contains),u=D.concat([{begin:/\(/,end:/\)/,keywords:I,contains:["self"].concat(D)}]),P={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:I,contains:u};return{name:"Javascript",aliases:["js","jsx","mjs","cjs"],keywords:I,exports:{PARAMS_CONTAINS:u},illegal:/#(?![$_A-z])/,contains:[E.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},E.APOS_STRING_MODE,E.QUOTE_STRING_MODE,C,_,L,l,i,{begin:n(/[{,\n]\s*/,A(n(/(((\/\/.*$)|(\/\*(\*[^/]|[^*])*\*\/))\s*)*/,S+"\\s*:"))),relevance:0,contains:[{className:"attr",begin:S+A("\\s*:"),relevance:0}]},{begin:"("+E.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[l,E.REGEXP_MODE,{className:"function",begin:"(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+E.UNDERSCORE_IDENT_RE+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:E.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:I,contains:u}]}]},{begin:/,/,relevance:0},{className:"",begin:/\s/,end:/\s*/,skip:!0},{variants:[{begin:r,end:O},{begin:N.begin,"on:begin":N.isTrulyOpeningTag,end:N.end}],subLanguage:"xml",contains:[{begin:N.begin,end:N.end,skip:!0,contains:["self"]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,keywords:I,contains:["self",E.inherit(E.TITLE_MODE,{begin:S}),P],illegal:/%/},{beginKeywords:"while if switch catch for"},{className:"function",begin:E.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,contains:[P,E.inherit(E.TITLE_MODE,{begin:S})]},{variants:[{begin:"\\."+S},{begin:"\\$"+S}],relevance:0},{className:"class",beginKeywords:"class",end:/[{;=]/,excludeEnd:!0,illegal:/[:"[\]]/,contains:[{beginKeywords:"extends"},E.UNDERSCORE_TITLE_MODE]},{begin:/\b(?=constructor)/,end:/[{;]/,excludeEnd:!0,contains:[E.inherit(E.TITLE_MODE,{begin:S}),"self",P]},{begin:"(get|set)\\s+(?="+S+"\\()",end:/\{/,keywords:"get set",contains:[E.inherit(E.TITLE_MODE,{begin:S}),{begin:/\(\)/},P]},{begin:/\$[(.]/}]}}},23506:function(E){E.exports=function(E){const e={literal:"true false null"},T=[E.C_LINE_COMMENT_MODE,E.C_BLOCK_COMMENT_MODE],t=[E.QUOTE_STRING_MODE,E.C_NUMBER_MODE],R={end:",",endsWithParent:!0,excludeEnd:!0,contains:t,keywords:e},A={begin:/\{/,end:/\}/,contains:[{className:"attr",begin:/"/,end:/"/,contains:[E.BACKSLASH_ESCAPE],illegal:"\\n"},E.inherit(R,{begin:/:/})].concat(T),illegal:"\\S"},n={begin:"\\[",end:"\\]",contains:[E.inherit(R)],illegal:"\\S"};return t.push(A,n),T.forEach((function(E){t.push(E)})),{name:"JSON",contains:t,keywords:e,illegal:"\\S"}}},30777:function(E){var e="\\.([0-9](_*[0-9])*)",T="[0-9a-fA-F](_*[0-9a-fA-F])*",t={className:"number",variants:[{begin:`(\\b([0-9](_*[0-9])*)((${e})|\\.)?|(${e}))[eE][+-]?([0-9](_*[0-9])*)[fFdD]?\\b`},{begin:`\\b([0-9](_*[0-9])*)((${e})[fFdD]?\\b|\\.([fFdD]\\b)?)`},{begin:`(${e})[fFdD]?\\b`},{begin:"\\b([0-9](_*[0-9])*)[fFdD]\\b"},{begin:`\\b0[xX]((${T})\\.?|(${T})?\\.(${T}))[pP][+-]?([0-9](_*[0-9])*)[fFdD]?\\b`},{begin:"\\b(0|[1-9](_*[0-9])*)[lL]?\\b"},{begin:`\\b0[xX](${T})[lL]?\\b`},{begin:"\\b0(_*[0-7])*[lL]?\\b"},{begin:"\\b0[bB][01](_*[01])*[lL]?\\b"}],relevance:0};E.exports=function(E){const e={keyword:"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual",built_in:"Byte Short Char Int Long Boolean Float Double Void Unit Nothing",literal:"true false null"},T={className:"symbol",begin:E.UNDERSCORE_IDENT_RE+"@"},R={className:"subst",begin:/\$\{/,end:/\}/,contains:[E.C_NUMBER_MODE]},A={className:"variable",begin:"\\$"+E.UNDERSCORE_IDENT_RE},n={className:"string",variants:[{begin:'"""',end:'"""(?=[^"])',contains:[A,R]},{begin:"'",end:"'",illegal:/\n/,contains:[E.BACKSLASH_ESCAPE]},{begin:'"',end:'"',illegal:/\n/,contains:[E.BACKSLASH_ESCAPE,A,R]}]};R.contains.push(n);const S={className:"meta",begin:"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*"+E.UNDERSCORE_IDENT_RE+")?"},r={className:"meta",begin:"@"+E.UNDERSCORE_IDENT_RE,contains:[{begin:/\(/,end:/\)/,contains:[E.inherit(n,{className:"meta-string"})]}]},O=t,N=E.COMMENT("/\\*","\\*/",{contains:[E.C_BLOCK_COMMENT_MODE]}),I={variants:[{className:"type",begin:E.UNDERSCORE_IDENT_RE},{begin:/\(/,end:/\)/,contains:[]}]},s=I;return s.variants[1].contains=[I],I.variants[1].contains=[s],{name:"Kotlin",aliases:["kt","kts"],keywords:e,contains:[E.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"}]}),E.C_LINE_COMMENT_MODE,N,{className:"keyword",begin:/\b(break|continue|return|this)\b/,starts:{contains:[{className:"symbol",begin:/@\w+/}]}},T,S,r,{className:"function",beginKeywords:"fun",end:"[(]|$",returnBegin:!0,excludeEnd:!0,keywords:e,relevance:5,contains:[{begin:E.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,relevance:0,contains:[E.UNDERSCORE_TITLE_MODE]},{className:"type",begin:/</,end:/>/,keywords:"reified",relevance:0},{className:"params",begin:/\(/,end:/\)/,endsParent:!0,keywords:e,relevance:0,contains:[{begin:/:/,end:/[=,\/]/,endsWithParent:!0,contains:[I,E.C_LINE_COMMENT_MODE,N],relevance:0},E.C_LINE_COMMENT_MODE,N,S,r,n,E.C_NUMBER_MODE]},N]},{className:"class",beginKeywords:"class interface trait",end:/[:\{(]|$/,excludeEnd:!0,illegal:"extends implements",contains:[{beginKeywords:"public protected internal private constructor"},E.UNDERSCORE_TITLE_MODE,{className:"type",begin:/</,end:/>/,excludeBegin:!0,excludeEnd:!0,relevance:0},{className:"type",begin:/[,:]\s*/,end:/[<\(,]|$/,excludeBegin:!0,returnEnd:!0},S,r]},n,{className:"meta",begin:"^#!/usr/bin/env",end:"$",illegal:"\n"},O]}}},93018:function(E){function e(E){return function(...E){return E.map((E=>function(E){return E?"string"===typeof E?E:E.source:null}(E))).join("")}("(?=",E,")")}E.exports=function(E){const T={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:["and","as","assert","async","await","break","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","is","lambda","nonlocal|10","not","or","pass","raise","return","try","while","with","yield"],built_in:["__import__","abs","all","any","ascii","bin","bool","breakpoint","bytearray","bytes","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","exec","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","print","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"],literal:["__debug__","Ellipsis","False","None","NotImplemented","True"],type:["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"]},t={className:"meta",begin:/^(>>>|\.\.\.) /},R={className:"subst",begin:/\{/,end:/\}/,keywords:T,illegal:/#/},A={begin:/\{\{/,relevance:0},n={className:"string",contains:[E.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[E.BACKSLASH_ESCAPE,t],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[E.BACKSLASH_ESCAPE,t],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[E.BACKSLASH_ESCAPE,t,A,R]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[E.BACKSLASH_ESCAPE,t,A,R]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[E.BACKSLASH_ESCAPE,A,R]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[E.BACKSLASH_ESCAPE,A,R]},E.APOS_STRING_MODE,E.QUOTE_STRING_MODE]},S="[0-9](_?[0-9])*",r=`(\\b(${S}))?\\.(${S})|\\b(${S})\\.`,O={className:"number",relevance:0,variants:[{begin:`(\\b(${S})|(${r}))[eE][+-]?(${S})[jJ]?\\b`},{begin:`(${r})[jJ]?`},{begin:"\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?\\b"},{begin:"\\b0[bB](_?[01])+[lL]?\\b"},{begin:"\\b0[oO](_?[0-7])+[lL]?\\b"},{begin:"\\b0[xX](_?[0-9a-fA-F])+[lL]?\\b"},{begin:`\\b(${S})[jJ]\\b`}]},N={className:"comment",begin:e(/# type:/),end:/$/,keywords:T,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:!0}]},I={className:"params",variants:[{className:"",begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:T,contains:["self",t,O,n,E.HASH_COMMENT_MODE]}]};return R.contains=[n,O,t],{name:"Python",aliases:["py","gyp","ipython"],keywords:T,illegal:/(<\/|->|\?)|=>/,contains:[t,O,{begin:/\bself\b/},{beginKeywords:"if",relevance:0},n,N,E.HASH_COMMENT_MODE,{variants:[{className:"function",beginKeywords:"def"},{className:"class",beginKeywords:"class"}],end:/:/,illegal:/[${=;\n,]/,contains:[E.UNDERSCORE_TITLE_MODE,I,{begin:/->/,endsWithParent:!0,keywords:T}]},{className:"meta",begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[O,I,n]}]}}},22575:function(E){function e(E){return E?"string"===typeof E?E:E.source:null}function T(...E){return E.map((E=>e(E))).join("")}function t(...E){return"("+E.map((E=>e(E))).join("|")+")"}E.exports=function(E){const e=E.COMMENT("--","$"),R=["true","false","unknown"],A=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],n=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],S=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],r=n,O=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update   ","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year","add","asc","collation","desc","final","first","last","view"].filter((E=>!n.includes(E))),N={begin:T(/\b/,t(...r),/\s*\(/),keywords:{built_in:r}};return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:function(E,{exceptions:e,when:T}={}){const t=T;return e=e||[],E.map((E=>E.match(/\|\d+$/)||e.includes(E)?E:t(E)?`${E}|0`:E))}(O,{when:E=>E.length<3}),literal:R,type:A,built_in:["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"]},contains:[{begin:t(...S),keywords:{$pattern:/[\w\.]+/,keyword:O.concat(S),literal:R,type:A}},{className:"type",begin:t("double precision","large object","with timezone","without timezone")},N,{className:"variable",begin:/@[a-z0-9]+/},{className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/"/,end:/"/,contains:[{begin:/""/}]},E.C_NUMBER_MODE,E.C_BLOCK_COMMENT_MODE,e,{className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0}]}}},10219:function(E){const e="[A-Za-z$_][0-9A-Za-z$_]*",T=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],t=["true","false","null","undefined","NaN","Infinity"],R=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"]);function A(E){return n("(?=",E,")")}function n(...E){return E.map((E=>{return(e=E)?"string"===typeof e?e:e.source:null;var e})).join("")}E.exports=function(E){const S={$pattern:e,keyword:T.concat(["type","namespace","typedef","interface","public","private","protected","implements","declare","abstract","readonly"]),literal:t,built_in:R.concat(["any","void","number","boolean","string","object","never","enum"])},r={className:"meta",begin:"@[A-Za-z$_][0-9A-Za-z$_]*"},O=(E,e,T)=>{const t=E.contains.findIndex((E=>E.label===e));if(-1===t)throw new Error("can not find mode to replace");E.contains.splice(t,1,T)},N=function(E){const S=e,r="<>",O="</>",N={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(E,e)=>{const T=E[0].length+E.index,t=E.input[T];"<"!==t?">"===t&&(((E,{after:e})=>{const T="</"+E[0].slice(1);return-1!==E.input.indexOf(T,e)})(E,{after:T})||e.ignoreMatch()):e.ignoreMatch()}},I={$pattern:e,keyword:T,literal:t,built_in:R},s="\\.([0-9](_?[0-9])*)",o="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",i={className:"number",variants:[{begin:`(\\b(${o})((${s})|\\.)?|(${s}))[eE][+-]?([0-9](_?[0-9])*)\\b`},{begin:`\\b(${o})\\b((${s})\\b|\\.)?|(${s})\\b`},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},a={className:"subst",begin:"\\$\\{",end:"\\}",keywords:I,contains:[]},C={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[E.BACKSLASH_ESCAPE,a],subLanguage:"xml"}},_={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[E.BACKSLASH_ESCAPE,a],subLanguage:"css"}},L={className:"string",begin:"`",end:"`",contains:[E.BACKSLASH_ESCAPE,a]},l={className:"comment",variants:[E.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+",contains:[{className:"type",begin:"\\{",end:"\\}",relevance:0},{className:"variable",begin:S+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),E.C_BLOCK_COMMENT_MODE,E.C_LINE_COMMENT_MODE]},c=[E.APOS_STRING_MODE,E.QUOTE_STRING_MODE,C,_,L,i,E.REGEXP_MODE];a.contains=c.concat({begin:/\{/,end:/\}/,keywords:I,contains:["self"].concat(c)});const D=[].concat(l,a.contains),u=D.concat([{begin:/\(/,end:/\)/,keywords:I,contains:["self"].concat(D)}]),P={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:I,contains:u};return{name:"Javascript",aliases:["js","jsx","mjs","cjs"],keywords:I,exports:{PARAMS_CONTAINS:u},illegal:/#(?![$_A-z])/,contains:[E.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},E.APOS_STRING_MODE,E.QUOTE_STRING_MODE,C,_,L,l,i,{begin:n(/[{,\n]\s*/,A(n(/(((\/\/.*$)|(\/\*(\*[^/]|[^*])*\*\/))\s*)*/,S+"\\s*:"))),relevance:0,contains:[{className:"attr",begin:S+A("\\s*:"),relevance:0}]},{begin:"("+E.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[l,E.REGEXP_MODE,{className:"function",begin:"(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+E.UNDERSCORE_IDENT_RE+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:E.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:I,contains:u}]}]},{begin:/,/,relevance:0},{className:"",begin:/\s/,end:/\s*/,skip:!0},{variants:[{begin:r,end:O},{begin:N.begin,"on:begin":N.isTrulyOpeningTag,end:N.end}],subLanguage:"xml",contains:[{begin:N.begin,end:N.end,skip:!0,contains:["self"]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,keywords:I,contains:["self",E.inherit(E.TITLE_MODE,{begin:S}),P],illegal:/%/},{beginKeywords:"while if switch catch for"},{className:"function",begin:E.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,contains:[P,E.inherit(E.TITLE_MODE,{begin:S})]},{variants:[{begin:"\\."+S},{begin:"\\$"+S}],relevance:0},{className:"class",beginKeywords:"class",end:/[{;=]/,excludeEnd:!0,illegal:/[:"[\]]/,contains:[{beginKeywords:"extends"},E.UNDERSCORE_TITLE_MODE]},{begin:/\b(?=constructor)/,end:/[{;]/,excludeEnd:!0,contains:[E.inherit(E.TITLE_MODE,{begin:S}),"self",P]},{begin:"(get|set)\\s+(?="+S+"\\()",end:/\{/,keywords:"get set",contains:[E.inherit(E.TITLE_MODE,{begin:S}),{begin:/\(\)/},P]},{begin:/\$[(.]/}]}}(E);return Object.assign(N.keywords,S),N.exports.PARAMS_CONTAINS.push(r),N.contains=N.contains.concat([r,{beginKeywords:"namespace",end:/\{/,excludeEnd:!0},{beginKeywords:"interface",end:/\{/,excludeEnd:!0,keywords:"interface extends"}]),O(N,"shebang",E.SHEBANG()),O(N,"use_strict",{className:"meta",relevance:10,begin:/^\s*['"]use strict['"]/}),N.contains.find((E=>"function"===E.className)).relevance=0,Object.assign(N,{name:"TypeScript",aliases:["ts","tsx"]}),N}},88455:function(E,e,T){"use strict";var t=T(30906),R=T(96958);e.highlight=n,e.highlightAuto=function(E,e){var T,S,r,O,N=e||{},I=N.subset||t.listLanguages(),s=N.prefix,o=I.length,i=-1;null!==s&&void 0!==s||(s=A);if("string"!==typeof E)throw R("Expected `string` for value, got `%s`",E);S={relevance:0,language:null,value:[]},T={relevance:0,language:null,value:[]};for(;++i<o;)O=I[i],t.getLanguage(O)&&((r=n(O,E,e)).language=O,r.relevance>S.relevance&&(S=r),r.relevance>T.relevance&&(S=T,T=r));S.language&&(T.secondBest=S);return T},e.registerLanguage=function(E,e){t.registerLanguage(E,e)},e.listLanguages=function(){return t.listLanguages()},e.registerAlias=function(E,e){var T,R=E;e&&((R={})[E]=e);for(T in R)t.registerAliases(R[T],{languageName:T})},S.prototype.addText=function(E){var e,T,t=this.stack;if(""===E)return;e=t[t.length-1],(T=e.children[e.children.length-1])&&"text"===T.type?T.value+=E:e.children.push({type:"text",value:E})},S.prototype.addKeyword=function(E,e){this.openNode(e),this.addText(E),this.closeNode()},S.prototype.addSublanguage=function(E,e){var T=this.stack,t=T[T.length-1],R=E.rootNode.children,A=e?{type:"element",tagName:"span",properties:{className:[e]},children:R}:R;t.children=t.children.concat(A)},S.prototype.openNode=function(E){var e=this.stack,T=this.options.classPrefix+E,t=e[e.length-1],R={type:"element",tagName:"span",properties:{className:[T]},children:[]};t.children.push(R),e.push(R)},S.prototype.closeNode=function(){this.stack.pop()},S.prototype.closeAllNodes=r,S.prototype.finalize=r,S.prototype.toHTML=function(){return""};var A="hljs-";function n(E,e,T){var n,r=t.configure({}),O=(T||{}).prefix;if("string"!==typeof E)throw R("Expected `string` for name, got `%s`",E);if(!t.getLanguage(E))throw R("Unknown language: `%s` is not registered",E);if("string"!==typeof e)throw R("Expected `string` for value, got `%s`",e);if(null!==O&&void 0!==O||(O=A),t.configure({__emitter:S,classPrefix:O}),n=t.highlight(e,{language:E,ignoreIllegals:!0}),t.configure(r||{}),n.errorRaised)throw n.errorRaised;return{relevance:n.relevance,language:n.language,value:n.emitter.rootNode.children}}function S(E){this.options=E,this.rootNode={children:[]},this.stack=[this.rootNode]}function r(){}},48941:function(E,e,T){"use strict";T.d(e,{Z:function(){return A}});var t=T(27378),R={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const A=((E,e)=>{const T=(0,t.forwardRef)((({color:T="currentColor",size:A=24,strokeWidth:n=2,children:S,...r},O)=>{return(0,t.createElement)("svg",{ref:O,...R,width:A,height:A,stroke:T,strokeWidth:n,className:`lucide lucide-${N=E,N.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,...r},[...e.map((([E,e])=>(0,t.createElement)(E,e))),...(Array.isArray(S)?S:[S])||[]]);var N}));return T.displayName=`${E}`,T})("Microscope",[["path",{d:"M6 18h8",key:"1borvv"}],["path",{d:"M3 22h18",key:"8prr45"}],["path",{d:"M14 22a7 7 0 1 0 0-14h-1",key:"1jwaiy"}],["path",{d:"M9 14h2",key:"197e7h"}],["path",{d:"M8 6h4",key:"i9thid"}],["path",{d:"M13 10V6.5a.5.5 0 0 0-.5-.5.5.5 0 0 1-.5-.5V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2.5a.5.5 0 0 1-.5.5.5.5 0 0 0-.5.5V10c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2Z",key:"z62yqi"}]])},44218:function(E,e,T){"use strict";function t(E){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(E){return typeof E}:function(E){return E&&"function"==typeof Symbol&&E.constructor===Symbol&&E!==Symbol.prototype?"symbol":typeof E},t(E)}Object.defineProperty(e,"__esModule",{value:!0}),e.CopyToClipboard=void 0;var R=S(T(27378)),A=S(T(36012)),n=["text","onCopy","options","children"];function S(E){return E&&E.__esModule?E:{default:E}}function r(E,e){var T=Object.keys(E);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(E);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(E,e).enumerable}))),T.push.apply(T,t)}return T}function O(E){for(var e=1;e<arguments.length;e++){var T=null!=arguments[e]?arguments[e]:{};e%2?r(Object(T),!0).forEach((function(e){L(E,e,T[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(E,Object.getOwnPropertyDescriptors(T)):r(Object(T)).forEach((function(e){Object.defineProperty(E,e,Object.getOwnPropertyDescriptor(T,e))}))}return E}function N(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}function I(E,e){if(!(E instanceof e))throw new TypeError("Cannot call a class as a function")}function s(E,e){for(var T=0;T<e.length;T++){var t=e[T];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(E,t.key,t)}}function o(E,e){return o=Object.setPrototypeOf||function(E,e){return E.__proto__=e,E},o(E,e)}function i(E){var e=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(E){return!1}}();return function(){var T,t=_(E);if(e){var R=_(this).constructor;T=Reflect.construct(t,arguments,R)}else T=t.apply(this,arguments);return a(this,T)}}function a(E,e){if(e&&("object"===t(e)||"function"===typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return C(E)}function C(E){if(void 0===E)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return E}function _(E){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(E){return E.__proto__||Object.getPrototypeOf(E)},_(E)}function L(E,e,T){return e in E?Object.defineProperty(E,e,{value:T,enumerable:!0,configurable:!0,writable:!0}):E[e]=T,E}var l=function(E){!function(E,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");E.prototype=Object.create(e&&e.prototype,{constructor:{value:E,writable:!0,configurable:!0}}),Object.defineProperty(E,"prototype",{writable:!1}),e&&o(E,e)}(r,E);var e,T,t,S=i(r);function r(){var E;I(this,r);for(var e=arguments.length,T=new Array(e),t=0;t<e;t++)T[t]=arguments[t];return L(C(E=S.call.apply(S,[this].concat(T))),"onClick",(function(e){var T=E.props,t=T.text,n=T.onCopy,S=T.children,r=T.options,O=R.default.Children.only(S),N=(0,A.default)(t,r);n&&n(t,N),O&&O.props&&"function"===typeof O.props.onClick&&O.props.onClick(e)})),E}return e=r,(T=[{key:"render",value:function(){var E=this.props,e=(E.text,E.onCopy,E.options,E.children),T=N(E,n),t=R.default.Children.only(e);return R.default.cloneElement(t,O(O({},T),{},{onClick:this.onClick}))}}])&&s(e.prototype,T),t&&s(e,t),Object.defineProperty(e,"prototype",{writable:!1}),r}(R.default.PureComponent);e.CopyToClipboard=l,L(l,"defaultProps",{onCopy:void 0,options:void 0})},24306:function(E,e,T){"use strict";var t=T(44218).CopyToClipboard;t.CopyToClipboard=t,E.exports=t},43871:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("polyline",{points:"9 10 4 15 9 20"}),t.createElement("path",{d:"M20 4v7a4 4 0 0 1-4 4H4"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="CornerDownLeft",e.Z=r},30337:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("line",{x1:"4",y1:"9",x2:"20",y2:"9"}),t.createElement("line",{x1:"4",y1:"15",x2:"20",y2:"15"}),t.createElement("line",{x1:"10",y1:"3",x2:"8",y2:"21"}),t.createElement("line",{x1:"16",y1:"3",x2:"14",y2:"21"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="Hash",e.Z=r},79214:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("polyline",{points:"22 12 16 12 14 15 10 15 8 12 2 12"}),t.createElement("path",{d:"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="Inbox",e.Z=r},40369:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("circle",{cx:"12",cy:"12",r:"10"}),t.createElement("circle",{cx:"12",cy:"12",r:"4"}),t.createElement("line",{x1:"4.93",y1:"4.93",x2:"9.17",y2:"9.17"}),t.createElement("line",{x1:"14.83",y1:"14.83",x2:"19.07",y2:"19.07"}),t.createElement("line",{x1:"14.83",y1:"9.17",x2:"19.07",y2:"4.93"}),t.createElement("line",{x1:"14.83",y1:"9.17",x2:"18.36",y2:"5.64"}),t.createElement("line",{x1:"4.93",y1:"19.07",x2:"9.17",y2:"14.83"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="LifeBuoy",e.Z=r},1086:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("path",{d:"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="MessageSquare",e.Z=r},29087:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("path",{d:"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="Phone",e.Z=r},25855:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("path",{d:"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"}),t.createElement("polyline",{points:"17 21 17 13 7 13 7 21"}),t.createElement("polyline",{points:"7 3 7 8 15 8"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="Save",e.Z=r},85501:function(E,e,T){"use strict";var t=T(27378),R=T(23615),A=T.n(R);function n(){return n=Object.assign||function(E){for(var e=1;e<arguments.length;e++){var T=arguments[e];for(var t in T)Object.prototype.hasOwnProperty.call(T,t)&&(E[t]=T[t])}return E},n.apply(this,arguments)}function S(E,e){if(null==E)return{};var T,t,R=function(E,e){if(null==E)return{};var T,t,R={},A=Object.keys(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||(R[T]=E[T]);return R}(E,e);if(Object.getOwnPropertySymbols){var A=Object.getOwnPropertySymbols(E);for(t=0;t<A.length;t++)T=A[t],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(R[T]=E[T])}return R}var r=(0,t.forwardRef)((function(E,e){var T=E.color,R=void 0===T?"currentColor":T,A=E.size,r=void 0===A?24:A,O=S(E,["color","size"]);return t.createElement("svg",n({ref:e,xmlns:"http://www.w3.org/2000/svg",width:r,height:r,viewBox:"0 0 24 24",fill:"none",stroke:R,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},O),t.createElement("circle",{cx:"11",cy:"11",r:"8"}),t.createElement("line",{x1:"21",y1:"21",x2:"16.65",y2:"16.65"}))}));r.propTypes={color:A().string,size:A().oneOfType([A().string,A().number])},r.displayName="Search",e.Z=r},12594:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(35001)).default;e.Z=R},56138:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(17927)).default;e.Z=R},91780:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(84281)).default;e.Z=R},48386:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(81247)).default;e.Z=R},11315:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(23506)).default;e.Z=R},47549:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(30777)).default;e.Z=R},69144:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(93018)).default;e.Z=R},25904:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(22575)).default;e.Z=R},4999:function(E,e,T){"use strict";var t=T(73203);e.Z=void 0;var R=t(T(10219)).default;e.Z=R},41136:function(E,e,T){"use strict";T.d(e,{Z:function(){return H}});var t=T(30808);var R=T(1793);var A=T(64013);function n(E){return function(E){if(Array.isArray(E))return(0,R.Z)(E)}(E)||function(E){if("undefined"!==typeof Symbol&&null!=E[Symbol.iterator]||null!=E["@@iterator"])return Array.from(E)}(E)||(0,A.Z)(E)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var S=T(64649),r=T(27378),O=T(25773);function N(E,e){var T=Object.keys(E);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(E);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(E,e).enumerable}))),T.push.apply(T,t)}return T}function I(E){for(var e=1;e<arguments.length;e++){var T=null!=arguments[e]?arguments[e]:{};e%2?N(Object(T),!0).forEach((function(e){(0,S.Z)(E,e,T[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(E,Object.getOwnPropertyDescriptors(T)):N(Object(T)).forEach((function(e){Object.defineProperty(E,e,Object.getOwnPropertyDescriptor(T,e))}))}return E}var s={};function o(E){if(0===E.length||1===E.length)return E;var e=E.join(".");return s[e]||(s[e]=function(E){var e=E.length;return 0===e||1===e?E:2===e?[E[0],E[1],"".concat(E[0],".").concat(E[1]),"".concat(E[1],".").concat(E[0])]:3===e?[E[0],E[1],E[2],"".concat(E[0],".").concat(E[1]),"".concat(E[0],".").concat(E[2]),"".concat(E[1],".").concat(E[0]),"".concat(E[1],".").concat(E[2]),"".concat(E[2],".").concat(E[0]),"".concat(E[2],".").concat(E[1]),"".concat(E[0],".").concat(E[1],".").concat(E[2]),"".concat(E[0],".").concat(E[2],".").concat(E[1]),"".concat(E[1],".").concat(E[0],".").concat(E[2]),"".concat(E[1],".").concat(E[2],".").concat(E[0]),"".concat(E[2],".").concat(E[0],".").concat(E[1]),"".concat(E[2],".").concat(E[1],".").concat(E[0])]:e>=4?[E[0],E[1],E[2],E[3],"".concat(E[0],".").concat(E[1]),"".concat(E[0],".").concat(E[2]),"".concat(E[0],".").concat(E[3]),"".concat(E[1],".").concat(E[0]),"".concat(E[1],".").concat(E[2]),"".concat(E[1],".").concat(E[3]),"".concat(E[2],".").concat(E[0]),"".concat(E[2],".").concat(E[1]),"".concat(E[2],".").concat(E[3]),"".concat(E[3],".").concat(E[0]),"".concat(E[3],".").concat(E[1]),"".concat(E[3],".").concat(E[2]),"".concat(E[0],".").concat(E[1],".").concat(E[2]),"".concat(E[0],".").concat(E[1],".").concat(E[3]),"".concat(E[0],".").concat(E[2],".").concat(E[1]),"".concat(E[0],".").concat(E[2],".").concat(E[3]),"".concat(E[0],".").concat(E[3],".").concat(E[1]),"".concat(E[0],".").concat(E[3],".").concat(E[2]),"".concat(E[1],".").concat(E[0],".").concat(E[2]),"".concat(E[1],".").concat(E[0],".").concat(E[3]),"".concat(E[1],".").concat(E[2],".").concat(E[0]),"".concat(E[1],".").concat(E[2],".").concat(E[3]),"".concat(E[1],".").concat(E[3],".").concat(E[0]),"".concat(E[1],".").concat(E[3],".").concat(E[2]),"".concat(E[2],".").concat(E[0],".").concat(E[1]),"".concat(E[2],".").concat(E[0],".").concat(E[3]),"".concat(E[2],".").concat(E[1],".").concat(E[0]),"".concat(E[2],".").concat(E[1],".").concat(E[3]),"".concat(E[2],".").concat(E[3],".").concat(E[0]),"".concat(E[2],".").concat(E[3],".").concat(E[1]),"".concat(E[3],".").concat(E[0],".").concat(E[1]),"".concat(E[3],".").concat(E[0],".").concat(E[2]),"".concat(E[3],".").concat(E[1],".").concat(E[0]),"".concat(E[3],".").concat(E[1],".").concat(E[2]),"".concat(E[3],".").concat(E[2],".").concat(E[0]),"".concat(E[3],".").concat(E[2],".").concat(E[1]),"".concat(E[0],".").concat(E[1],".").concat(E[2],".").concat(E[3]),"".concat(E[0],".").concat(E[1],".").concat(E[3],".").concat(E[2]),"".concat(E[0],".").concat(E[2],".").concat(E[1],".").concat(E[3]),"".concat(E[0],".").concat(E[2],".").concat(E[3],".").concat(E[1]),"".concat(E[0],".").concat(E[3],".").concat(E[1],".").concat(E[2]),"".concat(E[0],".").concat(E[3],".").concat(E[2],".").concat(E[1]),"".concat(E[1],".").concat(E[0],".").concat(E[2],".").concat(E[3]),"".concat(E[1],".").concat(E[0],".").concat(E[3],".").concat(E[2]),"".concat(E[1],".").concat(E[2],".").concat(E[0],".").concat(E[3]),"".concat(E[1],".").concat(E[2],".").concat(E[3],".").concat(E[0]),"".concat(E[1],".").concat(E[3],".").concat(E[0],".").concat(E[2]),"".concat(E[1],".").concat(E[3],".").concat(E[2],".").concat(E[0]),"".concat(E[2],".").concat(E[0],".").concat(E[1],".").concat(E[3]),"".concat(E[2],".").concat(E[0],".").concat(E[3],".").concat(E[1]),"".concat(E[2],".").concat(E[1],".").concat(E[0],".").concat(E[3]),"".concat(E[2],".").concat(E[1],".").concat(E[3],".").concat(E[0]),"".concat(E[2],".").concat(E[3],".").concat(E[0],".").concat(E[1]),"".concat(E[2],".").concat(E[3],".").concat(E[1],".").concat(E[0]),"".concat(E[3],".").concat(E[0],".").concat(E[1],".").concat(E[2]),"".concat(E[3],".").concat(E[0],".").concat(E[2],".").concat(E[1]),"".concat(E[3],".").concat(E[1],".").concat(E[0],".").concat(E[2]),"".concat(E[3],".").concat(E[1],".").concat(E[2],".").concat(E[0]),"".concat(E[3],".").concat(E[2],".").concat(E[0],".").concat(E[1]),"".concat(E[3],".").concat(E[2],".").concat(E[1],".").concat(E[0])]:void 0}(E)),s[e]}function i(E){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},T=arguments.length>2?arguments[2]:void 0,t=E.filter((function(E){return"token"!==E})),R=o(t);return R.reduce((function(E,e){return I(I({},E),T[e])}),e)}function a(E){return E.join(" ")}function C(E){var e=E.node,T=E.stylesheet,t=E.style,R=void 0===t?{}:t,A=E.useInlineStyles,n=E.key,S=e.properties,N=e.type,s=e.tagName,o=e.value;if("text"===N)return o;if(s){var _,L=function(E,e){var T=0;return function(t){return T+=1,t.map((function(t,R){return C({node:t,stylesheet:E,useInlineStyles:e,key:"code-segment-".concat(T,"-").concat(R)})}))}}(T,A);if(A){var l=Object.keys(T).reduce((function(E,e){return e.split(".").forEach((function(e){E.includes(e)||E.push(e)})),E}),[]),c=S.className&&S.className.includes("token")?["token"]:[],D=S.className&&c.concat(S.className.filter((function(E){return!l.includes(E)})));_=I(I({},S),{},{className:a(D)||void 0,style:i(S.className,Object.assign({},S.style,R),T)})}else _=I(I({},S),{},{className:a(S.className)});var u=L(e.children);return r.createElement(s,(0,O.Z)({key:n},_),u)}}var _=["language","children","style","customStyle","codeTagProps","useInlineStyles","showLineNumbers","showInlineLineNumbers","startingLineNumber","lineNumberContainerStyle","lineNumberStyle","wrapLines","wrapLongLines","lineProps","renderer","PreTag","CodeTag","code","astGenerator"];function L(E,e){var T=Object.keys(E);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(E);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(E,e).enumerable}))),T.push.apply(T,t)}return T}function l(E){for(var e=1;e<arguments.length;e++){var T=null!=arguments[e]?arguments[e]:{};e%2?L(Object(T),!0).forEach((function(e){(0,S.Z)(E,e,T[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(E,Object.getOwnPropertyDescriptors(T)):L(Object(T)).forEach((function(e){Object.defineProperty(E,e,Object.getOwnPropertyDescriptor(T,e))}))}return E}var c=/\n/g;function D(E){var e=E.codeString,T=E.codeStyle,t=E.containerStyle,R=void 0===t?{float:"left",paddingRight:"10px"}:t,A=E.numberStyle,n=void 0===A?{}:A,S=E.startingLineNumber;return r.createElement("code",{style:Object.assign({},T,R)},function(E){var e=E.lines,T=E.startingLineNumber,t=E.style;return e.map((function(E,e){var R=e+T;return r.createElement("span",{key:"line-".concat(e),className:"react-syntax-highlighter-line-number",style:"function"===typeof t?t(R):t},"".concat(R,"\n"))}))}({lines:e.replace(/\n$/,"").split("\n"),style:n,startingLineNumber:S}))}function u(E,e){return{type:"element",tagName:"span",properties:{key:"line-number--".concat(E),className:["comment","linenumber","react-syntax-highlighter-line-number"],style:e},children:[{type:"text",value:E}]}}function P(E,e,T){var t,R={display:"inline-block",minWidth:(t=T,"".concat(t.toString().length,".25em")),paddingRight:"1em",textAlign:"right",userSelect:"none"},A="function"===typeof E?E(e):E;return l(l({},R),A)}function M(E){var e=E.children,T=E.lineNumber,t=E.lineNumberStyle,R=E.largestLineNumber,A=E.showInlineLineNumbers,n=E.lineProps,S=void 0===n?{}:n,r=E.className,O=void 0===r?[]:r,N=E.showLineNumbers,I=E.wrapLongLines,s="function"===typeof S?S(T):S;if(s.className=O,T&&A){var o=P(t,T,R);e.unshift(u(T,o))}return I&N&&(s.style=l(l({},s.style),{},{display:"flex"})),{type:"element",tagName:"span",properties:s,children:e}}function U(E){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],t=0;t<E.length;t++){var R=E[t];if("text"===R.type)T.push(M({children:[R],className:n(new Set(e))}));else if(R.children){var A=e.concat(R.properties.className);U(R.children,A).forEach((function(E){return T.push(E)}))}}return T}function d(E,e,T,t,R,A,n,S,r){var O,N=U(E.value),I=[],s=-1,o=0;function i(E,e){var A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return M({children:E,lineNumber:e,lineNumberStyle:S,largestLineNumber:n,showInlineLineNumbers:R,lineProps:T,className:A,showLineNumbers:t,wrapLongLines:r})}function a(E,e){if(t&&e&&R){var T=P(S,e,n);E.unshift(u(e,T))}return E}function C(E,T){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return e||t.length>0?i(E,T,t):a(E,T)}for(var _=function(){var E=N[o],e=E.children[0].value;if(e.match(c)){var T=e.split("\n");T.forEach((function(e,R){var n=t&&I.length+A,S={type:"text",value:"".concat(e,"\n")};if(0===R){var r=C(N.slice(s+1,o).concat(M({children:[S],className:E.properties.className})),n);I.push(r)}else if(R===T.length-1){var O=N[o+1]&&N[o+1].children&&N[o+1].children[0],i={type:"text",value:"".concat(e)};if(O){var a=M({children:[i],className:E.properties.className});N.splice(o+1,0,a)}else{var _=C([i],n,E.properties.className);I.push(_)}}else{var L=C([S],n,E.properties.className);I.push(L)}})),s=o}o++};o<N.length;)_();if(s!==N.length-1){var L=N.slice(s+1,N.length);if(L&&L.length){var l=C(L,t&&I.length+A);I.push(l)}}return e?I:(O=[]).concat.apply(O,I)}function p(E){var e=E.rows,T=E.stylesheet,t=E.useInlineStyles;return e.map((function(E,e){return C({node:E,stylesheet:T,useInlineStyles:t,key:"code-segement".concat(e)})}))}function f(E){return E&&"undefined"!==typeof E.highlightAuto}var G,h,m=T(88455),g=(G=m,h={},function(E){var e=E.language,T=E.children,R=E.style,A=void 0===R?h:R,n=E.customStyle,S=void 0===n?{}:n,O=E.codeTagProps,N=void 0===O?{className:e?"language-".concat(e):void 0,style:l(l({},A['code[class*="language-"]']),A['code[class*="language-'.concat(e,'"]')])}:O,I=E.useInlineStyles,s=void 0===I||I,o=E.showLineNumbers,i=void 0!==o&&o,a=E.showInlineLineNumbers,C=void 0===a||a,L=E.startingLineNumber,c=void 0===L?1:L,u=E.lineNumberContainerStyle,P=E.lineNumberStyle,M=void 0===P?{}:P,U=E.wrapLines,m=E.wrapLongLines,g=void 0!==m&&m,H=E.lineProps,B=void 0===H?{}:H,F=E.renderer,Y=E.PreTag,b=void 0===Y?"pre":Y,y=E.CodeTag,V=void 0===y?"code":y,v=E.code,W=void 0===v?(Array.isArray(T)?T[0]:T)||"":v,X=E.astGenerator,x=function(E,e){if(null==E)return{};var T,R,A=(0,t.Z)(E,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(E);for(R=0;R<n.length;R++)T=n[R],e.indexOf(T)>=0||Object.prototype.propertyIsEnumerable.call(E,T)&&(A[T]=E[T])}return A}(E,_);X=X||G;var w=i?r.createElement(D,{containerStyle:u,codeStyle:N.style||{},numberStyle:M,startingLineNumber:c,codeString:W}):null,K=A.hljs||A['pre[class*="language-"]']||{backgroundColor:"#fff"},k=f(X)?"hljs":"prismjs",$=s?Object.assign({},x,{style:Object.assign({},K,S)}):Object.assign({},x,{className:x.className?"".concat(k," ").concat(x.className):k,style:Object.assign({},S)});if(N.style=l(l({},N.style),{},g?{whiteSpace:"pre-wrap"}:{whiteSpace:"pre"}),!X)return r.createElement(b,$,w,r.createElement(V,N,W));(void 0===U&&F||g)&&(U=!0),F=F||p;var J=[{type:"text",value:W}],Z=function(E){var e=E.astGenerator,T=E.language,t=E.code,R=E.defaultCodeValue;if(f(e)){var A=function(E,e){return-1!==E.listLanguages().indexOf(e)}(e,T);return"text"===T?{value:R,language:"text"}:A?e.highlight(T,t):e.highlightAuto(t)}try{return T&&"text"!==T?{value:e.highlight(t,T)}:{value:R}}catch(n){return{value:R}}}({astGenerator:X,language:e,code:W,defaultCodeValue:J});null===Z.language&&(Z.value=J);var Q=d(Z,U,B,i,C,c,Z.value.length+c,M,g);return r.createElement(b,$,r.createElement(V,N,!C&&w,F({rows:Q,stylesheet:A,useInlineStyles:s})))});g.registerLanguage=m.registerLanguage;var H=g},62311:function(E,e){var T=function(E,e){if(!(this instanceof T))return new T(E,e);this.INITIALIZING=-1,this.CONNECTING=0,this.OPEN=1,this.CLOSED=2,this.url=E,e=e||{},this.headers=e.headers||{},this.payload=void 0!==e.payload?e.payload:"",this.method=e.method||(this.payload?"POST":"GET"),this.withCredentials=!!e.withCredentials,this.FIELD_SEPARATOR=":",this.listeners={},this.xhr=null,this.readyState=this.INITIALIZING,this.progress=0,this.chunk="",this.addEventListener=function(E,e){void 0===this.listeners[E]&&(this.listeners[E]=[]),-1===this.listeners[E].indexOf(e)&&this.listeners[E].push(e)},this.removeEventListener=function(E,e){if(void 0!==this.listeners[E]){var T=[];this.listeners[E].forEach((function(E){E!==e&&T.push(E)})),0===T.length?delete this.listeners[E]:this.listeners[E]=T}},this.dispatchEvent=function(E){if(!E)return!0;E.source=this;var e="on"+E.type;return(!this.hasOwnProperty(e)||(this[e].call(this,E),!E.defaultPrevented))&&(!this.listeners[E.type]||this.listeners[E.type].every((function(e){return e(E),!E.defaultPrevented})))},this._setReadyState=function(E){var e=new CustomEvent("readystatechange");e.readyState=E,this.readyState=E,this.dispatchEvent(e)},this._onStreamFailure=function(E){var e=new CustomEvent("error");e.data=E.currentTarget.response,this.dispatchEvent(e),this.close()},this._onStreamAbort=function(E){this.dispatchEvent(new CustomEvent("abort")),this.close()},this._onStreamProgress=function(E){if(this.xhr)if(200===this.xhr.status){this.readyState==this.CONNECTING&&(this.dispatchEvent(new CustomEvent("open")),this._setReadyState(this.OPEN));var e=this.xhr.responseText.substring(this.progress);this.progress+=e.length,e.split(/(\r\n|\r|\n){2}/g).forEach(function(E){0===E.trim().length?(this.dispatchEvent(this._parseEventChunk(this.chunk.trim())),this.chunk=""):this.chunk+=E}.bind(this))}else this._onStreamFailure(E)},this._onStreamLoaded=function(E){this._onStreamProgress(E),this.dispatchEvent(this._parseEventChunk(this.chunk)),this.chunk=""},this._parseEventChunk=function(E){if(!E||0===E.length)return null;var e={id:null,retry:null,data:"",event:"message"};E.split(/\n|\r\n|\r/).forEach(function(E){var T=(E=E.trimRight()).indexOf(this.FIELD_SEPARATOR);if(!(T<=0)){var t=E.substring(0,T);if(t in e){var R=E.substring(T+1).trimLeft();"data"===t?e[t]+=R:e[t]=R}}}.bind(this));var T=new CustomEvent(e.event);return T.data=e.data,T.id=e.id,T},this._checkStreamClosed=function(){this.xhr&&this.xhr.readyState===XMLHttpRequest.DONE&&this._setReadyState(this.CLOSED)},this.stream=function(){for(var E in this._setReadyState(this.CONNECTING),this.xhr=new XMLHttpRequest,this.xhr.addEventListener("progress",this._onStreamProgress.bind(this)),this.xhr.addEventListener("load",this._onStreamLoaded.bind(this)),this.xhr.addEventListener("readystatechange",this._checkStreamClosed.bind(this)),this.xhr.addEventListener("error",this._onStreamFailure.bind(this)),this.xhr.addEventListener("abort",this._onStreamAbort.bind(this)),this.xhr.open(this.method,this.url),this.headers)this.xhr.setRequestHeader(E,this.headers[E]);this.xhr.withCredentials=this.withCredentials,this.xhr.send(this.payload)},this.close=function(){this.readyState!==this.CLOSED&&(this.xhr.abort(),this.xhr=null,this._setReadyState(this.CLOSED))}};e.L=T},93185:function(E){E.exports=function(){var E=document.getSelection();if(!E.rangeCount)return function(){};for(var e=document.activeElement,T=[],t=0;t<E.rangeCount;t++)T.push(E.getRangeAt(t));switch(e.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":e.blur();break;default:e=null}return E.removeAllRanges(),function(){"Caret"===E.type&&E.removeAllRanges(),E.rangeCount||T.forEach((function(e){E.addRange(e)})),e&&e.focus()}}},73203:function(E){E.exports=function(E){return E&&E.__esModule?E:{default:E}},E.exports.__esModule=!0,E.exports.default=E.exports},1793:function(E,e,T){"use strict";function t(E,e){(null==e||e>E.length)&&(e=E.length);for(var T=0,t=new Array(e);T<e;T++)t[T]=E[T];return t}T.d(e,{Z:function(){return t}})},64013:function(E,e,T){"use strict";T.d(e,{Z:function(){return R}});var t=T(1793);function R(E,e){if(E){if("string"===typeof E)return(0,t.Z)(E,e);var T=Object.prototype.toString.call(E).slice(8,-1);return"Object"===T&&E.constructor&&(T=E.constructor.name),"Map"===T||"Set"===T?Array.from(E):"Arguments"===T||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(T)?(0,t.Z)(E,e):void 0}}},24284:function(E,e,T){"use strict";T.d(e,{mY:function(){return Le},fu:function(){return Ie},U8:function(){return Ue}});var t=T(25773),R=T(27378),A=T.t(R,2);function n(E,e,{checkForDefaultPrevented:T=!0}={}){return function(t){if(null===E||void 0===E||E(t),!1===T||!t.defaultPrevented)return null===e||void 0===e?void 0:e(t)}}function S(...E){return e=>E.forEach((E=>function(E,e){"function"===typeof E?E(e):null!==E&&void 0!==E&&(E.current=e)}(E,e)))}function r(...E){return(0,R.useCallback)(S(...E),E)}function O(...E){const e=E[0];if(1===E.length)return e;const T=()=>{const T=E.map((E=>({useScope:E(),scopeName:E.scopeName})));return function(E){const t=T.reduce(((e,{useScope:T,scopeName:t})=>({...e,...T(E)[`__scope${t}`]})),{});return(0,R.useMemo)((()=>({[`__scope${e.scopeName}`]:t})),[t])}};return T.scopeName=e.scopeName,T}const N=Boolean(null===globalThis||void 0===globalThis?void 0:globalThis.document)?R.useLayoutEffect:()=>{},I=A["useId".toString()]||(()=>{});let s=0;function o(E){const[e,T]=R.useState(I());return N((()=>{E||T((E=>null!==E&&void 0!==E?E:String(s++)))}),[E]),E||(e?`radix-${e}`:"")}function i(E){const e=(0,R.useRef)(E);return(0,R.useEffect)((()=>{e.current=E})),(0,R.useMemo)((()=>(...E)=>{var T;return null===(T=e.current)||void 0===T?void 0:T.call(e,...E)}),[])}function a({prop:E,defaultProp:e,onChange:T=(()=>{})}){const[t,A]=function({defaultProp:E,onChange:e}){const T=(0,R.useState)(E),[t]=T,A=(0,R.useRef)(t),n=i(e);return(0,R.useEffect)((()=>{A.current!==t&&(n(t),A.current=t)}),[t,A,n]),T}({defaultProp:e,onChange:T}),n=void 0!==E,S=n?E:t,r=i(T);return[S,(0,R.useCallback)((e=>{if(n){const T=e,t="function"===typeof e?T(E):e;t!==E&&r(t)}else A(e)}),[n,E,A,r])]}var C=T(31542);const _=(0,R.forwardRef)(((E,e)=>{const{children:T,...A}=E,n=R.Children.toArray(T),S=n.find(c);if(S){const E=S.props.children,T=n.map((e=>e===S?R.Children.count(E)>1?R.Children.only(null):(0,R.isValidElement)(E)?E.props.children:null:e));return(0,R.createElement)(L,(0,t.Z)({},A,{ref:e}),(0,R.isValidElement)(E)?(0,R.cloneElement)(E,void 0,T):null)}return(0,R.createElement)(L,(0,t.Z)({},A,{ref:e}),T)}));_.displayName="Slot";const L=(0,R.forwardRef)(((E,e)=>{const{children:T,...t}=E;return(0,R.isValidElement)(T)?(0,R.cloneElement)(T,{...D(t,T.props),ref:S(e,T.ref)}):R.Children.count(T)>1?R.Children.only(null):null}));L.displayName="SlotClone";const l=({children:E})=>(0,R.createElement)(R.Fragment,null,E);function c(E){return(0,R.isValidElement)(E)&&E.type===l}function D(E,e){const T={...e};for(const t in e){const R=E[t],A=e[t];/^on[A-Z]/.test(t)?T[t]=(...E)=>{null===A||void 0===A||A(...E),null===R||void 0===R||R(...E)}:"style"===t?T[t]={...R,...A}:"className"===t&&(T[t]=[R,A].filter(Boolean).join(" "))}return{...E,...T}}const u=["a","button","div","h2","h3","img","li","nav","ol","p","span","svg","ul"].reduce(((E,e)=>{const T=(0,R.forwardRef)(((E,T)=>{const{asChild:A,...n}=E,S=A?_:e;return(0,R.useEffect)((()=>{window[Symbol.for("radix-ui")]=!0}),[]),(0,R.createElement)(S,(0,t.Z)({},n,{ref:T}))}));return T.displayName=`Primitive.${e}`,{...E,[e]:T}}),{});const P="dismissableLayer.update",M="dismissableLayer.pointerDownOutside",U="dismissableLayer.focusOutside";let d;const p=(0,R.createContext)({layers:new Set,layersWithOutsidePointerEventsDisabled:new Set,branches:new Set}),f=(0,R.forwardRef)(((E,e)=>{const{disableOutsidePointerEvents:T=!1,onEscapeKeyDown:A,onPointerDownOutside:S,onFocusOutside:O,onInteractOutside:N,onDismiss:I,...s}=E,o=(0,R.useContext)(p),[a,C]=(0,R.useState)(null),[,_]=(0,R.useState)({}),L=r(e,(E=>C(E))),l=Array.from(o.layers),[c]=[...o.layersWithOutsidePointerEventsDisabled].slice(-1),D=l.indexOf(c),f=a?l.indexOf(a):-1,m=o.layersWithOutsidePointerEventsDisabled.size>0,g=f>=D,H=function(E){const e=i(E),T=(0,R.useRef)(!1),t=(0,R.useRef)((()=>{}));return(0,R.useEffect)((()=>{const E=E=>{if(E.target&&!T.current){const R={originalEvent:E};function A(){h(M,e,R,{discrete:!0})}"touch"===E.pointerType?(document.removeEventListener("click",t.current),t.current=A,document.addEventListener("click",t.current,{once:!0})):A()}T.current=!1},R=window.setTimeout((()=>{document.addEventListener("pointerdown",E)}),0);return()=>{window.clearTimeout(R),document.removeEventListener("pointerdown",E),document.removeEventListener("click",t.current)}}),[e]),{onPointerDownCapture:()=>T.current=!0}}((E=>{const e=E.target,T=[...o.branches].some((E=>E.contains(e)));g&&!T&&(null===S||void 0===S||S(E),null===N||void 0===N||N(E),E.defaultPrevented||null===I||void 0===I||I())})),B=function(E){const e=i(E),T=(0,R.useRef)(!1);return(0,R.useEffect)((()=>{const E=E=>{if(E.target&&!T.current){h(U,e,{originalEvent:E},{discrete:!1})}};return document.addEventListener("focusin",E),()=>document.removeEventListener("focusin",E)}),[e]),{onFocusCapture:()=>T.current=!0,onBlurCapture:()=>T.current=!1}}((E=>{const e=E.target;[...o.branches].some((E=>E.contains(e)))||(null===O||void 0===O||O(E),null===N||void 0===N||N(E),E.defaultPrevented||null===I||void 0===I||I())}));return function(E){const e=i(E);(0,R.useEffect)((()=>{const E=E=>{"Escape"===E.key&&e(E)};return document.addEventListener("keydown",E),()=>document.removeEventListener("keydown",E)}),[e])}((E=>{f===o.layers.size-1&&(null===A||void 0===A||A(E),!E.defaultPrevented&&I&&(E.preventDefault(),I()))})),(0,R.useEffect)((()=>{if(a)return T&&(0===o.layersWithOutsidePointerEventsDisabled.size&&(d=document.body.style.pointerEvents,document.body.style.pointerEvents="none"),o.layersWithOutsidePointerEventsDisabled.add(a)),o.layers.add(a),G(),()=>{T&&1===o.layersWithOutsidePointerEventsDisabled.size&&(document.body.style.pointerEvents=d)}}),[a,T,o]),(0,R.useEffect)((()=>()=>{a&&(o.layers.delete(a),o.layersWithOutsidePointerEventsDisabled.delete(a),G())}),[a,o]),(0,R.useEffect)((()=>{const E=()=>_({});return document.addEventListener(P,E),()=>document.removeEventListener(P,E)}),[]),(0,R.createElement)(u.div,(0,t.Z)({},s,{ref:L,style:{pointerEvents:m?g?"auto":"none":void 0,...E.style},onFocusCapture:n(E.onFocusCapture,B.onFocusCapture),onBlurCapture:n(E.onBlurCapture,B.onBlurCapture),onPointerDownCapture:n(E.onPointerDownCapture,H.onPointerDownCapture)}))}));function G(){const E=new CustomEvent(P);document.dispatchEvent(E)}function h(E,e,T,{discrete:t}){const R=T.originalEvent.target,A=new CustomEvent(E,{bubbles:!1,cancelable:!0,detail:T});e&&R.addEventListener(E,e,{once:!0}),t?function(E,e){E&&(0,C.flushSync)((()=>E.dispatchEvent(e)))}(R,A):R.dispatchEvent(A)}const m="focusScope.autoFocusOnMount",g="focusScope.autoFocusOnUnmount",H={bubbles:!1,cancelable:!0},B=(0,R.forwardRef)(((E,e)=>{const{loop:T=!1,trapped:A=!1,onMountAutoFocus:n,onUnmountAutoFocus:S,...O}=E,[N,I]=(0,R.useState)(null),s=i(n),o=i(S),a=(0,R.useRef)(null),C=r(e,(E=>I(E))),_=(0,R.useRef)({paused:!1,pause(){this.paused=!0},resume(){this.paused=!1}}).current;(0,R.useEffect)((()=>{if(A){function E(E){if(_.paused||!N)return;const e=E.target;N.contains(e)?a.current=e:y(a.current,{select:!0})}function e(E){!_.paused&&N&&(N.contains(E.relatedTarget)||y(a.current,{select:!0}))}return document.addEventListener("focusin",E),document.addEventListener("focusout",e),()=>{document.removeEventListener("focusin",E),document.removeEventListener("focusout",e)}}}),[A,N,_.paused]),(0,R.useEffect)((()=>{if(N){V.add(_);const e=document.activeElement;if(!N.contains(e)){const T=new CustomEvent(m,H);N.addEventListener(m,s),N.dispatchEvent(T),T.defaultPrevented||(!function(E,{select:e=!1}={}){const T=document.activeElement;for(const t of E)if(y(t,{select:e}),document.activeElement!==T)return}((E=F(N),E.filter((E=>"A"!==E.tagName))),{select:!0}),document.activeElement===e&&y(N))}return()=>{N.removeEventListener(m,s),setTimeout((()=>{const E=new CustomEvent(g,H);N.addEventListener(g,o),N.dispatchEvent(E),E.defaultPrevented||y(null!==e&&void 0!==e?e:document.body,{select:!0}),N.removeEventListener(g,o),V.remove(_)}),0)}}var E}),[N,s,o,_]);const L=(0,R.useCallback)((E=>{if(!T&&!A)return;if(_.paused)return;const e="Tab"===E.key&&!E.altKey&&!E.ctrlKey&&!E.metaKey,t=document.activeElement;if(e&&t){const e=E.currentTarget,[R,A]=function(E){const e=F(E),T=Y(e,E),t=Y(e.reverse(),E);return[T,t]}(e);R&&A?E.shiftKey||t!==A?E.shiftKey&&t===R&&(E.preventDefault(),T&&y(A,{select:!0})):(E.preventDefault(),T&&y(R,{select:!0})):t===e&&E.preventDefault()}}),[T,A,_.paused]);return(0,R.createElement)(u.div,(0,t.Z)({tabIndex:-1},O,{ref:C,onKeyDown:L}))}));function F(E){const e=[],T=document.createTreeWalker(E,NodeFilter.SHOW_ELEMENT,{acceptNode:E=>{const e="INPUT"===E.tagName&&"hidden"===E.type;return E.disabled||E.hidden||e?NodeFilter.FILTER_SKIP:E.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;T.nextNode();)e.push(T.currentNode);return e}function Y(E,e){for(const T of E)if(!b(T,{upTo:e}))return T}function b(E,{upTo:e}){if("hidden"===getComputedStyle(E).visibility)return!0;for(;E;){if(void 0!==e&&E===e)return!1;if("none"===getComputedStyle(E).display)return!0;E=E.parentElement}return!1}function y(E,{select:e=!1}={}){if(E&&E.focus){const T=document.activeElement;E.focus({preventScroll:!0}),E!==T&&function(E){return E instanceof HTMLInputElement&&"select"in E}(E)&&e&&E.select()}}const V=function(){let E=[];return{add(e){const T=E[0];e!==T&&(null===T||void 0===T||T.pause()),E=v(E,e),E.unshift(e)},remove(e){var T;E=v(E,e),null===(T=E[0])||void 0===T||T.resume()}}}();function v(E,e){const T=[...E],t=T.indexOf(e);return-1!==t&&T.splice(t,1),T}const W=(0,R.forwardRef)(((E,e)=>{var T;const{container:A=(null===globalThis||void 0===globalThis||null===(T=globalThis.document)||void 0===T?void 0:T.body),...n}=E;return A?C.createPortal((0,R.createElement)(u.div,(0,t.Z)({},n,{ref:e})),A):null}));const X=E=>{const{present:e,children:T}=E,t=function(E){const[e,T]=(0,R.useState)(),t=(0,R.useRef)({}),A=(0,R.useRef)(E),n=(0,R.useRef)("none"),S=E?"mounted":"unmounted",[r,O]=function(E,e){return(0,R.useReducer)(((E,T)=>{const t=e[E][T];return null!==t&&void 0!==t?t:E}),E)}(S,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return(0,R.useEffect)((()=>{const E=x(t.current);n.current="mounted"===r?E:"none"}),[r]),N((()=>{const e=t.current,T=A.current;if(T!==E){const t=n.current,R=x(e);if(E)O("MOUNT");else if("none"===R||"none"===(null===e||void 0===e?void 0:e.display))O("UNMOUNT");else{const E=t!==R;O(T&&E?"ANIMATION_OUT":"UNMOUNT")}A.current=E}}),[E,O]),N((()=>{if(e){const E=E=>{const T=x(t.current).includes(E.animationName);E.target===e&&T&&(0,C.flushSync)((()=>O("ANIMATION_END")))},T=E=>{E.target===e&&(n.current=x(t.current))};return e.addEventListener("animationstart",T),e.addEventListener("animationcancel",E),e.addEventListener("animationend",E),()=>{e.removeEventListener("animationstart",T),e.removeEventListener("animationcancel",E),e.removeEventListener("animationend",E)}}O("ANIMATION_END")}),[e,O]),{isPresent:["mounted","unmountSuspended"].includes(r),ref:(0,R.useCallback)((E=>{E&&(t.current=getComputedStyle(E)),T(E)}),[])}}(e),A="function"===typeof T?T({present:t.isPresent}):R.Children.only(T),n=r(t.ref,A.ref);return"function"===typeof T||t.isPresent?(0,R.cloneElement)(A,{ref:n}):null};function x(E){return(null===E||void 0===E?void 0:E.animationName)||"none"}X.displayName="Presence";let w=0;function K(){(0,R.useEffect)((()=>{var E,e;const T=document.querySelectorAll("[data-radix-focus-guard]");return document.body.insertAdjacentElement("afterbegin",null!==(E=T[0])&&void 0!==E?E:k()),document.body.insertAdjacentElement("beforeend",null!==(e=T[1])&&void 0!==e?e:k()),w++,()=>{1===w&&document.querySelectorAll("[data-radix-focus-guard]").forEach((E=>E.remove())),w--}}),[])}function k(){const E=document.createElement("span");return E.setAttribute("data-radix-focus-guard",""),E.tabIndex=0,E.style.cssText="outline: none; opacity: 0; position: fixed; pointer-events: none",E}var $=T(59312),J=T(28886),Z=T(10763),Q=(0,T(34736)._)(),j=function(){},q=R.forwardRef((function(E,e){var T=R.useRef(null),t=R.useState({onScrollCapture:j,onWheelCapture:j,onTouchMoveCapture:j}),A=t[0],n=t[1],S=E.forwardProps,r=E.children,O=E.className,N=E.removeScrollBar,I=E.enabled,s=E.shards,o=E.sideCar,i=E.noIsolation,a=E.inert,C=E.allowPinchZoom,_=E.as,L=void 0===_?"div":_,l=(0,$._T)(E,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","as"]),c=o,D=(0,Z.q)([T,e]),u=(0,$.pi)((0,$.pi)({},l),A);return R.createElement(R.Fragment,null,I&&R.createElement(c,{sideCar:Q,removeScrollBar:N,shards:s,noIsolation:i,inert:a,setCallbacks:n,allowPinchZoom:!!C,lockRef:T}),S?R.cloneElement(R.Children.only(r),(0,$.pi)((0,$.pi)({},u),{ref:D})):R.createElement(L,(0,$.pi)({},u,{className:O,ref:D}),r))}));q.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1},q.classNames={fullWidth:J.zi,zeroRight:J.pF};var z=T(90966),EE=T(77601),eE=T(38264),TE=!1;if("undefined"!==typeof window)try{var tE=Object.defineProperty({},"passive",{get:function(){return TE=!0,!0}});window.addEventListener("test",tE,tE),window.removeEventListener("test",tE,tE)}catch(Ge){TE=!1}var RE=!!TE&&{passive:!1},AE=function(E,e){var T=e;do{if("undefined"!==typeof ShadowRoot&&T instanceof ShadowRoot&&(T=T.host),nE(E,T)){var t=SE(E,T);if(t[1]>t[2])return!0}T=T.parentNode}while(T&&T!==document.body);return!1},nE=function(E,e){return"v"===E?function(E){var e=window.getComputedStyle(E);return"hidden"!==e.overflowY&&!(e.overflowY===e.overflowX&&"visible"===e.overflowY)}(e):function(E){var e=window.getComputedStyle(E);return"hidden"!==e.overflowX&&!(e.overflowY===e.overflowX&&"visible"===e.overflowX)}(e)},SE=function(E,e){return"v"===E?[(T=e).scrollTop,T.scrollHeight,T.clientHeight]:function(E){return[E.scrollLeft,E.scrollWidth,E.clientWidth]}(e);var T},rE=function(E){return"changedTouches"in E?[E.changedTouches[0].clientX,E.changedTouches[0].clientY]:[0,0]},OE=function(E){return[E.deltaX,E.deltaY]},NE=function(E){return E&&"current"in E?E.current:E},IE=function(E){return"\n  .block-interactivity-".concat(E," {pointer-events: none;}\n  .allow-interactivity-").concat(E," {pointer-events: all;}\n")},sE=0,oE=[];var iE=(0,z.L)(Q,(function(E){var e=R.useRef([]),T=R.useRef([0,0]),t=R.useRef(),A=R.useState(sE++)[0],n=R.useState((function(){return(0,eE.Ws)()}))[0],S=R.useRef(E);R.useEffect((function(){S.current=E}),[E]),R.useEffect((function(){if(E.inert){document.body.classList.add("block-interactivity-".concat(A));var e=(0,$.ev)([E.lockRef.current],(E.shards||[]).map(NE),!0).filter(Boolean);return e.forEach((function(E){return E.classList.add("allow-interactivity-".concat(A))})),function(){document.body.classList.remove("block-interactivity-".concat(A)),e.forEach((function(E){return E.classList.remove("allow-interactivity-".concat(A))}))}}}),[E.inert,E.lockRef.current,E.shards]);var r=R.useCallback((function(E,e){if("touches"in E&&2===E.touches.length)return!S.current.allowPinchZoom;var R,A=rE(E),n=T.current,r="deltaX"in E?E.deltaX:n[0]-A[0],O="deltaY"in E?E.deltaY:n[1]-A[1],N=E.target,I=Math.abs(r)>Math.abs(O)?"h":"v";if("touches"in E&&"h"===I&&"range"===N.type)return!1;var s=AE(I,N);if(!s)return!0;if(s?R=I:(R="v"===I?"h":"v",s=AE(I,N)),!s)return!1;if(!t.current&&"changedTouches"in E&&(r||O)&&(t.current=R),!R)return!0;var o=t.current||R;return function(E,e,T,t,R){var A=function(E,e){return"h"===E&&"rtl"===e?-1:1}(E,window.getComputedStyle(e).direction),n=A*t,S=T.target,r=e.contains(S),O=!1,N=n>0,I=0,s=0;do{var o=SE(E,S),i=o[0],a=o[1]-o[2]-A*i;(i||a)&&nE(E,S)&&(I+=a,s+=i),S=S.parentNode}while(!r&&S!==document.body||r&&(e.contains(S)||e===S));return(N&&(R&&0===I||!R&&n>I)||!N&&(R&&0===s||!R&&-n>s))&&(O=!0),O}(o,e,E,"h"===o?r:O,!0)}),[]),O=R.useCallback((function(E){var T=E;if(oE.length&&oE[oE.length-1]===n){var t="deltaY"in T?OE(T):rE(T),R=e.current.filter((function(E){return E.name===T.type&&E.target===T.target&&function(E,e){return E[0]===e[0]&&E[1]===e[1]}(E.delta,t)}))[0];if(R&&R.should)T.preventDefault();else if(!R){var A=(S.current.shards||[]).map(NE).filter(Boolean).filter((function(E){return E.contains(T.target)}));(A.length>0?r(T,A[0]):!S.current.noIsolation)&&T.preventDefault()}}}),[]),N=R.useCallback((function(E,T,t,R){var A={name:E,delta:T,target:t,should:R};e.current.push(A),setTimeout((function(){e.current=e.current.filter((function(E){return E!==A}))}),1)}),[]),I=R.useCallback((function(E){T.current=rE(E),t.current=void 0}),[]),s=R.useCallback((function(e){N(e.type,OE(e),e.target,r(e,E.lockRef.current))}),[]),o=R.useCallback((function(e){N(e.type,rE(e),e.target,r(e,E.lockRef.current))}),[]);R.useEffect((function(){return oE.push(n),E.setCallbacks({onScrollCapture:s,onWheelCapture:s,onTouchMoveCapture:o}),document.addEventListener("wheel",O,RE),document.addEventListener("touchmove",O,RE),document.addEventListener("touchstart",I,RE),function(){oE=oE.filter((function(E){return E!==n})),document.removeEventListener("wheel",O,RE),document.removeEventListener("touchmove",O,RE),document.removeEventListener("touchstart",I,RE)}}),[]);var i=E.removeScrollBar,a=E.inert;return R.createElement(R.Fragment,null,a?R.createElement(n,{styles:IE(A)}):null,i?R.createElement(EE.jp,{gapMode:"margin"}):null)})),aE=R.forwardRef((function(E,e){return R.createElement(q,(0,$.pi)({},E,{ref:e,sideCar:iE}))}));aE.classNames=q.classNames;var CE=aE,_E=T(25699);const LE="Dialog",[lE,cE]=function(E,e=[]){let T=[];const t=()=>{const e=T.map((E=>(0,R.createContext)(E)));return function(T){const t=(null===T||void 0===T?void 0:T[E])||e;return(0,R.useMemo)((()=>({[`__scope${E}`]:{...T,[E]:t}})),[T,t])}};return t.scopeName=E,[function(e,t){const A=(0,R.createContext)(t),n=T.length;function S(e){const{scope:T,children:t,...S}=e,r=(null===T||void 0===T?void 0:T[E][n])||A,O=(0,R.useMemo)((()=>S),Object.values(S));return(0,R.createElement)(r.Provider,{value:O},t)}return T=[...T,t],S.displayName=e+"Provider",[S,function(T,S){const r=(null===S||void 0===S?void 0:S[E][n])||A,O=(0,R.useContext)(r);if(O)return O;if(void 0!==t)return t;throw new Error(`\`${T}\` must be used within \`${e}\``)}]},O(t,...e)]}(LE),[DE,uE]=lE(LE),PE=E=>{const{__scopeDialog:e,children:T,open:t,defaultOpen:A,onOpenChange:n,modal:S=!0}=E,r=(0,R.useRef)(null),O=(0,R.useRef)(null),[N=!1,I]=a({prop:t,defaultProp:A,onChange:n});return(0,R.createElement)(DE,{scope:e,triggerRef:r,contentRef:O,contentId:o(),titleId:o(),descriptionId:o(),open:N,onOpenChange:I,onOpenToggle:(0,R.useCallback)((()=>I((E=>!E))),[I]),modal:S},T)},ME="DialogPortal",[UE,dE]=lE(ME,{forceMount:void 0}),pE=E=>{const{__scopeDialog:e,forceMount:T,children:t,container:A}=E,n=uE(ME,e);return(0,R.createElement)(UE,{scope:e,forceMount:T},R.Children.map(t,(E=>(0,R.createElement)(X,{present:T||n.open},(0,R.createElement)(W,{asChild:!0,container:A},E)))))},fE="DialogOverlay",GE=(0,R.forwardRef)(((E,e)=>{const T=dE(fE,E.__scopeDialog),{forceMount:A=T.forceMount,...n}=E,S=uE(fE,E.__scopeDialog);return S.modal?(0,R.createElement)(X,{present:A||S.open},(0,R.createElement)(hE,(0,t.Z)({},n,{ref:e}))):null})),hE=(0,R.forwardRef)(((E,e)=>{const{__scopeDialog:T,...A}=E,n=uE(fE,T);return(0,R.createElement)(CE,{as:_,allowPinchZoom:!0,shards:[n.contentRef]},(0,R.createElement)(u.div,(0,t.Z)({"data-state":bE(n.open)},A,{ref:e,style:{pointerEvents:"auto",...A.style}})))})),mE="DialogContent",gE=(0,R.forwardRef)(((E,e)=>{const T=dE(mE,E.__scopeDialog),{forceMount:A=T.forceMount,...n}=E,S=uE(mE,E.__scopeDialog);return(0,R.createElement)(X,{present:A||S.open},S.modal?(0,R.createElement)(HE,(0,t.Z)({},n,{ref:e})):(0,R.createElement)(BE,(0,t.Z)({},n,{ref:e})))})),HE=(0,R.forwardRef)(((E,e)=>{const T=uE(mE,E.__scopeDialog),A=(0,R.useRef)(null),S=r(e,T.contentRef,A);return(0,R.useEffect)((()=>{const E=A.current;if(E)return(0,_E.Ry)(E)}),[]),(0,R.createElement)(FE,(0,t.Z)({},E,{ref:S,trapFocus:T.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:n(E.onCloseAutoFocus,(E=>{var e;E.preventDefault(),null===(e=T.triggerRef.current)||void 0===e||e.focus()})),onPointerDownOutside:n(E.onPointerDownOutside,(E=>{const e=E.detail.originalEvent,T=0===e.button&&!0===e.ctrlKey;(2===e.button||T)&&E.preventDefault()})),onFocusOutside:n(E.onFocusOutside,(E=>E.preventDefault()))}))})),BE=(0,R.forwardRef)(((E,e)=>{const T=uE(mE,E.__scopeDialog),A=(0,R.useRef)(!1);return(0,R.createElement)(FE,(0,t.Z)({},E,{ref:e,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:e=>{var t,R;(null===(t=E.onCloseAutoFocus)||void 0===t||t.call(E,e),e.defaultPrevented)||(A.current||null===(R=T.triggerRef.current)||void 0===R||R.focus(),e.preventDefault());A.current=!1},onInteractOutside:e=>{var t,R;null===(t=E.onInteractOutside)||void 0===t||t.call(E,e),e.defaultPrevented||(A.current=!0);const n=e.target;(null===(R=T.triggerRef.current)||void 0===R?void 0:R.contains(n))&&e.preventDefault()}}))})),FE=(0,R.forwardRef)(((E,e)=>{const{__scopeDialog:T,trapFocus:A,onOpenAutoFocus:n,onCloseAutoFocus:S,...O}=E,N=uE(mE,T),I=r(e,(0,R.useRef)(null));return K(),(0,R.createElement)(R.Fragment,null,(0,R.createElement)(B,{asChild:!0,loop:!0,trapped:A,onMountAutoFocus:n,onUnmountAutoFocus:S},(0,R.createElement)(f,(0,t.Z)({role:"dialog",id:N.contentId,"aria-describedby":N.descriptionId,"aria-labelledby":N.titleId,"data-state":bE(N.open)},O,{ref:I,onDismiss:()=>N.onOpenChange(!1)}))),!1)})),YE="DialogTitle";function bE(E){return E?"open":"closed"}const yE="DialogTitleWarning",[VE,vE]=function(E,e){const T=(0,R.createContext)(e);function t(E){const{children:e,...t}=E,A=(0,R.useMemo)((()=>t),Object.values(t));return(0,R.createElement)(T.Provider,{value:A},e)}return t.displayName=E+"Provider",[t,function(t){const A=(0,R.useContext)(T);if(A)return A;if(void 0!==e)return e;throw new Error(`\`${t}\` must be used within \`${E}\``)}]}(yE,{contentName:mE,titleName:YE,docsSlug:"dialog"}),WE=PE,XE=pE,xE=GE,wE=gE;var KE=T(62610),kE=T(70644);const $E={prefix:Math.round(1e10*Math.random()),current:0},JE=R.createContext($E),ZE=E=>{const e=R.useContext(JE),T=e===$E,A=R.useMemo((()=>({prefix:T?0:++e.prefix,current:0})),[T,e]);return R.createElement(JE.Provider,(0,t.Z)({value:A},E))};function QE(E){const e=R.useContext(JE);return Boolean(null===globalThis||void 0===globalThis?void 0:globalThis.document)||e!==$E||console.warn("When server rendering, you must wrap your application in an <IdProvider> to ensure consistent ids are generated between the client and server."),R.useMemo((()=>E||`radix-id-${e.prefix}-${++e.current}`),[E])}var jE='[cmdk-group=""]',qE='[cmdk-group-items=""]',zE='[cmdk-item=""]',Ee=`${zE}:not([aria-disabled="true"])`,ee="cmdk-item-select",Te="data-value",te=(E,e)=>KE(E,e),Re=R.createContext(void 0),Ae=()=>R.useContext(Re),ne=R.createContext(void 0),Se=()=>R.useContext(ne),re=R.createContext(void 0),Oe=R.forwardRef(((E,e)=>{let T=R.useRef(null),t=Pe((()=>({search:"",value:"",filtered:{count:0,items:new Map,groups:new Set}}))),A=Pe((()=>new Set)),n=Pe((()=>new Map)),S=Pe((()=>new Map)),r=Pe((()=>new Set)),O=De(E),{label:N,children:I,value:s,onValueChange:o,filter:i,shouldFilter:a,...C}=E,_=QE(),L=QE(),l=QE(),c=pe();ue((()=>{if(void 0!==s){let E=s.trim().toLowerCase();t.current.value=E,c(6,p),D.emit()}}),[s]);let D=R.useMemo((()=>({subscribe:E=>(r.current.add(E),()=>r.current.delete(E)),snapshot:()=>t.current,setState:(E,e,T)=>{var R,A,n;if(!Object.is(t.current[E],e)){if(t.current[E]=e,"search"===E)d(),M(),c(1,U);else if("value"===E){if(void 0!==(null==(R=O.current)?void 0:R.value))return void(null==(n=(A=O.current).onValueChange)||n.call(A,e));T||c(5,p)}D.emit()}},emit:()=>{r.current.forEach((E=>E()))}})),[]),u=R.useMemo((()=>({value:(E,e)=>{e!==S.current.get(E)&&(S.current.set(E,e),t.current.filtered.items.set(E,P(e)),c(2,(()=>{M(),D.emit()})))},item:(E,e)=>(A.current.add(E),e&&(n.current.has(e)?n.current.get(e).add(E):n.current.set(e,new Set([E]))),c(3,(()=>{d(),M(),t.current.value||U(),D.emit()})),()=>{S.current.delete(E),A.current.delete(E),t.current.filtered.items.delete(E),c(4,(()=>{d(),U(),D.emit()}))}),group:E=>(n.current.has(E)||n.current.set(E,new Set),()=>{S.current.delete(E),n.current.delete(E)}),filter:()=>O.current.shouldFilter,label:N||E["aria-label"],listId:_,inputId:l,labelId:L})),[]);function P(E){var e;let T=(null==(e=O.current)?void 0:e.filter)??te;return E?T(E,t.current.search):0}function M(){if(!T.current||!t.current.search||!1===O.current.shouldFilter)return;let E=t.current.filtered.items,e=[];t.current.filtered.groups.forEach((T=>{let t=n.current.get(T),R=0;t.forEach((e=>{let T=E.get(e);R=Math.max(T,R)})),e.push([T,R])}));let R=T.current.querySelector('[cmdk-list-sizer=""]');G().sort(((e,T)=>{let t=e.getAttribute(Te),R=T.getAttribute(Te);return(E.get(R)??0)-(E.get(t)??0)})).forEach((E=>{let e=E.closest(qE);e?e.appendChild(E.parentElement===e?E:E.closest(`${qE} > *`)):R.appendChild(E.parentElement===R?E:E.closest(`${qE} > *`))})),e.sort(((E,e)=>e[1]-E[1])).forEach((E=>{let e=T.current.querySelector(`${jE}[${Te}="${E[0]}"]`);null==e||e.parentElement.appendChild(e)}))}function U(){let E=G().find((E=>!E.ariaDisabled)),e=null==E?void 0:E.getAttribute(Te);D.setState("value",e||void 0)}function d(){if(!t.current.search||!1===O.current.shouldFilter)return void(t.current.filtered.count=A.current.size);t.current.filtered.groups=new Set;let E=0;for(let e of A.current){let T=P(S.current.get(e));t.current.filtered.items.set(e,T),T>0&&E++}for(let[e,T]of n.current)for(let E of T)if(t.current.filtered.items.get(E)>0){t.current.filtered.groups.add(e);break}t.current.filtered.count=E}function p(){var E,e,T;let t=f();t&&((null==(E=t.parentElement)?void 0:E.firstChild)===t&&(null==(T=null==(e=t.closest(jE))?void 0:e.querySelector('[cmdk-group-heading=""]'))||T.scrollIntoView({block:"nearest"})),t.scrollIntoView({block:"nearest"}))}function f(){return T.current.querySelector(`${zE}[aria-selected="true"]`)}function G(){return Array.from(T.current.querySelectorAll(Ee))}function h(E){let e=G()[E];e&&D.setState("value",e.getAttribute(Te))}function m(E){var e;let T=f(),t=G(),R=t.findIndex((E=>E===T)),A=t[R+E];null!=(e=O.current)&&e.loop&&(A=R+E<0?t[t.length-1]:R+E===t.length?t[0]:t[R+E]),A&&D.setState("value",A.getAttribute(Te))}function g(E){let e,T=f(),t=null==T?void 0:T.closest(jE);for(;t&&!e;)t=E>0?le(t,jE):ce(t,jE),e=null==t?void 0:t.querySelector(Ee);e?D.setState("value",e.getAttribute(Te)):m(E)}let H=()=>h(G().length-1),B=E=>{E.preventDefault(),E.metaKey?H():E.altKey?g(1):m(1)},F=E=>{E.preventDefault(),E.metaKey?h(0):E.altKey?g(-1):m(-1)};return R.createElement(ZE,null,R.createElement("div",{ref:Me([T,e]),...C,"cmdk-root":"",onKeyDown:E=>{var e;if(null==(e=C.onKeyDown)||e.call(C,E),!E.defaultPrevented)switch(E.key){case"n":case"j":E.ctrlKey&&B(E);break;case"ArrowDown":B(E);break;case"p":case"k":E.ctrlKey&&F(E);break;case"ArrowUp":F(E);break;case"Home":E.preventDefault(),h(0);break;case"End":E.preventDefault(),H();break;case"Enter":{E.preventDefault();let e=f();if(e){let E=new Event(ee);e.dispatchEvent(E)}}}}},R.createElement("label",{"cmdk-label":"",htmlFor:u.inputId,id:u.labelId,style:fe},N),R.createElement(ne.Provider,{value:D},R.createElement(Re.Provider,{value:u},I))))})),Ne=R.forwardRef(((E,e)=>{let T=QE(),t=R.useRef(null),A=R.useContext(re),n=Ae(),S=De(E);ue((()=>n.item(T,A)),[]);let r=de(T,t,[E.value,E.children,t]),O=Se(),N=Ue((E=>E.value&&E.value===r.current)),I=Ue((e=>!(!E.forceMount&&!1!==n.filter())||(!e.search||e.filtered.items.get(T)>0)));function s(){var E,e;null==(e=(E=S.current).onSelect)||e.call(E,r.current)}if(R.useEffect((()=>{let e=t.current;if(e&&!E.disabled)return e.addEventListener(ee,s),()=>e.removeEventListener(ee,s)}),[I,E.onSelect,E.disabled]),!I)return null;let{disabled:o,value:i,onSelect:a,...C}=E;return R.createElement("div",{ref:Me([t,e]),...C,"cmdk-item":"",role:"option","aria-disabled":o||void 0,"aria-selected":N||void 0,"data-selected":N||void 0,onPointerMove:o?void 0:function(){O.setState("value",r.current,!0)},onClick:o?void 0:s},E.children)})),Ie=R.forwardRef(((E,e)=>{let{heading:T,children:t,...A}=E,n=QE(),S=R.useRef(null),r=R.useRef(null),O=QE(),N=Ae(),I=Ue((e=>!(!E.forceMount&&!1!==N.filter())||(!e.search||e.filtered.groups.has(n))));ue((()=>N.group(n)),[]),de(n,S,[E.value,E.heading,r]);let s=R.createElement(re.Provider,{value:n},t);return R.createElement("div",{ref:Me([S,e]),...A,"cmdk-group":"",role:"presentation",hidden:!I||void 0},T&&R.createElement("div",{ref:r,"cmdk-group-heading":"","aria-hidden":!0,id:O},T),R.createElement("div",{"cmdk-group-items":"",role:"group","aria-labelledby":T?O:void 0},s))})),se=R.forwardRef(((E,e)=>{let{alwaysRender:T,...t}=E,A=R.useRef(null),n=Ue((E=>!E.search));return T||n?R.createElement("div",{ref:Me([A,e]),...t,"cmdk-separator":"",role:"separator"}):null})),oe=R.forwardRef(((E,e)=>{let{onValueChange:T,...t}=E,A=null!=E.value,n=Se(),S=Ue((E=>E.search)),r=Ae();return R.useEffect((()=>{null!=E.value&&n.setState("search",E.value)}),[E.value]),R.createElement("input",{ref:e,...t,"cmdk-input":"",autoComplete:"off",autoCorrect:"off",spellCheck:!1,"aria-autocomplete":"list",role:"combobox","aria-expanded":!0,"aria-controls":r.listId,"aria-labelledby":r.labelId,id:r.inputId,type:"text",value:A?E.value:S,onChange:E=>{A||n.setState("search",E.target.value),null==T||T(E.target.value)}})})),ie=R.forwardRef(((E,e)=>{let{children:T,...t}=E,A=R.useRef(null),n=R.useRef(null),S=Ae();return R.useEffect((()=>{if(n.current&&A.current){let E,e=n.current,T=A.current,t=new ResizeObserver((()=>{E=requestAnimationFrame((()=>{let E=e.getBoundingClientRect().height;T.style.setProperty("--cmdk-list-height",E.toFixed(1)+"px")}))}));return t.observe(e),()=>{cancelAnimationFrame(E),t.unobserve(e)}}}),[]),R.createElement("div",{ref:Me([A,e]),...t,"cmdk-list":"",role:"listbox","aria-label":"Suggestions",id:S.listId,"aria-labelledby":S.inputId},R.createElement("div",{ref:n,"cmdk-list-sizer":""},T))})),ae=R.forwardRef(((E,e)=>{let{open:T,onOpenChange:t,container:A,...n}=E;return R.createElement(WE,{open:T,onOpenChange:t},R.createElement(XE,{container:A},R.createElement(xE,{"cmdk-overlay":""}),R.createElement(wE,{"aria-label":E.label,"cmdk-dialog":""},R.createElement(Oe,{ref:e,...n}))))})),Ce=R.forwardRef(((E,e)=>{let T=R.useRef(!0),t=Ue((E=>0===E.filtered.count));return R.useEffect((()=>{T.current=!1}),[]),T.current||!t?null:R.createElement("div",{ref:e,...E,"cmdk-empty":"",role:"presentation"})})),_e=R.forwardRef(((E,e)=>{let{progress:T,children:t,...A}=E;return R.createElement("div",{ref:e,...A,"cmdk-loading":"",role:"progressbar","aria-valuenow":T,"aria-valuemin":0,"aria-valuemax":100,"aria-label":"Loading..."},R.createElement("div",{"aria-hidden":!0},t))})),Le=Object.assign(Oe,{List:ie,Item:Ne,Input:oe,Group:Ie,Separator:se,Dialog:ae,Empty:Ce,Loading:_e});function le(E,e){let T=E.nextElementSibling;for(;T;){if(T.matches(e))return T;T=T.nextElementSibling}}function ce(E,e){let T=E.previousElementSibling;for(;T;){if(T.matches(e))return T;T=T.previousElementSibling}}function De(E){let e=R.useRef(E);return ue((()=>{e.current=E})),e}var ue=typeof window>"u"?R.useEffect:R.useLayoutEffect;function Pe(E){let e=R.useRef();return void 0===e.current&&(e.current=E()),e}function Me(E){return e=>{E.forEach((E=>{"function"==typeof E?E(e):null!=E&&(E.current=e)}))}}function Ue(E){let e=Se(),T=()=>E(e.snapshot());return(0,kE.useSyncExternalStore)(e.subscribe,T,T)}function de(E,e,T){let t=R.useRef(),A=Ae();return ue((()=>{var R;let n=(()=>{var E;for(let e of T){if("string"==typeof e)return e.trim().toLowerCase();if("object"==typeof e&&"current"in e&&e.current)return null==(E=e.current.textContent)?void 0:E.trim().toLowerCase()}})();A.value(E,n),null==(R=e.current)||R.setAttribute(Te,n),t.current=n})),t}var pe=()=>{let[E,e]=R.useState(),T=Pe((()=>new Map));return ue((()=>{T.current.forEach((E=>E())),T.current=new Map}),[E]),(E,t)=>{T.current.set(E,t),e({})}},fe={position:"absolute",width:"1px",height:"1px",padding:"0",margin:"-1px",overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",borderWidth:"0"}},69587:function(E,e,T){"use strict";T.d(e,{Z:function(){return xE}});var t=T(14666),R=T(78885);const A={tokenize:function(E,e,T){let t=0;return function e(A){if((87===A||119===A)&&t<3)return t++,E.consume(A),e;if(46===A&&3===t)return E.consume(A),R;return T(A)};function R(E){return null===E?T(E):e(E)}},partial:!0},n={tokenize:function(E,e,T){let t,A,n;return S;function S(e){return 46===e||95===e?E.check(r,N,O)(e):null===e||(0,R.z3)(e)||(0,R.B8)(e)||45!==e&&(0,R.Xh)(e)?N(e):(n=!0,E.consume(e),S)}function O(e){return 95===e?t=!0:(A=t,t=void 0),E.consume(e),S}function N(E){return A||t||!n?T(E):e(E)}},partial:!0},S={tokenize:function(E,e){let T=0,t=0;return A;function A(S){return 40===S?(T++,E.consume(S),A):41===S&&t<T?n(S):33===S||34===S||38===S||39===S||41===S||42===S||44===S||46===S||58===S||59===S||60===S||63===S||93===S||95===S||126===S?E.check(r,e,n)(S):null===S||(0,R.z3)(S)||(0,R.B8)(S)?e(S):(E.consume(S),A)}function n(e){return 41===e&&t++,E.consume(e),A}},partial:!0},r={tokenize:function(E,e,T){return t;function t(S){return 33===S||34===S||39===S||41===S||42===S||44===S||46===S||58===S||59===S||63===S||95===S||126===S?(E.consume(S),t):38===S?(E.consume(S),n):93===S?(E.consume(S),A):60===S||null===S||(0,R.z3)(S)||(0,R.B8)(S)?e(S):T(S)}function A(E){return null===E||40===E||91===E||(0,R.z3)(E)||(0,R.B8)(E)?e(E):t(E)}function n(E){return(0,R.jv)(E)?S(E):T(E)}function S(e){return 59===e?(E.consume(e),t):(0,R.jv)(e)?(E.consume(e),S):T(e)}},partial:!0},O={tokenize:function(E,e,T){return function(e){return E.consume(e),t};function t(E){return(0,R.H$)(E)?T(E):e(E)}},partial:!0},N={tokenize:function(E,e,T){const t=this;return function(e){if(87!==e&&119!==e||!C.call(t,t.previous)||c(t.events))return T(e);return E.enter("literalAutolink"),E.enter("literalAutolinkWww"),E.check(A,E.attempt(n,E.attempt(S,R),T),T)(e)};function R(T){return E.exit("literalAutolinkWww"),E.exit("literalAutolink"),e(T)}},previous:C},I={tokenize:function(E,e,T){const t=this;let A="",r=!1;return function(e){if((72===e||104===e)&&_.call(t,t.previous)&&!c(t.events))return E.enter("literalAutolink"),E.enter("literalAutolinkHttp"),A+=String.fromCodePoint(e),E.consume(e),O;return T(e)};function O(e){if((0,R.jv)(e)&&A.length<5)return A+=String.fromCodePoint(e),E.consume(e),O;if(58===e){const T=A.toLowerCase();if("http"===T||"https"===T)return E.consume(e),N}return T(e)}function N(e){return 47===e?(E.consume(e),r?I:(r=!0,N)):T(e)}function I(e){return null===e||(0,R.Av)(e)||(0,R.z3)(e)||(0,R.B8)(e)||(0,R.Xh)(e)?T(e):E.attempt(n,E.attempt(S,s),T)(e)}function s(T){return E.exit("literalAutolinkHttp"),E.exit("literalAutolink"),e(T)}},previous:_},s={tokenize:function(E,e,T){const t=this;let A,n;return function(e){if(!l(e)||!L.call(t,t.previous)||c(t.events))return T(e);return E.enter("literalAutolink"),E.enter("literalAutolinkEmail"),S(e)};function S(e){return l(e)?(E.consume(e),S):64===e?(E.consume(e),r):T(e)}function r(e){return 46===e?E.check(O,I,N)(e):45===e||95===e||(0,R.H$)(e)?(n=!0,E.consume(e),r):I(e)}function N(e){return E.consume(e),A=!0,r}function I(S){return n&&A&&(0,R.jv)(t.previous)?(E.exit("literalAutolinkEmail"),E.exit("literalAutolink"),e(S)):T(S)}},previous:L},o={},i={text:o};let a=48;for(;a<123;)o[a]=s,a++,58===a?a=65:91===a&&(a=97);function C(E){return null===E||40===E||42===E||95===E||91===E||93===E||126===E||(0,R.z3)(E)}function _(E){return!(0,R.jv)(E)}function L(E){return!(47===E||l(E))}function l(E){return 43===E||45===E||46===E||95===E||(0,R.H$)(E)}function c(E){let e=E.length,T=!1;for(;e--;){const t=E[e][1];if(("labelLink"===t.type||"labelImage"===t.type)&&!t._balanced){T=!0;break}if(t._gfmAutolinkLiteralWalkedInto){T=!1;break}}return E.length>0&&!T&&(E[E.length-1][1]._gfmAutolinkLiteralWalkedInto=!0),T}o[43]=s,o[45]=s,o[46]=s,o[95]=s,o[72]=[s,I],o[104]=[s,I],o[87]=[s,N],o[119]=[s,N];var D=T(52929),u=T(74014),P=T(62493);const M={tokenize:function(E,e,T){const t=this;return(0,u.f)(E,(function(E){const R=t.events[t.events.length-1];return R&&"gfmFootnoteDefinitionIndent"===R[1].type&&4===R[2].sliceSerialize(R[1],!0).length?e(E):T(E)}),"gfmFootnoteDefinitionIndent",5)},partial:!0};function U(E,e,T){const t=this;let R=t.events.length;const A=t.parser.gfmFootnotes||(t.parser.gfmFootnotes=[]);let n;for(;R--;){const E=t.events[R][1];if("labelImage"===E.type){n=E;break}if("gfmFootnoteCall"===E.type||"labelLink"===E.type||"label"===E.type||"image"===E.type||"link"===E.type)break}return function(R){if(!n||!n._balanced)return T(R);const S=(0,P.d)(t.sliceSerialize({start:n.end,end:t.now()}));if(94!==S.codePointAt(0)||!A.includes(S.slice(1)))return T(R);return E.enter("gfmFootnoteCallLabelMarker"),E.consume(R),E.exit("gfmFootnoteCallLabelMarker"),e(R)}}function d(E,e){let T,t=E.length;for(;t--;)if("labelImage"===E[t][1].type&&"enter"===E[t][0]){T=E[t][1];break}E[t+1][1].type="data",E[t+3][1].type="gfmFootnoteCallLabelMarker";const R={type:"gfmFootnoteCall",start:Object.assign({},E[t+3][1].start),end:Object.assign({},E[E.length-1][1].end)},A={type:"gfmFootnoteCallMarker",start:Object.assign({},E[t+3][1].end),end:Object.assign({},E[t+3][1].end)};A.end.column++,A.end.offset++,A.end._bufferIndex++;const n={type:"gfmFootnoteCallString",start:Object.assign({},A.end),end:Object.assign({},E[E.length-1][1].start)},S={type:"chunkString",contentType:"string",start:Object.assign({},n.start),end:Object.assign({},n.end)},r=[E[t+1],E[t+2],["enter",R,e],E[t+3],E[t+4],["enter",A,e],["exit",A,e],["enter",n,e],["enter",S,e],["exit",S,e],["exit",n,e],E[E.length-2],E[E.length-1],["exit",R,e]];return E.splice(t,E.length-t+1,...r),E}function p(E,e,T){const t=this,A=t.parser.gfmFootnotes||(t.parser.gfmFootnotes=[]);let n,S=0;return function(e){return E.enter("gfmFootnoteCall"),E.enter("gfmFootnoteCallLabelMarker"),E.consume(e),E.exit("gfmFootnoteCallLabelMarker"),r};function r(e){return 94!==e?T(e):(E.enter("gfmFootnoteCallMarker"),E.consume(e),E.exit("gfmFootnoteCallMarker"),E.enter("gfmFootnoteCallString"),E.enter("chunkString").contentType="string",O)}function O(r){if(S>999||93===r&&!n||null===r||91===r||(0,R.z3)(r))return T(r);if(93===r){E.exit("chunkString");const R=E.exit("gfmFootnoteCallString");return A.includes((0,P.d)(t.sliceSerialize(R)))?(E.enter("gfmFootnoteCallLabelMarker"),E.consume(r),E.exit("gfmFootnoteCallLabelMarker"),E.exit("gfmFootnoteCall"),e):T(r)}return(0,R.z3)(r)||(n=!0),S++,E.consume(r),92===r?N:O}function N(e){return 91===e||92===e||93===e?(E.consume(e),S++,O):O(e)}}function f(E,e,T){const t=this,A=t.parser.gfmFootnotes||(t.parser.gfmFootnotes=[]);let n,S,r=0;return function(e){return E.enter("gfmFootnoteDefinition")._container=!0,E.enter("gfmFootnoteDefinitionLabel"),E.enter("gfmFootnoteDefinitionLabelMarker"),E.consume(e),E.exit("gfmFootnoteDefinitionLabelMarker"),O};function O(e){return 94===e?(E.enter("gfmFootnoteDefinitionMarker"),E.consume(e),E.exit("gfmFootnoteDefinitionMarker"),E.enter("gfmFootnoteDefinitionLabelString"),E.enter("chunkString").contentType="string",N):T(e)}function N(e){if(r>999||93===e&&!S||null===e||91===e||(0,R.z3)(e))return T(e);if(93===e){E.exit("chunkString");const T=E.exit("gfmFootnoteDefinitionLabelString");return n=(0,P.d)(t.sliceSerialize(T)),E.enter("gfmFootnoteDefinitionLabelMarker"),E.consume(e),E.exit("gfmFootnoteDefinitionLabelMarker"),E.exit("gfmFootnoteDefinitionLabel"),s}return(0,R.z3)(e)||(S=!0),r++,E.consume(e),92===e?I:N}function I(e){return 91===e||92===e||93===e?(E.consume(e),r++,N):N(e)}function s(e){return 58===e?(E.enter("definitionMarker"),E.consume(e),E.exit("definitionMarker"),A.includes(n)||A.push(n),(0,u.f)(E,o,"gfmFootnoteDefinitionWhitespace")):T(e)}function o(E){return e(E)}}function G(E,e,T){return E.check(D.w,e,E.attempt(M,e,T))}function h(E){E.exit("gfmFootnoteDefinition")}var m=T(58300),g=T(73886),H=T(63879);function B(E){let e=(E||{}).singleTilde;const T={tokenize:function(E,T,t){const R=this.previous,A=this.events;let n=0;return function(e){if(126===R&&"characterEscape"!==A[A.length-1][1].type)return t(e);return E.enter("strikethroughSequenceTemporary"),S(e)};function S(A){const r=(0,g.r)(R);if(126===A)return n>1?t(A):(E.consume(A),n++,S);if(n<2&&!e)return t(A);const O=E.exit("strikethroughSequenceTemporary"),N=(0,g.r)(A);return O._open=!N||2===N&&Boolean(r),O._close=!r||2===r&&Boolean(N),T(A)}},resolveAll:function(E,e){let T=-1;for(;++T<E.length;)if("enter"===E[T][0]&&"strikethroughSequenceTemporary"===E[T][1].type&&E[T][1]._close){let t=T;for(;t--;)if("exit"===E[t][0]&&"strikethroughSequenceTemporary"===E[t][1].type&&E[t][1]._open&&E[T][1].end.offset-E[T][1].start.offset===E[t][1].end.offset-E[t][1].start.offset){E[T][1].type="strikethroughSequence",E[t][1].type="strikethroughSequence";const R={type:"strikethrough",start:Object.assign({},E[t][1].start),end:Object.assign({},E[T][1].end)},A={type:"strikethroughText",start:Object.assign({},E[t][1].end),end:Object.assign({},E[T][1].start)},n=[["enter",R,e],["enter",E[t][1],e],["exit",E[t][1],e],["enter",A,e]],S=e.parser.constructs.insideSpan.null;S&&(0,m.d)(n,n.length,0,(0,H.C)(S,E.slice(t+1,T),e)),(0,m.d)(n,n.length,0,[["exit",A,e],["enter",E[T][1],e],["exit",E[T][1],e],["exit",R,e]]),(0,m.d)(E,t-1,T-t+3,n),T=t+n.length-2;break}}T=-1;for(;++T<E.length;)"strikethroughSequenceTemporary"===E[T][1].type&&(E[T][1].type="data");return E}};return null!==e&&void 0!==e||(e=!0),{text:{126:T},insideSpan:{null:[T]},attentionMarkers:{null:[126]}}}class F{constructor(){this.map=[]}add(E,e,T){!function(E,e,T,t){let R=0;if(0===T&&0===t.length)return;for(;R<E.map.length;){if(E.map[R][0]===e)return E.map[R][1]+=T,void E.map[R][2].push(...t);R+=1}E.map.push([e,T,t])}(this,E,e,T)}consume(E){if(this.map.sort(((E,e)=>E[0]-e[0])),0===this.map.length)return;let e=this.map.length;const T=[];for(;e>0;)e-=1,T.push(E.slice(this.map[e][0]+this.map[e][1])),T.push(this.map[e][2]),E.length=this.map[e][0];T.push([...E]),E.length=0;let t=T.pop();for(;t;)E.push(...t),t=T.pop();this.map.length=0}}function Y(E,e){let T=!1;const t=[];for(;e<E.length;){const R=E[e];if(T){if("enter"===R[0])"tableContent"===R[1].type&&t.push("tableDelimiterMarker"===E[e+1][1].type?"left":"none");else if("tableContent"===R[1].type){if("tableDelimiterMarker"===E[e-1][1].type){const E=t.length-1;t[E]="left"===t[E]?"center":"right"}}else if("tableDelimiterRow"===R[1].type)break}else"enter"===R[0]&&"tableDelimiterRow"===R[1].type&&(T=!0);e+=1}return t}const b={flow:{null:{tokenize:function(E,e,T){const t=this;let A,n=0,S=0;return function(E){let e=t.events.length-1;for(;e>-1;){const E=t.events[e][1].type;if("lineEnding"!==E&&"linePrefix"!==E)break;e--}const R=e>-1?t.events[e][1].type:null,A="tableHead"===R||"tableRow"===R?D:r;if(A===D&&t.parser.lazy[t.now().line])return T(E);return A(E)};function r(e){return E.enter("tableHead"),E.enter("tableRow"),function(E){if(124===E)return O(E);return A=!0,S+=1,O(E)}(e)}function O(e){return null===e?T(e):(0,R.Ch)(e)?S>1?(S=0,t.interrupt=!0,E.exit("tableRow"),E.enter("lineEnding"),E.consume(e),E.exit("lineEnding"),s):T(e):(0,R.xz)(e)?(0,u.f)(E,O,"whitespace")(e):(S+=1,A&&(A=!1,n+=1),124===e?(E.enter("tableCellDivider"),E.consume(e),E.exit("tableCellDivider"),A=!0,O):(E.enter("data"),N(e)))}function N(e){return null===e||124===e||(0,R.z3)(e)?(E.exit("data"),O(e)):(E.consume(e),92===e?I:N)}function I(e){return 92===e||124===e?(E.consume(e),N):N(e)}function s(e){return t.interrupt=!1,t.parser.lazy[t.now().line]?T(e):(E.enter("tableDelimiterRow"),A=!1,(0,R.xz)(e)?(0,u.f)(E,o,"linePrefix",t.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(e):o(e))}function o(e){return 45===e||58===e?a(e):124===e?(A=!0,E.enter("tableCellDivider"),E.consume(e),E.exit("tableCellDivider"),i):c(e)}function i(e){return(0,R.xz)(e)?(0,u.f)(E,a,"whitespace")(e):a(e)}function a(e){return 58===e?(S+=1,A=!0,E.enter("tableDelimiterMarker"),E.consume(e),E.exit("tableDelimiterMarker"),C):45===e?(S+=1,C(e)):null===e||(0,R.Ch)(e)?l(e):c(e)}function C(e){return 45===e?(E.enter("tableDelimiterFiller"),_(e)):c(e)}function _(e){return 45===e?(E.consume(e),_):58===e?(A=!0,E.exit("tableDelimiterFiller"),E.enter("tableDelimiterMarker"),E.consume(e),E.exit("tableDelimiterMarker"),L):(E.exit("tableDelimiterFiller"),L(e))}function L(e){return(0,R.xz)(e)?(0,u.f)(E,l,"whitespace")(e):l(e)}function l(T){return 124===T?o(T):(null===T||(0,R.Ch)(T))&&A&&n===S?(E.exit("tableDelimiterRow"),E.exit("tableHead"),e(T)):c(T)}function c(E){return T(E)}function D(e){return E.enter("tableRow"),P(e)}function P(T){return 124===T?(E.enter("tableCellDivider"),E.consume(T),E.exit("tableCellDivider"),P):null===T||(0,R.Ch)(T)?(E.exit("tableRow"),e(T)):(0,R.xz)(T)?(0,u.f)(E,P,"whitespace")(T):(E.enter("data"),M(T))}function M(e){return null===e||124===e||(0,R.z3)(e)?(E.exit("data"),P(e)):(E.consume(e),92===e?U:M)}function U(e){return 92===e||124===e?(E.consume(e),M):M(e)}},resolveAll:function(E,e){let T,t,R,A=-1,n=!0,S=0,r=[0,0,0,0],O=[0,0,0,0],N=!1,I=0;const s=new F;for(;++A<E.length;){const o=E[A],i=o[1];"enter"===o[0]?"tableHead"===i.type?(N=!1,0!==I&&(V(s,e,I,T,t),t=void 0,I=0),T={type:"table",start:Object.assign({},i.start),end:Object.assign({},i.end)},s.add(A,0,[["enter",T,e]])):"tableRow"===i.type||"tableDelimiterRow"===i.type?(n=!0,R=void 0,r=[0,0,0,0],O=[0,A+1,0,0],N&&(N=!1,t={type:"tableBody",start:Object.assign({},i.start),end:Object.assign({},i.end)},s.add(A,0,[["enter",t,e]])),S="tableDelimiterRow"===i.type?2:t?3:1):!S||"data"!==i.type&&"tableDelimiterMarker"!==i.type&&"tableDelimiterFiller"!==i.type?"tableCellDivider"===i.type&&(n?n=!1:(0!==r[1]&&(O[0]=O[1],R=y(s,e,r,S,void 0,R)),r=O,O=[r[1],A,0,0])):(n=!1,0===O[2]&&(0!==r[1]&&(O[0]=O[1],R=y(s,e,r,S,void 0,R),r=[0,0,0,0]),O[2]=A)):"tableHead"===i.type?(N=!0,I=A):"tableRow"===i.type||"tableDelimiterRow"===i.type?(I=A,0!==r[1]?(O[0]=O[1],R=y(s,e,r,S,A,R)):0!==O[1]&&(R=y(s,e,O,S,A,R)),S=0):!S||"data"!==i.type&&"tableDelimiterMarker"!==i.type&&"tableDelimiterFiller"!==i.type||(O[3]=A)}0!==I&&V(s,e,I,T,t);s.consume(e.events),A=-1;for(;++A<e.events.length;){const E=e.events[A];"enter"===E[0]&&"table"===E[1].type&&(E[1]._align=Y(e.events,A))}return E}}}};function y(E,e,T,t,R,A){const n=1===t?"tableHeader":2===t?"tableDelimiter":"tableData";0!==T[0]&&(A.end=Object.assign({},v(e.events,T[0])),E.add(T[0],0,[["exit",A,e]]));const S=v(e.events,T[1]);if(A={type:n,start:Object.assign({},S),end:Object.assign({},S)},E.add(T[1],0,[["enter",A,e]]),0!==T[2]){const R=v(e.events,T[2]),A=v(e.events,T[3]),n={type:"tableContent",start:Object.assign({},R),end:Object.assign({},A)};if(E.add(T[2],0,[["enter",n,e]]),2!==t){const t=e.events[T[2]],R=e.events[T[3]];if(t[1].end=Object.assign({},R[1].end),t[1].type="chunkText",t[1].contentType="text",T[3]>T[2]+1){const e=T[2]+1,t=T[3]-T[2]-1;E.add(e,t,[])}}E.add(T[3]+1,0,[["exit",n,e]])}return void 0!==R&&(A.end=Object.assign({},v(e.events,R)),E.add(R,0,[["exit",A,e]]),A=void 0),A}function V(E,e,T,t,R){const A=[],n=v(e.events,T);R&&(R.end=Object.assign({},n),A.push(["exit",R,e])),t.end=Object.assign({},n),A.push(["exit",t,e]),E.add(T+1,0,A)}function v(E,e){const T=E[e],t="enter"===T[0]?"start":"end";return T[1][t]}const W={tokenize:function(E,e,T){const t=this;return function(e){if(null!==t.previous||!t._gfmTasklistFirstContentOfListItem)return T(e);return E.enter("taskListCheck"),E.enter("taskListCheckMarker"),E.consume(e),E.exit("taskListCheckMarker"),A};function A(e){return(0,R.z3)(e)?(E.enter("taskListCheckValueUnchecked"),E.consume(e),E.exit("taskListCheckValueUnchecked"),n):88===e||120===e?(E.enter("taskListCheckValueChecked"),E.consume(e),E.exit("taskListCheckValueChecked"),n):T(e)}function n(e){return 93===e?(E.enter("taskListCheckMarker"),E.consume(e),E.exit("taskListCheckMarker"),E.exit("taskListCheck"),S):T(e)}function S(t){return(0,R.Ch)(t)?e(t):(0,R.xz)(t)?E.check({tokenize:x},e,T)(t):T(t)}}},X={text:{91:W}};function x(E,e,T){return(0,u.f)(E,(function(E){return null===E?T(E):e(E)}),"whitespace")}function w(E,e){const T=String(E);if("string"!==typeof e)throw new TypeError("Expected character");let t=0,R=T.indexOf(e);for(;-1!==R;)t++,R=T.indexOf(e,R+e.length);return t}var K=T(32153),k=T(72752);const $={}.hasOwnProperty,J=function(E,e,T,t){let R,A;"string"===typeof e||e instanceof RegExp?(A=[[e,T]],R=t):(A=e,R=T),R||(R={});const n=(0,k.O)(R.ignore||[]),S=function(E){const e=[];if("object"!==typeof E)throw new TypeError("Expected array or object as schema");if(Array.isArray(E)){let T=-1;for(;++T<E.length;)e.push([Z(E[T][0]),Q(E[T][1])])}else{let T;for(T in E)$.call(E,T)&&e.push([Z(T),Q(E[T])])}return e}(A);let r=-1;for(;++r<S.length;)(0,K.S4)(E,"text",O);return E;function O(E,e){let T,t=-1;for(;++t<e.length;){const E=e[t];if(n(E,T?T.children.indexOf(E):void 0,T))return;T=E}if(T)return function(E,e){const T=e[e.length-1],t=S[r][0],R=S[r][1];let A=0;const n=T.children.indexOf(E);let O=!1,N=[];t.lastIndex=0;let I=t.exec(E.value);for(;I;){const T=I.index,n={index:I.index,input:I.input,stack:[...e,E]};let S=R(...I,n);if("string"===typeof S&&(S=S.length>0?{type:"text",value:S}:void 0),!1!==S&&(A!==T&&N.push({type:"text",value:E.value.slice(A,T)}),Array.isArray(S)?N.push(...S):S&&N.push(S),A=T+I[0].length,O=!0),!t.global)break;I=t.exec(E.value)}O?(A<E.value.length&&N.push({type:"text",value:E.value.slice(A)}),T.children.splice(n,1,...N)):N=[E];return n+N.length}(E,e)}};function Z(E){return"string"===typeof E?new RegExp(function(E){if("string"!==typeof E)throw new TypeError("Expected a string");return E.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}(E),"g"):E}function Q(E){return"function"===typeof E?E:()=>E}const j="phrasing",q=["autolink","link","image","label"],z={transforms:[function(E){J(E,[[/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi,TE],[/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g,tE]],{ignore:["link","linkReference"]})}],enter:{literalAutolink:function(E){this.enter({type:"link",title:null,url:"",children:[]},E)},literalAutolinkEmail:eE,literalAutolinkHttp:eE,literalAutolinkWww:eE},exit:{literalAutolink:function(E){this.exit(E)},literalAutolinkEmail:function(E){this.config.exit.autolinkEmail.call(this,E)},literalAutolinkHttp:function(E){this.config.exit.autolinkProtocol.call(this,E)},literalAutolinkWww:function(E){this.config.exit.data.call(this,E);this.stack[this.stack.length-1].url="http://"+this.sliceSerialize(E)}}},EE={unsafe:[{character:"@",before:"[+\\-.\\w]",after:"[\\-.\\w]",inConstruct:j,notInConstruct:q},{character:".",before:"[Ww]",after:"[\\-.\\w]",inConstruct:j,notInConstruct:q},{character:":",before:"[ps]",after:"\\/",inConstruct:j,notInConstruct:q}]};function eE(E){this.config.enter.autolinkProtocol.call(this,E)}function TE(E,e,T,t,R){let A="";if(!RE(R))return!1;if(/^w/i.test(e)&&(T=e+T,e="",A="http://"),!function(E){const e=E.split(".");if(e.length<2||e[e.length-1]&&(/_/.test(e[e.length-1])||!/[a-zA-Z\d]/.test(e[e.length-1]))||e[e.length-2]&&(/_/.test(e[e.length-2])||!/[a-zA-Z\d]/.test(e[e.length-2])))return!1;return!0}(T))return!1;const n=function(E){const e=/[!"&'),.:;<>?\]}]+$/.exec(E);if(!e)return[E,void 0];E=E.slice(0,e.index);let T=e[0],t=T.indexOf(")");const R=w(E,"(");let A=w(E,")");for(;-1!==t&&R>A;)E+=T.slice(0,t+1),T=T.slice(t+1),t=T.indexOf(")"),A++;return[E,T]}(T+t);if(!n[0])return!1;const S={type:"link",title:null,url:A+e+n[0],children:[{type:"text",value:e+n[0]}]};return n[1]?[S,{type:"text",value:n[1]}]:S}function tE(E,e,T,t){return!(!RE(t,!0)||/[-\d_]$/.test(T))&&{type:"link",title:null,url:"mailto:"+e+"@"+T,children:[{type:"text",value:e+"@"+T}]}}function RE(E,e){const T=E.input.charCodeAt(E.index-1);return(0===E.index||(0,R.B8)(T)||(0,R.Xh)(T))&&(!e||47!==T)}var AE=T(12116);function nE(E){return E.label||!E.identifier?E.label||"":(0,AE.v)(E.identifier)}function SE(E,e,T,t){let R=t.join.length;for(;R--;){const A=t.join[R](E,e,T,t);if(!0===A||1===A)break;if("number"===typeof A)return"\n".repeat(1+A);if(!1===A)return"\n\n\x3c!----\x3e\n\n"}return"\n\n"}const rE=/\r?\n|\r/g;function OE(E){if(!E._compiled){const e=(E.atBreak?"[\\r\\n][\\t ]*":"")+(E.before?"(?:"+E.before+")":"");E._compiled=new RegExp((e?"("+e+")":"")+(/[|\\{}()[\]^$+*?.-]/.test(E.character)?"\\":"")+E.character+(E.after?"(?:"+E.after+")":""),"g")}return E._compiled}function NE(E,e){return IE(E,e.inConstruct,!0)&&!IE(E,e.notInConstruct,!1)}function IE(E,e,T){if("string"===typeof e&&(e=[e]),!e||0===e.length)return T;let t=-1;for(;++t<e.length;)if(E.includes(e[t]))return!0;return!1}function sE(E,e,T){const t=(T.before||"")+(e||"")+(T.after||""),R=[],A=[],n={};let S=-1;for(;++S<E.unsafe.length;){const e=E.unsafe[S];if(!NE(E.stack,e))continue;const T=OE(e);let A;for(;A=T.exec(t);){const E="before"in e||Boolean(e.atBreak),T="after"in e,t=A.index+(E?A[1].length:0);R.includes(t)?(n[t].before&&!E&&(n[t].before=!1),n[t].after&&!T&&(n[t].after=!1)):(R.push(t),n[t]={before:E,after:T})}}R.sort(oE);let r=T.before?T.before.length:0;const O=t.length-(T.after?T.after.length:0);for(S=-1;++S<R.length;){const E=R[S];E<r||E>=O||(E+1<O&&R[S+1]===E+1&&n[E].after&&!n[E+1].before&&!n[E+1].after||R[S-1]===E-1&&n[E].before&&!n[E-1].before&&!n[E-1].after||(r!==E&&A.push(iE(t.slice(r,E),"\\")),r=E,!/[!-/:-@[-`{-~]/.test(t.charAt(E))||T.encode&&T.encode.includes(t.charAt(E))?(A.push("&#x"+t.charCodeAt(E).toString(16).toUpperCase()+";"),r++):A.push("\\")))}return A.push(iE(t.slice(r,O),T.after)),A.join("")}function oE(E,e){return E-e}function iE(E,e){const T=/\\(?=[!-/:-@[-`{-~])/g,t=[],R=[],A=E+e;let n,S=-1,r=0;for(;n=T.exec(A);)t.push(n.index);for(;++S<t.length;)r!==t[S]&&R.push(E.slice(r,t[S])),R.push("\\"),r=t[S];return R.push(E.slice(r)),R.join("")}function aE(E){const e=E||{},T=e.now||{};let t=e.lineShift||0,R=T.line||1,A=T.column||1;return{move:function(E){const e=E||"",T=e.split(/\r?\n|\r/g),n=T[T.length-1];return R+=T.length-1,A=1===T.length?A+n.length:1+n.length+t,e},current:function(){return{now:{line:R,column:A},lineShift:t}},shift:function(E){t+=E}}}function CE(E){this.enter({type:"footnoteDefinition",identifier:"",label:"",children:[]},E)}function _E(){this.buffer()}function LE(E){const e=this.resume(),T=this.stack[this.stack.length-1];T.label=e,T.identifier=(0,P.d)(this.sliceSerialize(E)).toLowerCase()}function lE(E){this.exit(E)}function cE(E){this.enter({type:"footnoteReference",identifier:"",label:""},E)}function DE(){this.buffer()}function uE(E){const e=this.resume(),T=this.stack[this.stack.length-1];T.label=e,T.identifier=(0,P.d)(this.sliceSerialize(E)).toLowerCase()}function PE(E){this.exit(E)}function ME(E,e,T,t){const R=aE(t);let A=R.move("[^");const n=T.enter("footnoteReference"),S=T.enter("reference");return A+=R.move(sE(T,nE(E),{...R.current(),before:A,after:"]"})),S(),n(),A+=R.move("]"),A}function UE(E,e,T,t){const R=aE(t);let A=R.move("[^");const n=T.enter("footnoteDefinition"),S=T.enter("label");return A+=R.move(sE(T,nE(E),{...R.current(),before:A,after:"]"})),S(),A+=R.move("]:"+(E.children&&E.children.length>0?" ":"")),R.shift(4),A+=R.move(function(E,e){const T=[];let t,R=0,A=0;for(;t=rE.exec(E);)n(E.slice(R,t.index)),T.push(t[0]),R=t.index+t[0].length,A++;return n(E.slice(R)),T.join("");function n(E){T.push(e(E,A,!E))}}(function(E,e,T){const t=e.indexStack,R=E.children||[],A=e.createTracker(T),n=[];let S=-1;for(t.push(-1);++S<R.length;){const T=R[S];t[t.length-1]=S,n.push(A.move(e.handle(T,E,e,{before:"\n",after:"\n",...A.current()}))),"list"!==T.type&&(e.bulletLastUsed=void 0),S<R.length-1&&n.push(A.move(SE(T,R[S+1],E,e)))}return t.pop(),n.join("")}(E,T,R.current()),dE)),n(),A}function dE(E,e,T){return 0===e?E:(T?"":"    ")+E}function pE(E,e,T){const t=e.indexStack,R=E.children||[],A=[];let n=-1,S=T.before;t.push(-1);let r=e.createTracker(T);for(;++n<R.length;){const O=R[n];let N;if(t[t.length-1]=n,n+1<R.length){let T=e.handle.handlers[R[n+1].type];T&&T.peek&&(T=T.peek),N=T?T(R[n+1],E,e,{before:"",after:"",...r.current()}).charAt(0):""}else N=T.after;A.length>0&&("\r"===S||"\n"===S)&&"html"===O.type&&(A[A.length-1]=A[A.length-1].replace(/(\r?\n|\r)$/," "),S=" ",r=e.createTracker(T),r.move(A.join(""))),A.push(r.move(e.handle(O,E,e,{...r.current(),before:S,after:N}))),S=A[A.length-1].slice(-1)}return t.pop(),A.join("")}ME.peek=function(){return"["};hE.peek=function(){return"~"};const fE={canContainEols:["delete"],enter:{strikethrough:function(E){this.enter({type:"delete",children:[]},E)}},exit:{strikethrough:function(E){this.exit(E)}}},GE={unsafe:[{character:"~",inConstruct:"phrasing",notInConstruct:["autolink","destinationLiteral","destinationRaw","reference","titleQuote","titleApostrophe"]}],handlers:{delete:hE}};function hE(E,e,T,t){const R=aE(t),A=T.enter("strikethrough");let n=R.move("~~");return n+=pE(E,T,{...R.current(),before:n,after:"~"}),n+=R.move("~~"),A(),n}function mE(E,e,T){let t=E.value||"",R="`",A=-1;for(;new RegExp("(^|[^`])"+R+"([^`]|$)").test(t);)R+="`";for(/[^ \r\n]/.test(t)&&(/^[ \r\n]/.test(t)&&/[ \r\n]$/.test(t)||/^`|`$/.test(t))&&(t=" "+t+" ");++A<T.unsafe.length;){const E=T.unsafe[A],e=OE(E);let R;if(E.atBreak)for(;R=e.exec(t);){let E=R.index;10===t.charCodeAt(E)&&13===t.charCodeAt(E-1)&&E--,t=t.slice(0,E)+" "+t.slice(R.index+1)}}return R+t+R}function gE(E){return E.length}function HE(E){const e="string"===typeof E?E.codePointAt(0):0;return 67===e||99===e?99:76===e||108===e?108:82===e||114===e?114:0}mE.peek=function(){return"`"};const BE={enter:{table:function(E){const e=E._align;this.enter({type:"table",align:e.map((E=>"none"===E?null:E)),children:[]},E),this.setData("inTable",!0)},tableData:YE,tableHeader:YE,tableRow:function(E){this.enter({type:"tableRow",children:[]},E)}},exit:{codeText:function(E){let e=this.resume();this.getData("inTable")&&(e=e.replace(/\\([\\|])/g,bE));this.stack[this.stack.length-1].value=e,this.exit(E)},table:function(E){this.exit(E),this.setData("inTable")},tableData:FE,tableHeader:FE,tableRow:FE}};function FE(E){this.exit(E)}function YE(E){this.enter({type:"tableCell",children:[]},E)}function bE(E,e){return"|"===e?e:E}function yE(E){const e=E||{},T=e.tableCellPadding,t=e.tablePipeAlign,R=e.stringLength,A=T?" ":"|";return{unsafe:[{character:"\r",inConstruct:"tableCell"},{character:"\n",inConstruct:"tableCell"},{atBreak:!0,character:"|",after:"[\t :-]"},{character:"|",inConstruct:"tableCell"},{atBreak:!0,character:":",after:"-"},{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{table:function(E,e,T,t){return S(function(E,e,T){const t=E.children;let R=-1;const A=[],n=e.enter("table");for(;++R<t.length;)A[R]=r(t[R],e,T);return n(),A}(E,T,t),E.align)},tableRow:function(E,e,T,t){const R=S([r(E,T,t)]);return R.slice(0,R.indexOf("\n"))},tableCell:n,inlineCode:function(E,e,T){let t=mE(E,0,T);T.stack.includes("tableCell")&&(t=t.replace(/\|/g,"\\$&"));return t}}};function n(E,e,T,t){const R=T.enter("tableCell"),n=T.enter("phrasing"),S=pE(E,T,{...t,before:A,after:A});return n(),R(),S}function S(E,e){return function(E,e={}){const T=(e.align||[]).concat(),t=e.stringLength||gE,R=[],A=[],n=[],S=[];let r=0,O=-1;for(;++O<E.length;){const T=[],R=[];let I=-1;for(E[O].length>r&&(r=E[O].length);++I<E[O].length;){const A=null===(N=E[O][I])||void 0===N?"":String(N);if(!1!==e.alignDelimiters){const E=t(A);R[I]=E,(void 0===S[I]||E>S[I])&&(S[I]=E)}T.push(A)}A[O]=T,n[O]=R}var N;let I=-1;if("object"===typeof T&&"length"in T)for(;++I<r;)R[I]=HE(T[I]);else{const E=HE(T);for(;++I<r;)R[I]=E}I=-1;const s=[],o=[];for(;++I<r;){const E=R[I];let T="",t="";99===E?(T=":",t=":"):108===E?T=":":114===E&&(t=":");let A=!1===e.alignDelimiters?1:Math.max(1,S[I]-T.length-t.length);const n=T+"-".repeat(A)+t;!1!==e.alignDelimiters&&(A=T.length+A+t.length,A>S[I]&&(S[I]=A),o[I]=A),s[I]=n}A.splice(1,0,s),n.splice(1,0,o),O=-1;const i=[];for(;++O<A.length;){const E=A[O],T=n[O];I=-1;const t=[];for(;++I<r;){const A=E[I]||"";let n="",O="";if(!1!==e.alignDelimiters){const E=S[I]-(T[I]||0),e=R[I];114===e?n=" ".repeat(E):99===e?E%2?(n=" ".repeat(E/2+.5),O=" ".repeat(E/2-.5)):(n=" ".repeat(E/2),O=n):O=" ".repeat(E)}!1===e.delimiterStart||I||t.push("|"),!1===e.padding||!1===e.alignDelimiters&&""===A||!1===e.delimiterStart&&!I||t.push(" "),!1!==e.alignDelimiters&&t.push(n),t.push(A),!1!==e.alignDelimiters&&t.push(O),!1!==e.padding&&t.push(" "),!1===e.delimiterEnd&&I===r-1||t.push("|")}i.push(!1===e.delimiterEnd?t.join("").replace(/ +$/,""):t.join(""))}return i.join("\n")}(E,{align:e,alignDelimiters:t,padding:T,stringLength:R})}function r(E,e,T){const t=E.children;let R=-1;const A=[],S=e.enter("tableRow");for(;++R<t.length;)A[R]=n(t[R],0,e,T);return S(),A}}function VE(E,e,T,t){const R=function(E){const e=E.options.listItemIndent||"tab";if(1===e||"1"===e)return"one";if("tab"!==e&&"one"!==e&&"mixed"!==e)throw new Error("Cannot serialize items with `"+e+"` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`");return e}(T);let A=T.bulletCurrent||function(E){const e=E.options.bullet||"*";if("*"!==e&&"+"!==e&&"-"!==e)throw new Error("Cannot serialize items with `"+e+"` for `options.bullet`, expected `*`, `+`, or `-`");return e}(T);e&&"list"===e.type&&e.ordered&&(A=("number"===typeof e.start&&e.start>-1?e.start:1)+(!1===T.options.incrementListMarker?0:e.children.indexOf(E))+A);let n=A.length+1;("tab"===R||"mixed"===R&&(e&&"list"===e.type&&e.spread||E.spread))&&(n=4*Math.ceil(n/4));const S=T.createTracker(t);S.move(A+" ".repeat(n-A.length)),S.shift(n);const r=T.enter("listItem"),O=T.indentLines(T.containerFlow(E,S.current()),(function(E,e,T){if(e)return(T?"":" ".repeat(n))+E;return(T?A:A+" ".repeat(n-A.length))+E}));return r(),O}const vE={exit:{taskListCheckValueChecked:XE,taskListCheckValueUnchecked:XE,paragraph:function(E){const e=this.stack[this.stack.length-2];if(e&&"listItem"===e.type&&"boolean"===typeof e.checked){const E=this.stack[this.stack.length-1],T=E.children[0];if(T&&"text"===T.type){const t=e.children;let R,A=-1;for(;++A<t.length;){const E=t[A];if("paragraph"===E.type){R=E;break}}R===E&&(T.value=T.value.slice(1),0===T.value.length?E.children.shift():E.position&&T.position&&"number"===typeof T.position.start.offset&&(T.position.start.column++,T.position.start.offset++,E.position.start=Object.assign({},T.position.start)))}}this.exit(E)}}},WE={unsafe:[{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{listItem:function(E,e,T,t){const R=E.children[0],A="boolean"===typeof E.checked&&R&&"paragraph"===R.type,n="["+(E.checked?"x":" ")+"] ",S=aE(t);A&&S.move(n);let r=VE(E,e,T,{...t,...S.current()});A&&(r=r.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,(function(E){return E+n})));return r}}};function XE(E){this.stack[this.stack.length-2].checked="taskListCheckValueChecked"===E.type}function xE(E={}){const e=this.data();function T(E,T){(e[E]?e[E]:e[E]=[]).push(T)}T("micromarkExtensions",function(E){return(0,t.W)([i,{document:{91:{tokenize:f,continuation:{tokenize:G},exit:h}},text:{91:{tokenize:p},93:{add:"after",tokenize:U,resolveTo:d}}},B(E),b,X])}(E)),T("fromMarkdownExtensions",[z,{enter:{gfmFootnoteDefinition:CE,gfmFootnoteDefinitionLabelString:_E,gfmFootnoteCall:cE,gfmFootnoteCallString:DE},exit:{gfmFootnoteDefinition:lE,gfmFootnoteDefinitionLabelString:LE,gfmFootnoteCall:PE,gfmFootnoteCallString:uE}},fE,BE,vE]),T("toMarkdownExtensions",function(E){return{extensions:[EE,{unsafe:[{character:"[",inConstruct:["phrasing","label","reference"]}],handlers:{footnoteDefinition:UE,footnoteReference:ME}},GE,yE(E),WE]}}(E))}},73734:function(E,e,T){"use strict";T.d(e,{WU:function(){return ct}});var t={};let R;T.r(t),T.d(t,{bigquery:function(){return m},db2:function(){return X},hive:function(){return j},mariadb:function(){return nE},mysql:function(){return aE},n1ql:function(){return ME},plsql:function(){return HE},postgresql:function(){return XE},redshift:function(){return jE},singlestoredb:function(){return je},snowflake:function(){return nT},spark:function(){return ne},sql:function(){return Me},sqlite:function(){return ae},transactsql:function(){return Xe},trino:function(){return He}}),function(E){E.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",E.IDENTIFIER="IDENTIFIER",E.STRING="STRING",E.VARIABLE="VARIABLE",E.RESERVED_KEYWORD="RESERVED_KEYWORD",E.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",E.RESERVED_PHRASE="RESERVED_PHRASE",E.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",E.RESERVED_CLAUSE="RESERVED_CLAUSE",E.RESERVED_SELECT="RESERVED_SELECT",E.RESERVED_JOIN="RESERVED_JOIN",E.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",E.ARRAY_KEYWORD="ARRAY_KEYWORD",E.CASE="CASE",E.END="END",E.WHEN="WHEN",E.ELSE="ELSE",E.THEN="THEN",E.LIMIT="LIMIT",E.BETWEEN="BETWEEN",E.AND="AND",E.OR="OR",E.XOR="XOR",E.OPERATOR="OPERATOR",E.COMMA="COMMA",E.ASTERISK="ASTERISK",E.DOT="DOT",E.OPEN_PAREN="OPEN_PAREN",E.CLOSE_PAREN="CLOSE_PAREN",E.LINE_COMMENT="LINE_COMMENT",E.BLOCK_COMMENT="BLOCK_COMMENT",E.NUMBER="NUMBER",E.NAMED_PARAMETER="NAMED_PARAMETER",E.QUOTED_PARAMETER="QUOTED_PARAMETER",E.NUMBERED_PARAMETER="NUMBERED_PARAMETER",E.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",E.CUSTOM_PARAMETER="CUSTOM_PARAMETER",E.DELIMITER="DELIMITER",E.EOF="EOF"}(R||(R={}));const A=E=>({type:R.EOF,raw:"\xabEOF\xbb",text:"\xabEOF\xbb",start:E}),n=A(1/0),S=E=>e=>e.type===E.type&&e.text===E.text,r={ARRAY:S({text:"ARRAY",type:R.RESERVED_KEYWORD}),BY:S({text:"BY",type:R.RESERVED_KEYWORD}),SET:S({text:"SET",type:R.RESERVED_CLAUSE}),STRUCT:S({text:"STRUCT",type:R.RESERVED_KEYWORD}),WINDOW:S({text:"WINDOW",type:R.RESERVED_CLAUSE})},O=E=>E===R.RESERVED_KEYWORD||E===R.RESERVED_FUNCTION_NAME||E===R.RESERVED_PHRASE||E===R.RESERVED_CLAUSE||E===R.RESERVED_SELECT||E===R.RESERVED_SET_OPERATION||E===R.RESERVED_JOIN||E===R.ARRAY_KEYWORD||E===R.CASE||E===R.END||E===R.WHEN||E===R.ELSE||E===R.THEN||E===R.LIMIT||E===R.BETWEEN||E===R.AND||E===R.OR||E===R.XOR,N=E=>E.flatMap(I),I=E=>C(a(E)).map((E=>E.trim())),s=/[^[\]{}]+/y,o=/\{.*?\}/y,i=/\[.*?\]/y,a=E=>{let e=0;const T=[];for(;e<E.length;){s.lastIndex=e;const t=s.exec(E);t&&(T.push([t[0].trim()]),e+=t[0].length),i.lastIndex=e;const R=i.exec(E);if(R){const E=R[0].slice(1,-1).split("|").map((E=>E.trim()));T.push(["",...E]),e+=R[0].length}o.lastIndex=e;const A=o.exec(E);if(A){const E=A[0].slice(1,-1).split("|").map((E=>E.trim()));T.push(E),e+=A[0].length}if(!t&&!R&&!A)throw new Error(`Unbalanced parenthesis in: ${E}`)}return T},C=([E,...e])=>void 0===E?[""]:C(e).flatMap((e=>E.map((E=>E.trim()+" "+e.trim())))),_=E=>E[E.length-1],L=E=>E.sort(((E,e)=>e.length-E.length||E.localeCompare(e))),l=E=>E.reduce(((E,e)=>Math.max(E,e.length)),0),c=E=>E.replace(/\s+/gu," "),D=E=>{return e=Object.values(E).flat(),[...new Set(e)];var e},u=E=>/\n/.test(E),P=D({keywords:["ALL","AND","ANY","ARRAY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTERVAL","INTO","IS","JOIN","LATERAL","LEFT","LIKE","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","STRUCT","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN"],datatypes:["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],stringFormat:["HEX","BASEX","BASE64M","ASCII","UTF-8","UTF8"],misc:["SAFE"],ddl:["LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"]}),M=D({aead:["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH"],aggregateAnalytic:["ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP"],aggregate:["ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM"],approximateAggregate:["APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM"],array:["ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL"],bitwise:["BIT_COUNT"],conversion:["PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST"],date:["CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE"],datetime:["CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME"],debugging:["ERROR"],federatedQuery:["EXTERNAL_QUERY"],geography:["S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y"],hash:["FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512"],hll:["HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT"],interval:["MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL"],json:["JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING"],math:["ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET"],navigation:["FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC"],net:["NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN"],numbering:["RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER"],security:["SESSION_USER"],statisticalAggregate:["CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE"],string:["ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER"],time:["CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME"],timestamp:["CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS"],uuid:["GENERATE_UUID"],conditional:["COALESCE","IF","IFNULL","NULLIF"],legacyAggregate:["AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP"],legacyBitwise:["BIT_COUNT"],legacyCasting:["BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING"],legacyComparison:["COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL"],legacyDatetime:["CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR"],legacyIp:["FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP"],legacyJson:["JSON_EXTRACT","JSON_EXTRACT_SCALAR"],legacyMath:["ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH"],legacyRegex:["REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE"],legacyString:["CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER"],legacyTableWildcard:["TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY"],legacyUrl:["HOST","DOMAIN","TLD"],legacyWindow:["AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER"],legacyMisc:["CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64"],other:["BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW"],ddl:["OPTIONS"],pivot:["PIVOT","UNPIVOT"],dataTypes:["BYTES","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","STRING"]}),U=N(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),d=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),p=N(["UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),f=N(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),G=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),h=N(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),m={tokenizerOptions:{reservedSelect:U,reservedClauses:[...d,...p],reservedSetOperations:f,reservedJoins:G,reservedPhrases:h,reservedKeywords:P,reservedFunctionNames:M,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||"],postProcess:function(E){return function(E){let e=n;return E.map((E=>"OFFSET"===E.text&&"["===e.text?(e=E,{...E,type:R.RESERVED_FUNCTION_NAME}):(e=E,E)))}(function(E){const e=[];for(let t=0;t<E.length;t++){var T;const A=E[t];if((r.ARRAY(A)||r.STRUCT(A))&&"<"===(null===(T=E[t+1])||void 0===T?void 0:T.text)){const T=H(E,t+1),n=E.slice(t,T+1);e.push({type:R.IDENTIFIER,raw:n.map(g("raw")).join(""),text:n.map(g("text")).join(""),start:A.start}),t=T}else e.push(A)}return e}(E))}},formatOptions:{onelineClauses:p}};const g=E=>e=>e.type===R.IDENTIFIER||e.type===R.COMMA?e[E]+" ":e[E];function H(E,e){let T=0;for(let t=e;t<E.length;t++){const e=E[t];if("<"===e.text?T++:">"===e.text?T--:">>"===e.text&&(T-=2),0===T)return t}return E.length-1}const B=D({aggregate:["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG"],scalar:["ABS","ABSVAL","ACOS","ADD_DAYS","ADD_MONTHS","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ARRAY_TRIM","ASCII","ASCII_CHR","ASCII_STR","ASCIISTR","ASIN","ATAN","ATANH","ATAN2","BIGINT","BINARY","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BLOB","BTRIM","CARDINALITY","CCSID_ENCODING","CEILING","CEIL","CHAR","CHAR9","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CLOB","COALESCE","COLLATION_KEY","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","DATE","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DBCLOB","DECFLOAT","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECIMAL","DEC","DECODE","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DECRYPT_DATAKEY_BIGINT","DECRYPT_DATAKEY_BIT","DECRYPT_DATAKEY_CLOB","DECRYPT_DATAKEY_DBCLOB","DECRYPT_DATAKEY_DECIMAL","DECRYPT_DATAKEY_INTEGER","DECRYPT_DATAKEY_VARCHAR","DECRYPT_DATAKEY_VARGRAPHIC","DEGREES","DIFFERENCE","DIGITS","DOUBLE_PRECISION","DOUBLE","DSN_XMLVALIDATE","EBCDIC_CHR","EBCDIC_STR","ENCRYPT_DATAKEY","ENCRYPT_TDES","EXP","EXTRACT","FLOAT","FLOOR","GENERATE_UNIQUE","GENERATE_UNIQUE_BINARY","GETHINT","GETVARIABLE","GRAPHIC","GREATEST","HASH","HASH_CRC32","HASH_MD5","HASH_SHA1","HASH_SHA256","HEX","HOUR","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTEGER","INT","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LOCATE","LOCATE_IN_STRING","LOG10","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NORMALIZE_DECFLOAT","NORMALIZE_STRING","NULLIF","NVL","OVERLAY","PACK","POSITION","POSSTR","POWER","POW","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND","ROUND_TIMESTAMP","ROWID","RPAD","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SMALLINT","SOUNDEX","SOAPHTTPC","SOAPHTTPV","SOAPHTTPNC","SOAPHTTPNV","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TAN","TANH","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMP_TZ","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TOTALORDER","TO_TIMESTAMP","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRUNC","TRUNC_TIMESTAMP","UCASE","UNICODE","UNICODE_STR","UNISTR","UPPER","VALUE","VARBINARY","VARCHAR","VARCHAR9","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARGRAPHIC","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLMODIFY","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLSERIALIZE","XMLTEXT","XMLXSROBJECTID","XSLTRANSFORM","YEAR"],table:["ADMIN_TASK_LIST","ADMIN_TASK_OUTPUT","ADMIN_TASK_STATUS","BLOCKING_THREADS","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE"],row:["UNPACK"],olap:["CUME_DIST","PERCENT_RANK","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT"],cast:["CAST"]}),F=D({standard:["ALL","ALLOCATE","ALLOW","ALTERAND","ANY","AS","ARRAY","ARRAY_EXISTS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","AUDIT","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BUFFERPOOL","BY","CAPTURE","CASCADED","CAST","CCSID","CHARACTER","CHECK","CLONE","CLUSTER","COLLECTION","COLLID","COLUMN","CONDITION","CONNECTION","CONSTRAINT","CONTENT","CONTINUE","CREATE","CUBE","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRVAL","CURSOR","DATA","DATABASE","DBINFO","DECLARE","DEFAULT","DESCRIPTOR","DETERMINISTIC","DISABLE","DISALLOW","DISTINCT","DO","DOCUMENT","DSSIZE","DYNAMIC","EDITPROC","ELSE","ELSEIF","ENCODING","ENCRYPTION","ENDING","END-EXEC","ERASE","ESCAPE","EXCEPTION","EXISTS","EXIT","EXTERNAL","FENCED","FIELDPROC","FINAL","FIRST","FOR","FREE","FULL","FUNCTION","GENERATED","GET","GLOBAL","GOTO","GROUP","HANDLER","HOLD","HOURS","IF","IMMEDIATE","IN","INCLUSIVE","INDEX","INHERIT","INNER","INOUT","INSENSITIVE","INTO","IS","ISOBID","ITERATE","JAR","KEEP","KEY","LANGUAGE","LAST","LC_CTYPE","LEAVE","LIKE","LOCAL","LOCALE","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LONG","LOOP","MAINTAINED","MATERIALIZED","MICROSECONDS","MINUTEMINUTES","MODIFIES","MONTHS","NEXT","NEXTVAL","NO","NONE","NOT","NULL","NULLS","NUMPARTS","OBID","OF","OLD","ON","OPTIMIZATION","OPTIMIZE","ORDER","ORGANIZATION","OUT","OUTER","PACKAGE","PARAMETER","PART","PADDED","PARTITION","PARTITIONED","PARTITIONING","PATH","PIECESIZE","PERIOD","PLAN","PRECISION","PREVVAL","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","READS","REFERENCES","RESIGNAL","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","ROLE","ROLLUP","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROW","ROWSET","SCHEMA","SCRATCHPAD","SECONDS","SECQTY","SECURITY","SEQUENCE","SENSITIVE","SESSION_USER","SIMPLE","SOME","SOURCE","SPECIFIC","STANDARD","STATIC","STATEMENT","STAY","STOGROUP","STORES","STYLE","SUMMARY","SYNONYM","SYSDATE","SYSTEM","SYSTIMESTAMP","TABLE","TABLESPACE","THEN","TO","TRIGGER","TYPE","UNDO","UNIQUE","UNTIL","USER","USING","VALIDPROC","VARIABLE","VARIANT","VCAT","VERSIONING","VIEW","VOLATILE","VOLUMES","WHILE","WLM","XMLEXISTS","XMLCAST","YEARS","ZONE"]}),Y=N(["SELECT [ALL | DISTINCT]"]),b=N(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","FETCH FIRST","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT","CREATE [OR REPLACE] VIEW","CREATE [GLOBAL TEMPORARY] TABLE"]),y=N(["UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [HIERARCHY]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {IDENTITY | EXPRESSION | DEFAULT | NOT NULL}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","AFTER","GO","ALLOCATE CURSOR","ALTER DATABASE","ALTER FUNCTION","ALTER INDEX","ALTER MASK","ALTER PERMISSION","ALTER PROCEDURE","ALTER SEQUENCE","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE LOCATORS","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT","COMMIT","CONNECT","CREATE ALIAS","CREATE AUXILIARY TABLE","CREATE DATABASE","CREATE FUNCTION","CREATE GLOBAL TEMPORARY TABLE","CREATE INDEX","CREATE LOB TABLESPACE","CREATE MASK","CREATE PERMISSION","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE STOGROUP","CREATE SYNONYM","CREATE TABLESPACE","CREATE TRIGGER","CREATE TRUSTED CONTEXT","CREATE TYPE","CREATE VARIABLE","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE STATEMENT","DECLARE TABLE","DECLARE VARIABLE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE OUTPUT","DESCRIBE PROCEDURE","DESCRIBE TABLE","DROP","END DECLARE SECTION","EXCHANGE","EXECUTE","EXECUTE IMMEDIATE","EXPLAIN","FETCH","FREE LOCATOR","GET DIAGNOSTICS","GRANT","HOLD LOCATOR","INCLUDE","LABEL","LOCK TABLE","OPEN","PREPARE","REFRESH","RELEASE","RELEASE SAVEPOINT","RENAME","REVOKE","ROLLBACK","SAVEPOINT","SELECT INTO","SET CONNECTION","SET CURRENT ACCELERATOR","SET CURRENT APPLICATION COMPATIBILITY","SET CURRENT APPLICATION ENCODING SCHEME","SET CURRENT DEBUG MODE","SET CURRENT DECFLOAT ROUNDING MODE","SET CURRENT DEGREE","SET CURRENT EXPLAIN MODE","SET CURRENT GET_ACCEL_ARCHIVE","SET CURRENT LOCALE LC_CTYPE","SET CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION","SET CURRENT OPTIMIZATION HINT","SET CURRENT PACKAGE PATH","SET CURRENT PACKAGESET","SET CURRENT PRECISION","SET CURRENT QUERY ACCELERATION","SET CURRENT QUERY ACCELERATION WAITFORDATA","SET CURRENT REFRESH AGE","SET CURRENT ROUTINE VERSION","SET CURRENT RULES","SET CURRENT SQLID","SET CURRENT TEMPORAL BUSINESS_TIME","SET CURRENT TEMPORAL SYSTEM_TIME","SET ENCRYPTION PASSWORD","SET PATH","SET SESSION TIME ZONE","SIGNAL","VALUES INTO","WHENEVER"]),V=N(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),v=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),W=N(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),X={tokenizerOptions:{reservedSelect:Y,reservedClauses:[...b,...y],reservedSetOperations:V,reservedJoins:v,reservedPhrases:W,reservedKeywords:F,reservedFunctionNames:B,stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","\xac=","\xac>","\xac<","!>","!<","||"]},formatOptions:{onelineClauses:y}},x=D({math:["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET"],array:["ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY"],conversion:["BINARY","CAST"],date:["ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR"],conditional:["ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL"],string:["ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER"],masking:["MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N"],misc:["AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION"],aggregate:["AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],table:["EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK"],window:["LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],dataTypes:["DECIMAL","NUMERIC","VARCHAR","CHAR"]}),w=D({nonReserved:["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","STRUCT","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE"],reserved:["ALL","ALTER","AND","ARRAY","AS","AUTHORIZATION","BETWEEN","BIGINT","BINARY","BOOLEAN","BOTH","BY","CASE","CAST","CHAR","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DATE","DECIMAL","DELETE","DESCRIBE","DISTINCT","DOUBLE","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FLOAT","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INT","INTERSECT","INTERVAL","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MAP","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","SMALLINT","TABLE","TABLESAMPLE","THEN","TIMESTAMP","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","VARCHAR","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","INTEGER","PRECISION","VIEWS","TIME","NUMERIC","SYNC"],fileTypes:["TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"]}),K=N(["SELECT [ALL | DISTINCT]"]),k=N(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"]),$=N(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),J=N(["UNION [ALL | DISTINCT]"]),Z=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),Q=N(["{ROWS | RANGE} BETWEEN"]),j={tokenizerOptions:{reservedSelect:K,reservedClauses:[...k,...$],reservedSetOperations:J,reservedJoins:Z,reservedPhrases:Q,reservedKeywords:w,reservedFunctionNames:x,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:$}},q=D({all:["ACCESSIBLE","ACCOUNT","ACTION","ADD","ADMIN","AFTER","AGAINST","AGGREGATE","ALL","ALGORITHM","ALTER","ALWAYS","ANALYZE","AND","ANY","AS","ASC","ASCII","ASENSITIVE","AT","ATOMIC","AUTHORS","AUTO_INCREMENT","AUTOEXTEND_SIZE","AUTO","AVG","AVG_ROW_LENGTH","BACKUP","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BINLOG","BIT","BLOB","BLOCK","BODY","BOOL","BOOLEAN","BOTH","BTREE","BY","BYTE","CACHE","CALL","CASCADE","CASCADED","CASE","CATALOG_NAME","CHAIN","CHANGE","CHANGED","CHAR","CHARACTER","CHARSET","CHECK","CHECKPOINT","CHECKSUM","CIPHER","CLASS_ORIGIN","CLIENT","CLOB","CLOSE","COALESCE","CODE","COLLATE","COLLATION","COLUMN","COLUMN_NAME","COLUMNS","COLUMN_ADD","COLUMN_CHECK","COLUMN_CREATE","COLUMN_DELETE","COLUMN_GET","COMMENT","COMMIT","COMMITTED","COMPACT","COMPLETION","COMPRESSED","CONCURRENT","CONDITION","CONNECTION","CONSISTENT","CONSTRAINT","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONTAINS","CONTEXT","CONTINUE","CONTRIBUTORS","CONVERT","CPU","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_POS","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CURSOR_NAME","CYCLE","DATA","DATABASE","DATABASES","DATAFILE","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFINER","DELAYED","DELAY_KEY_WRITE","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DES_KEY_FILE","DETERMINISTIC","DIAGNOSTICS","DIRECTORY","DISABLE","DISCARD","DISK","DISTINCT","DISTINCTROW","DIV","DO","DOUBLE","DO_DOMAIN_IDS","DROP","DUAL","DUMPFILE","DUPLICATE","DYNAMIC","EACH","ELSE","ELSEIF","ELSIF","EMPTY","ENABLE","ENCLOSED","END","ENDS","ENGINE","ENGINES","ENUM","ERROR","ERRORS","ESCAPE","ESCAPED","EVENT","EVENTS","EVERY","EXAMINED","EXCEPT","EXCHANGE","EXCLUDE","EXECUTE","EXCEPTION","EXISTS","EXIT","EXPANSION","EXPIRE","EXPORT","EXPLAIN","EXTENDED","EXTENT_SIZE","FALSE","FAST","FAULTS","FEDERATED","FETCH","FIELDS","FILE","FIRST","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWING","FOLLOWS","FOR","FORCE","FOREIGN","FORMAT","FOUND","FROM","FULL","FULLTEXT","FUNCTION","GENERAL","GENERATED","GET_FORMAT","GET","GLOBAL","GOTO","GRANT","GRANTS","GROUP","HANDLER","HARD","HASH","HAVING","HELP","HIGH_PRIORITY","HISTORY","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IGNORE","IGNORED","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IMMEDIATE","IMPORT","INTERSECT","IN","INCREMENT","INDEX","INDEXES","INFILE","INITIAL_SIZE","INNER","INOUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTALL","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTERVAL","INVISIBLE","INTO","IO","IO_THREAD","IPC","IS","ISOLATION","ISOPEN","ISSUER","ITERATE","INVOKER","JOIN","JSON","JSON_TABLE","KEY","KEYS","KEY_BLOCK_SIZE","KILL","LANGUAGE","LAST","LAST_VALUE","LASTVAL","LEADING","LEAVE","LEAVES","LEFT","LESS","LEVEL","LIKE","LIMIT","LINEAR","LINES","LIST","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOCKS","LOGFILE","LOGS","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","MASTER","MASTER_CONNECT_RETRY","MASTER_DELAY","MASTER_GTID_POS","MASTER_HOST","MASTER_LOG_FILE","MASTER_LOG_POS","MASTER_PASSWORD","MASTER_PORT","MASTER_SERVER_ID","MASTER_SSL","MASTER_SSL_CA","MASTER_SSL_CAPATH","MASTER_SSL_CERT","MASTER_SSL_CIPHER","MASTER_SSL_CRL","MASTER_SSL_CRLPATH","MASTER_SSL_KEY","MASTER_SSL_VERIFY_SERVER_CERT","MASTER_USER","MASTER_USE_GTID","MASTER_HEARTBEAT_PERIOD","MATCH","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_SIZE","MAX_STATEMENT_TIME","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MAXVALUE","MEDIUM","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMORY","MERGE","MESSAGE_TEXT","MICROSECOND","MIDDLEINT","MIGRATE","MINUS","MINUTE","MINUTE_MICROSECOND","MINUTE_SECOND","MINVALUE","MIN_ROWS","MOD","MODE","MODIFIES","MODIFY","MONITOR","MONTH","MUTEX","MYSQL","MYSQL_ERRNO","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NESTED","NEVER","NEW","NEXT","NEXTVAL","NO","NOMAXVALUE","NOMINVALUE","NOCACHE","NOCYCLE","NO_WAIT","NOWAIT","NODEGROUP","NONE","NOT","NOTFOUND","NO_WRITE_TO_BINLOG","NULL","NUMBER","NUMERIC","NVARCHAR","OF","OFFSET","OLD_PASSWORD","ON","ONE","ONLINE","ONLY","OPEN","OPTIMIZE","OPTIONS","OPTION","OPTIONALLY","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OUTFILE","OVER","OVERLAPS","OWNER","PACKAGE","PACK_KEYS","PAGE","PAGE_CHECKSUM","PARSER","PARSE_VCOL_EXPR","PATH","PERIOD","PARTIAL","PARTITION","PARTITIONING","PARTITIONS","PASSWORD","PERSISTENT","PHASE","PLUGIN","PLUGINS","PORT","PORTION","PRECEDES","PRECEDING","PRECISION","PREPARE","PRESERVE","PREV","PREVIOUS","PRIMARY","PRIVILEGES","PROCEDURE","PROCESS","PROCESSLIST","PROFILE","PROFILES","PROXY","PURGE","QUARTER","QUERY","QUICK","RAISE","RANGE","RAW","READ","READ_ONLY","READ_WRITE","READS","REAL","REBUILD","RECOVER","RECURSIVE","REDO_BUFFER_SIZE","REDOFILE","REDUNDANT","REFERENCES","REGEXP","RELAY","RELAYLOG","RELAY_LOG_FILE","RELAY_LOG_POS","RELAY_THREAD","RELEASE","RELOAD","REMOVE","RENAME","REORGANIZE","REPAIR","REPEATABLE","REPLACE","REPLAY","REPLICA","REPLICAS","REPLICA_POS","REPLICATION","REPEAT","REQUIRE","RESET","RESIGNAL","RESTART","RESTORE","RESTRICT","RESUME","RETURNED_SQLSTATE","RETURN","RETURNING","RETURNS","REUSE","REVERSE","REVOKE","RIGHT","RLIKE","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROW","ROWCOUNT","ROWNUM","ROWS","ROWTYPE","ROW_COUNT","ROW_FORMAT","RTREE","SAVEPOINT","SCHEDULE","SCHEMA","SCHEMA_NAME","SCHEMAS","SECOND","SECOND_MICROSECOND","SECURITY","SELECT","SENSITIVE","SEPARATOR","SEQUENCE","SERIAL","SERIALIZABLE","SESSION","SERVER","SET","SETVAL","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMPLE","SKIP","SLAVE","SLAVES","SLAVE_POS","SLOW","SNAPSHOT","SMALLINT","SOCKET","SOFT","SOME","SONAME","SOUNDS","SOURCE","STAGE","STORED","SPATIAL","SPECIFIC","REF_SYSTEM_ID","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_NO_CACHE","SQL_SMALL_RESULT","SQL_THREAD","SQL_TSI_SECOND","SQL_TSI_MINUTE","SQL_TSI_HOUR","SQL_TSI_DAY","SQL_TSI_WEEK","SQL_TSI_MONTH","SQL_TSI_QUARTER","SQL_TSI_YEAR","SSL","START","STARTING","STARTS","STATEMENT","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STATUS","STOP","STORAGE","STRAIGHT_JOIN","STRING","SUBCLASS_ORIGIN","SUBJECT","SUBPARTITION","SUBPARTITIONS","SUPER","SUSPEND","SWAPS","SWITCHES","SYSDATE","SYSTEM","SYSTEM_TIME","TABLE","TABLE_NAME","TABLES","TABLESPACE","TABLE_CHECKSUM","TEMPORARY","TEMPTABLE","TERMINATED","TEXT","THAN","THEN","TIES","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TINYBLOB","TINYINT","TINYTEXT","TO","TRAILING","TRANSACTION","TRANSACTIONAL","THREADS","TRIGGER","TRIGGERS","TRUE","TRUNCATE","TYPE","TYPES","UNBOUNDED","UNCOMMITTED","UNDEFINED","UNDO_BUFFER_SIZE","UNDOFILE","UNDO","UNICODE","UNION","UNIQUE","UNKNOWN","UNLOCK","UNINSTALL","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USER_RESOURCES","USE_FRM","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARCHAR2","VARIABLES","VARYING","VIA","VIEW","VIRTUAL","VISIBLE","VERSIONING","WAIT","WARNINGS","WEEK","WEIGHT_STRING","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","X509","XOR","XA","XML","YEAR","YEAR_MONTH","ZEROFILL"]}),z=D({all:["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","DECIMAL","DEC","NUMERIC","FIXED","FLOAT","DOUBLE","DOUBLE PRECISION","REAL","BIT","BINARY","BLOB","CHAR","NATIONAL CHAR","CHAR BYTE","ENUM","VARBINARY","VARCHAR","NATIONAL VARCHAR","TIME","DATETIME","TIMESTAMP","YEAR"]}),EE=N(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),eE=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","SET","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]","RETURNING"]),TE=N(["UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),tE=N(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),RE=N(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),AE=N(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN"]),nE={tokenizerOptions:{reservedSelect:EE,reservedClauses:[...eE,...TE],reservedSetOperations:tE,reservedJoins:RE,reservedPhrases:AE,supportsXor:!0,reservedKeywords:q,reservedFunctionNames:z,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!"],postProcess:function(E){return E.map(((e,T)=>{const t=E[T+1]||n;return r.SET(e)&&"("===t.text?{...e,type:R.RESERVED_FUNCTION_NAME}:e}))}},formatOptions:{onelineClauses:TE}};const SE=D({all:["ACCESSIBLE","ACCOUNT","ACTION","ACTIVE","ADD","ADMIN","AFTER","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER","ALWAYS","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASCII","ASENSITIVE","AT","ATTRIBUTE","AUTHENTICATION","AUTOEXTEND_SIZE","AUTO_INCREMENT","AVG","AVG_ROW_LENGTH","BACKUP","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BINLOG","BIT","BLOB","BLOCK","BOOL","BOOLEAN","BOTH","BTREE","BUCKETS","BY","BYTE","CACHE","CALL","CASCADE","CASCADED","CASE","CATALOG_NAME","CHAIN","CHALLENGE_RESPONSE","CHANGE","CHANGED","CHANNEL","CHAR","CHARACTER","CHARSET","CHECK","CHECKSUM","CIPHER","CLASS_ORIGIN","CLIENT","CLONE","CLOSE","COALESCE","CODE","COLLATE","COLLATION","COLUMN","COLUMNS","COLUMN_FORMAT","COLUMN_NAME","COMMENT","COMMIT","COMMITTED","COMPACT","COMPLETION","COMPONENT","COMPRESSED","COMPRESSION","CONCURRENT","CONDITION","CONNECTION","CONSISTENT","CONSTRAINT","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONTAINS","CONTEXT","CONTINUE","CONVERT","CPU","CREATE","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CURSOR_NAME","DATA","DATABASE","DATABASES","DATAFILE","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULT_AUTH","DEFINER","DEFINITION","DELAYED","DELAY_KEY_WRITE","DELETE","DENSE_RANK","DESC","DESCRIBE","DESCRIPTION","DETERMINISTIC","DIAGNOSTICS","DIRECTORY","DISABLE","DISCARD","DISK","DISTINCT","DISTINCTROW","DIV","DO","DOUBLE","DROP","DUAL","DUMPFILE","DUPLICATE","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCLOSED","ENCRYPTION","END","ENDS","ENFORCED","ENGINE","ENGINES","ENGINE_ATTRIBUTE","ENUM","ERROR","ERRORS","ESCAPE","ESCAPED","EVENT","EVENTS","EVERY","EXCEPT","EXCHANGE","EXCLUDE","EXECUTE","EXISTS","EXIT","EXPANSION","EXPIRE","EXPLAIN","EXPORT","EXTENDED","EXTENT_SIZE","FACTOR","FAILED_LOGIN_ATTEMPTS","FALSE","FAST","FAULTS","FETCH","FIELDS","FILE","FILE_BLOCK_SIZE","FILTER","FINISH","FIRST","FIRST_VALUE","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWING","FOLLOWS","FOR","FORCE","FOREIGN","FORMAT","FOUND","FROM","FULL","FULLTEXT","FUNCTION","GENERAL","GENERATED","GEOMCOLLECTION","GEOMETRY","GEOMETRYCOLLECTION","GET","GET_FORMAT","GET_MASTER_PUBLIC_KEY","GET_SOURCE_PUBLIC_KEY","GLOBAL","GRANT","GRANTS","GROUP","GROUPING","GROUPS","GROUP_REPLICATION","GTID_ONLY","HANDLER","HASH","HAVING","HELP","HIGH_PRIORITY","HISTOGRAM","HISTORY","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IGNORE","IGNORE_SERVER_IDS","IMPORT","IN","INACTIVE","INDEX","INDEXES","INFILE","INITIAL","INITIAL_SIZE","INITIATE","INNER","INOUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTALL","INSTANCE","IN","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTERSECT","INTERVAL","INTO","INVISIBLE","INVOKER","IO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IO_THREAD","IPC","IS","ISOLATION","ISSUER","ITERATE","JOIN","JSON","JSON_TABLE","JSON_VALUE","KEY","KEYRING","KEYS","KEY_BLOCK_SIZE","KILL","LAG","LANGUAGE","LAST","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEAVES","LEFT","LESS","LEVEL","LIKE","LIMIT","LINEAR","LINES","LINESTRING","LIST","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOCKS","LOGFILE","LOGS","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","MASTER","MASTER_AUTO_POSITION","MASTER_BIND","MASTER_COMPRESSION_ALGORITHMS","MASTER_CONNECT_RETRY","MASTER_DELAY","MASTER_HEARTBEAT_PERIOD","MASTER_HOST","MASTER_LOG_FILE","MASTER_LOG_POS","MASTER_PASSWORD","MASTER_PORT","MASTER_PUBLIC_KEY_PATH","MASTER_RETRY_COUNT","MASTER_SSL","MASTER_SSL_CA","MASTER_SSL_CAPATH","MASTER_SSL_CERT","MASTER_SSL_CIPHER","MASTER_SSL_CRL","MASTER_SSL_CRLPATH","MASTER_SSL_KEY","MASTER_SSL_VERIFY_SERVER_CERT","MASTER_TLS_CIPHERSUITES","MASTER_TLS_VERSION","MASTER_USER","MASTER_ZSTD_COMPRESSION_LEVEL","MATCH","MAXVALUE","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_SIZE","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMBER","MEMORY","MERGE","MESSAGE_TEXT","MICROSECOND","MIDDLEINT","MIGRATE","MINUTE","MINUTE_MICROSECOND","MINUTE_SECOND","MIN_ROWS","MOD","MODE","MODIFIES","MODIFY","MONTH","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","MUTEX","MYSQL_ERRNO","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NDB","NDBCLUSTER","NESTED","NETWORK_NAMESPACE","NEVER","NEW","NEXT","NO","NODEGROUP","NONE","NOT","NOWAIT","NO_WAIT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","NULLS","NUMBER","NUMERIC","NVARCHAR","OF","OFF","OFFSET","OJ","OLD","ON","ONE","ONLY","OPEN","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONAL","OPTIONALLY","OPTIONS","OR","ORDER","ORDINALITY","ORGANIZATION","OTHERS","OUT","OUTER","OUTFILE","OVER","OWNER","PACK_KEYS","PAGE","PARSER","PARTIAL","PARTITION","PARTITIONING","PARTITIONS","PASSWORD","PASSWORD_LOCK_TIME","PATH","PERCENT_RANK","PERSIST","PERSIST_ONLY","PHASE","PLUGIN","PLUGINS","PLUGIN_DIR","POINT","POLYGON","PORT","PRECEDES","PRECEDING","PRECISION","PREPARE","PRESERVE","PREV","PRIMARY","PRIVILEGES","PRIVILEGE_CHECKS_USER","PROCEDURE","PROCESS","PROCESSLIST","PROFILE","PROFILES","PROXY","PURGE","QUARTER","QUERY","QUICK","RANDOM","RANGE","RANK","READ","READS","READ_ONLY","READ_WRITE","REAL","REBUILD","RECOVER","RECURSIVE","REDO_BUFFER_SIZE","REDUNDANT","REFERENCE","REFERENCES","REGEXP","REGISTRATION","RELAY","RELAYLOG","RELAY_LOG_FILE","RELAY_LOG_POS","RELAY_THREAD","RELEASE","RELOAD","REMOVE","RENAME","REORGANIZE","REPAIR","REPEAT","REPEATABLE","REPLACE","REPLICA","REPLICAS","REPLICATE_DO_DB","REPLICATE_DO_TABLE","REPLICATE_IGNORE_DB","REPLICATE_IGNORE_TABLE","REPLICATE_REWRITE_DB","REPLICATE_WILD_DO_TABLE","REPLICATE_WILD_IGNORE_TABLE","REPLICATION","REQUIRE","REQUIRE_ROW_FORMAT","RESET","RESIGNAL","RESOURCE","RESPECT","RESTART","RESTORE","RESTRICT","RESUME","RETAIN","RETURN","RETURNED_SQLSTATE","RETURNING","RETURNS","REUSE","REVERSE","REVOKE","RIGHT","RLIKE","ROLE","ROLLBACK","ROLLUP","ROTATE","ROUTINE","ROW","ROWS","ROW_COUNT","ROW_FORMAT","ROW_NUMBER","RTREE","SAVEPOINT","SCHEDULE","SCHEMA","SCHEMAS","SCHEMA_NAME","SECOND","SECONDARY","SECONDARY_ENGINE","SECONDARY_ENGINE_ATTRIBUTE","SECONDARY_LOAD","SECONDARY_UNLOAD","SECOND_MICROSECOND","SECURITY","SELECT","SENSITIVE","SEPARATOR","SERIAL","SERIALIZABLE","SERVER","SESSION","SET","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMPLE","SKIP","SLAVE","SLOW","SMALLINT","SNAPSHOT","SOCKET","SOME","SONAME","SOUNDS","SOURCE","SOURCE_AUTO_POSITION","SOURCE_BIND","SOURCE_COMPRESSION_ALGORITHMS","SOURCE_CONNECT_RETRY","SOURCE_DELAY","SOURCE_HEARTBEAT_PERIOD","SOURCE_HOST","SOURCE_LOG_FILE","SOURCE_LOG_POS","SOURCE_PASSWORD","SOURCE_PORT","SOURCE_PUBLIC_KEY_PATH","SOURCE_RETRY_COUNT","SOURCE_SSL","SOURCE_SSL_CA","SOURCE_SSL_CAPATH","SOURCE_SSL_CERT","SOURCE_SSL_CIPHER","SOURCE_SSL_CRL","SOURCE_SSL_CRLPATH","SOURCE_SSL_KEY","SOURCE_SSL_VERIFY_SERVER_CERT","SOURCE_TLS_CIPHERSUITES","SOURCE_TLS_VERSION","SOURCE_USER","SOURCE_ZSTD_COMPRESSION_LEVEL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_AFTER_GTIDS","SQL_AFTER_MTS_GAPS","SQL_BEFORE_GTIDS","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CALC_FOUND_ROWS","SQL_NO_CACHE","SQL_SMALL_RESULT","SQL_THREAD","SQL_TSI_DAY","SQL_TSI_HOUR","SQL_TSI_MINUTE","SQL_TSI_MONTH","SQL_TSI_QUARTER","SQL_TSI_SECOND","SQL_TSI_WEEK","SQL_TSI_YEAR","SRID","SSL","STACKED","START","STARTING","STARTS","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STATUS","STOP","STORAGE","STORED","STRAIGHT_JOIN","STREAM","STRING","SUBCLASS_ORIGIN","SUBJECT","SUBPARTITION","SUBPARTITIONS","SUPER","SUSPEND","SWAPS","SWITCHES","SYSTEM","TABLE","TABLES","TABLESPACE","TABLE_CHECKSUM","TABLE_NAME","TEMPORARY","TEMPTABLE","TERMINATED","TEXT","THAN","THEN","THREAD_PRIORITY","TIES","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TINYBLOB","TINYINT","TINYTEXT","TLS","TO","TRAILING","TRANSACTION","TRIGGER","TRIGGERS","TRUE","TRUNCATE","TYPE","TYPES","UNBOUNDED","UNCOMMITTED","UNDEFINED","UNDO","UNDOFILE","UNDO_BUFFER_SIZE","UNICODE","UNINSTALL","UNION","UNIQUE","UNKNOWN","UNLOCK","UNREGISTER","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USER_RESOURCES","USE_FRM","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALIDATION","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARIABLES","VARYING","VCPU","VIEW","VIRTUAL","VISIBLE","WAIT","WARNINGS","WEEK","WEIGHT_STRING","WHEN","WHERE","WHILE","WINDOW","WITH","WITHOUT","WORK","WRAPPER","WRITE","X509","XA","XID","XML","XOR","YEAR","YEAR_MONTH","ZEROFILL","ZONE"]}),rE=D({all:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","USER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK","BIT","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","DECIMAL","DEC","NUMERIC","FIXED","FLOAT","DOUBLE","DOUBLE PRECISION","REAL","DATETIME","TIMESTAMP","TIME","YEAR","CHAR","NATIONAL CHAR","VARCHAR","NATIONAL VARCHAR","BINARY","VARBINARY","BLOB","TEXT","ENUM"]}),OE=N(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),NE=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","SET","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),IE=N(["UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),sE=N(["UNION [ALL | DISTINCT]"]),oE=N(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),iE=N(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN"]),aE={tokenizerOptions:{reservedSelect:OE,reservedClauses:[...NE,...IE],reservedSetOperations:sE,reservedJoins:oE,reservedPhrases:iE,supportsXor:!0,reservedKeywords:SE,reservedFunctionNames:rE,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!"],postProcess:function(E){return E.map(((e,T)=>{const t=E[T+1]||n;return r.SET(e)&&"("===t.text?{...e,type:R.RESERVED_FUNCTION_NAME}:e}))}},formatOptions:{onelineClauses:IE}};const CE=D({all:["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"]}),_E=D({all:["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","ISOLATION","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"]}),LE=N(["SELECT [ALL | DISTINCT]"]),lE=N(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),cE=N(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),DE=N(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),uE=N(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),PE=N(["{ROWS | RANGE | GROUPS} BETWEEN"]),ME={tokenizerOptions:{reservedSelect:LE,reservedClauses:[...lE,...cE],reservedSetOperations:DE,reservedJoins:uE,reservedPhrases:PE,supportsXor:!0,reservedKeywords:_E,reservedFunctionNames:CE,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:cE}},UE=D({all:["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARRAY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BFILE_BASE","BINARY","BLOB_BASE","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHAR","CHAR_BASE","CHARACTER","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOB_BASE","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DATE","DATE_BASE","DAY","DECIMAL","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DOUBLE","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FLOAT","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INT","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LONG","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NCHAR","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","NUMBER_BASE","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRECISION","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","RAW","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMESTAMP","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VARYING","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"]}),dE=D({numeric:["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET"],character:["CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR"],datetime:["ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET"],comparison:["GREATEST","LEAST"],conversion:["ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR"],largeObject:["BFILENAME","EMPTY_BLOB,","EMPTY_CLOB"],collection:["CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET"],hierarchical:["SYS_CONNECT_BY_PATH"],dataMining:["CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET"],xml:["APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM"],encoding:["DECODE","DUMP","ORA_HASH","VSIZE"],nullRelated:["COALESCE","LNNVL","NULLIF","NVL","NVL2"],env:["SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV"],aggregate:["AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],window:["FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER"],objectReference:["DEREF","MAKE_REF","REF","REFTOHEX","VALUE"],model:["CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],dataTypes:["VARCHAR2","NVARCHAR2","NUMBER","FLOAT","TIMESTAMP","INTERVAL YEAR","INTERVAL DAY","RAW","UROWID","NCHAR","CHARACTER","CHAR","CHARACTER VARYING","CHAR VARYING","NATIONAL CHARACTER","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHAR VARYING","NCHAR VARYING","NUMERIC","DECIMAL","FLOAT","VARCHAR"]}),pE=N(["SELECT [ALL | DISTINCT | UNIQUE]"]),fE=N(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE","RETURNING"]),GE=N(["UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),hE=N(["UNION [ALL]","EXCEPT","INTERSECT"]),mE=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),gE=N(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),HE={tokenizerOptions:{reservedSelect:pE,reservedClauses:[...fE,...GE],reservedSetOperations:hE,reservedJoins:mE,reservedPhrases:gE,supportsXor:!0,reservedKeywords:UE,reservedFunctionNames:dE,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:function(E){let e=n;return E.map((E=>r.SET(E)&&r.BY(e)?{...E,type:R.RESERVED_KEYWORD}:(O(E.type)&&(e=E),E)))}},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:GE}};const BE=D({math:["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET"],string:["ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER"],binary:["BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM"],bitstring:["BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING"],pattern:["REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE"],datatype:["TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP"],datetime:["CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP"],enum:["ENUM_FIRST","ENUM_LAST","ENUM_RANGE"],geometry:["AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH"],network:["ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC"],textsearch:["ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY"],uuid:["UUID"],xml:["CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS"],json:["ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP"],sequence:["CURRVAL","LASTVAL","NEXTVAL","SETVAL"],conditional:["COALESCE","GREATEST","LEAST","NULLIF"],array:["ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST"],range:["ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF"],aggregate:["ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG"],window:["CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER"],set:["GENERATE_SERIES","GENERATE_SUBSCRIPTS"],sysInfo:["ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION"],sysAdmin:["BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG"],trigger:["SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN"],eventTrigger:["PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS"],stats:["PG_MCV_LIST_ITEMS"],cast:["CAST"],dataTypes:["BIT","BIT VARYING","CHARACTER","CHARACTER VARYING","VARCHAR","CHAR","DECIMAL","NUMERIC","TIME","TIMESTAMP","ENUM"]}),FE=D({all:["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BIT","BOOLEAN","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHAR","CHARACTER","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FLOAT","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LABEL","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","NUMERIC","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PRECISION","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REAL","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RELEASE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SMALLINT","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","TYPE","TYPES","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARCHAR","VARIADIC","VARYING","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XML","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES","ZONE"]}),YE=N(["SELECT [ALL | DISTINCT]"]),bE=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","SET","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE MATERIALIZED VIEW [IF NOT EXISTS]","CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","RETURNING"]),yE=N(["UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","[SET DATA] TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMENT","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),VE=N(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),vE=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),WE=N(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","{TIMESTAMP | TIME} {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM"]),XE={tokenizerOptions:{reservedSelect:YE,reservedClauses:[...bE,...yE],reservedSetOperations:VE,reservedJoins:vE,reservedPhrases:WE,reservedKeywords:FE,reservedFunctionNames:BE,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:yE}},xE=D({aggregate:["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP"],array:["array","array_concat","array_flatten","get_array_length","split_to_array","subarray"],bitwise:["BIT_AND","BIT_OR","BOOL_AND","BOOL_OR"],conditional:["COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF"],dateTime:["ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC"],spatial:["AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox"],hash:["CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2"],hyperLogLog:["HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE"],json:["IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE"],math:["ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC"],machineLearning:["EXPLAIN_MODEL"],string:["ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER"],superType:["decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof"],window:["AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP"],dataType:["CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT"],sysAdmin:["CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG"],sysInfo:["CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],dataTypes:["DECIMAL","NUMERIC","CHAR","CHARACTER","VARCHAR","CHARACTER VARYING","NCHAR","NVARCHAR","VARBYTE"]}),wE=D({standard:["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","ARRAY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT"],dataConversionParams:["ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS"],dataLoadParams:["COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE"],dataFormatParams:["FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC"],copyAuthParams:["ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN"],copyCompressionParams:["BZIP2","GZIP","LZOP","ZSTD"],copyMiscParams:["MANIFEST","READRATIO","REGION","SSH"],compressionEncodings:["RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K"],misc:["CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],dataTypes:["BPCHAR","TEXT"]}),KE=N(["SELECT [ALL | DISTINCT]"]),kE=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","CREATE [OR REPLACE | MATERIALIZED] VIEW","CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"]),$E=N(["UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMENT","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),JE=N(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),ZE=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),QE=N(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),jE={tokenizerOptions:{reservedSelect:KE,reservedClauses:[...kE,...$E],reservedSetOperations:JE,reservedJoins:ZE,reservedPhrases:QE,reservedKeywords:wE,reservedFunctionNames:xE,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:$E}},qE=D({all:["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","ARRAY","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTERVAL","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MAP","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","STRUCT","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","STRING","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"]}),zE=D({aggregate:["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],window:["CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER"],array:["ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY"],map:["ELEMENT_AT","ELEMENT_AT","MAP","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP"],datetime:["ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR"],json:["FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON"],misc:["ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIGINT","BIN","BINARY","BIT_COUNT","BIT_GET","BIT_LENGTH","BOOLEAN","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DATE","DECIMAL","DEGREES","DOUBLE","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOAT","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","INT","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SMALLINT","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TIMESTAMP","TINYINT","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH"],cast:["CAST"],caseAbbrev:["COALESCE","NULLIF"],dataTypes:["DECIMAL","DEC","NUMERIC","VARCHAR"]}),Ee=N(["SELECT [ALL | DISTINCT]"]),ee=N(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),Te=N(["DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),te=N(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Re=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),Ae=N(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),ne={tokenizerOptions:{reservedSelect:Ee,reservedClauses:[...ee,...Te],reservedSetOperations:te,reservedJoins:Re,reservedPhrases:Ae,supportsXor:!0,reservedKeywords:qE,reservedFunctionNames:zE,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:function(E){return E.map(((e,T)=>{const t=E[T-1]||n,A=E[T+1]||n;return r.WINDOW(e)&&A.type===R.OPEN_PAREN?{...e,type:R.RESERVED_FUNCTION_NAME}:"ITEMS"!==e.text||e.type!==R.RESERVED_KEYWORD||"COLLECTION"===t.text&&"TERMINATED"===A.text?e:{...e,type:R.IDENTIFIER,text:e.raw}}))}},formatOptions:{onelineClauses:Te}};const Se=D({scalar:["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB"],aggregate:["AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL"],datetime:["DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME"],window:["row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value"],math:["ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC"],json:["JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE"],cast:["CAST"],dataTypes:["CHARACTER","VARCHAR","VARYING CHARACTER","NCHAR","NATIVE CHARACTER","NVARCHAR","NUMERIC","DECIMAL"]}),re=D({all:["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ANY","ARE","ARRAY","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"]}),Oe=N(["SELECT [ALL | DISTINCT]"]),Ne=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET","CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),Ie=N(["UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),se=N(["UNION [ALL]","EXCEPT","INTERSECT"]),oe=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),ie=N(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),ae={tokenizerOptions:{reservedSelect:Oe,reservedClauses:[...Ne,...Ie],reservedSetOperations:se,reservedJoins:oe,reservedPhrases:ie,reservedKeywords:re,reservedFunctionNames:Se,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:Ie}},Ce=D({set:["GROUPING"],window:["RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER"],numeric:["POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET"],string:["SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE"],datetime:["CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP"],aggregate:["COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC"],cast:["CAST"],caseAbbrev:["COALESCE","NULLIF"],nonStandard:["ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],dataTypes:["CHARACTER","CHAR","CHARACTER VARYING","CHAR VARYING","VARCHAR","CHARACTER LARGE OBJECT","CHAR LARGE OBJECT","CLOB","NATIONAL CHARACTER","NATIONAL CHAR","NCHAR","NATIONAL CHARACTER VARYING","NATIONAL CHAR VARYING","NCHAR VARYING","NATIONAL CHARACTER LARGE OBJECT","NCHAR LARGE OBJECT","NCLOB","BINARY","BINARY VARYING","VARBINARY","BINARY LARGE OBJECT","BLOB","NUMERIC","DECIMAL","DEC","TIME","TIMESTAMP"]}),_e=D({all:["ALL","ALLOCATE","ALTER","ANY","ARE","ARRAY","AS","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BIGINT","BINARY","BLOB","BOOLEAN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHAR","CHARACTER","CHECK","CLOB","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DATE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DELETE","DEREF","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DOUBLE","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FLOAT","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","MULTISET","NATIONAL","NATURAL","NCHAR","NCLOB","NEW","NO","NONE","NOT","NULL","NULLIF","NUMERIC","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SMALLINT","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","VARBINARY","VARCHAR","VARYING","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"]}),Le=N(["SELECT [ALL | DISTINCT]"]),le=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [RECURSIVE] VIEW","CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"]),ce=N(["UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),De=N(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),ue=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Pe=N(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),Me={tokenizerOptions:{reservedSelect:Le,reservedClauses:[...le,...ce],reservedSetOperations:De,reservedJoins:ue,reservedPhrases:Pe,reservedKeywords:_e,reservedFunctionNames:Ce,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:ce}},Ue=D({all:["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH"],rowPattern:["CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"]}),de=D({all:["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],types:["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"]}),pe=N(["SELECT [ALL | DISTINCT]"]),fe=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [OR REPLACE] [MATERIALIZED] VIEW","CREATE TABLE [IF NOT EXISTS]","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),Ge=N(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","COMMENT ON TABLE","COMMENT ON COLUMN","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),he=N(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),me=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),ge=N(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),He={tokenizerOptions:{reservedSelect:pe,reservedClauses:[...fe,...Ge],reservedSetOperations:he,reservedJoins:me,reservedPhrases:ge,reservedKeywords:de,reservedFunctionNames:Ue,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:Ge}},Be=D({aggregate:["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP"],analytic:["CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS"],configuration:["@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION"],conversion:["CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE"],cryptographic:["ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY"],cursor:["@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS"],dataType:["DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY"],datetime:["@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY"],mathematical:["ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST"],metadata:["@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY"],ranking:["DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME"],security:["CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME"],string:["ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER"],system:["$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE"],statistical:["@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID"],trigger:["COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE"],caseAbbrev:["COALESCE","NULLIF"],dataTypes:["DECIMAL","NUMERIC","FLOAT","REAL","DATETIME2","DATETIMEOFFSET","TIME","CHAR","VARCHAR","NCHAR","NVARCHAR","BINARY","VARBINARY"]}),Fe=D({standard:["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DOUBLE","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NATIONAL","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRECISION","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VARYING","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT"],odbc:["ABSOLUTE","ACTION","ADA","ADD","ALL","ALLOCATE","ALTER","AND","ANY","ARE","AS","ASC","ASSERTION","AT","AUTHORIZATION","AVG","BEGIN","BETWEEN","BIT","BIT_LENGTH","BOTH","BY","CASCADE","CASCADED","CAST","CATALOG","CHAR","CHARACTER","CHARACTER_LENGTH","CHAR_LENGTH","CHECK","CLOSE","COALESCE","COLLATE","COLLATION","COLUMN","COMMIT","CONNECT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTINUE","CONVERT","CORRESPONDING","COUNT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DISTINCT","DOMAIN","DOUBLE","DROP","END-EXEC","ESCAPE","EXCEPTION","EXEC","EXECUTE","EXISTS","EXTERNAL","EXTRACT","FALSE","FETCH","FIRST","FLOAT","FOR","FOREIGN","FORTRAN","FOUND","FROM","FULL","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HAVING","HOUR","IDENTITY","IMMEDIATE","IN","INCLUDE","INDEX","INDICATOR","INITIALLY","INNER","INPUT","INSENSITIVE","INSERT","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","ISOLATION","JOIN","KEY","LANGUAGE","LAST","LEADING","LEFT","LEVEL","LIKE","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATIONAL","NATURAL","NCHAR","NEXT","NO","NONE","NOT","NULL","NULLIF","NUMERIC","OCTET_LENGTH","OF","ONLY","OPEN","OPTION","OR","ORDER","OUTER","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PRECISION","PREPARE","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURE","PUBLIC","READ","REAL","REFERENCES","RELATIVE","RESTRICT","REVOKE","RIGHT","ROLLBACK","ROWS","SCHEMA","SCROLL","SECOND","SECTION","SELECT","SESSION","SESSION_USER","SET","SIZE","SMALLINT","SOME","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","SYSTEM_USER","TABLE","TEMPORARY","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSACTION","TRANSLATE","TRANSLATION","TRIM","TRUE","UNION","UNIQUE","UNKNOWN","UPDATE","UPPER","USAGE","USER","VALUE","VALUES","VARCHAR","VARYING","VIEW","WHENEVER","WHERE","WITH","WORK","WRITE","YEAR","ZONE"]}),Ye=N(["SELECT [ALL | DISTINCT]"]),be=N(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] [MATERIALIZED] VIEW","CREATE TABLE"]),ye=N(["UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),Ve=N(["UNION [ALL]","EXCEPT","INTERSECT"]),ve=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),We=N(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),Xe={tokenizerOptions:{reservedSelect:Ye,reservedClauses:[...be,...ye],reservedSetOperations:Ve,reservedJoins:ve,reservedPhrases:We,reservedKeywords:Fe,reservedFunctionNames:Be,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:ye}},xe=D({all:["ABORT","ABSOLUTE","ACCESS","ACCESSIBLE","ACCOUNT","ACTION","ACTIVE","ADD","ADMIN","AFTER","AGAINST","AGGREGATE","AGGREGATES","AGGREGATOR","AGGREGATOR_ID","AGGREGATOR_PLAN_HASH","AGGREGATORS","ALGORITHM","ALL","ALSO","ALTER","ALWAYS","ANALYZE","AND","ANY","ARGHISTORY","ARRANGE","ARRANGEMENT","ARRAY","AS","ASC","ASCII","ASENSITIVE","ASM","ASSERTION","ASSIGNMENT","AST","ASYMMETRIC","ASYNC","AT","ATTACH","ATTRIBUTE","AUTHORIZATION","AUTO","AUTO_INCREMENT","AUTO_REPROVISION","AUTOSTATS","AUTOSTATS_CARDINALITY_MODE","AUTOSTATS_ENABLED","AUTOSTATS_HISTOGRAM_MODE","AUTOSTATS_SAMPLING","AVAILABILITY","AVG","AVG_ROW_LENGTH","AVRO","AZURE","BACKGROUND","_BACKGROUND_THREADS_FOR_CLEANUP","BACKUP","BACKUP_HISTORY","BACKUP_ID","BACKWARD","BATCH","BATCHES","BATCH_INTERVAL","_BATCH_SIZE_LIMIT","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","_BINARY","BIT","BLOB","BOOL","BOOLEAN","BOOTSTRAP","BOTH","_BT","BTREE","BUCKET_COUNT","BUCKETS","BY","BYTE","BYTE_LENGTH","CACHE","CALL","CALL_FOR_PIPELINE","CALLED","CAPTURE","CASCADE","CASCADED","CASE","CATALOG","CHAIN","CHANGE","CHAR","CHARACTER","CHARACTERISTICS","CHARSET","CHECK","CHECKPOINT","_CHECK_CAN_CONNECT","_CHECK_CONSISTENCY","CHECKSUM","_CHECKSUM","CLASS","CLEAR","CLIENT","CLIENT_FOUND_ROWS","CLOSE","CLUSTER","CLUSTERED","CNF","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNAR","COLUMNS","COLUMNSTORE","COLUMNSTORE_SEGMENT_ROWS","COMMENT","COMMENTS","COMMIT","COMMITTED","_COMMIT_LOG_TAIL","COMPACT","COMPILE","COMPRESSED","COMPRESSION","CONCURRENT","CONCURRENTLY","CONDITION","CONFIGURATION","CONNECTION","CONNECTIONS","CONFIG","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","_CONTINUE_REPLAY","CONVERSION","CONVERT","COPY","_CORE","COST","CREATE","CREDENTIALS","CROSS","CUBE","CSV","CUME_DIST","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_SCHEMA","CURRENT_SECURITY_GROUPS","CURRENT_SECURITY_ROLES","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATABASES","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINED","DEFINER","DELAYED","DELAY_KEY_WRITE","DELETE","DELIMITER","DELIMITERS","DENSE_RANK","DESC","DESCRIBE","DETACH","DETERMINISTIC","DICTIONARY","DIFFERENTIAL","DIRECTORY","DISABLE","DISCARD","_DISCONNECT","DISK","DISTINCT","DISTINCTROW","DISTRIBUTED_JOINS","DIV","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","_DROP_PROFILE","DUAL","DUMP","DUPLICATE","DURABILITY","DYNAMIC","EARLIEST","EACH","ECHO","ELECTION","ELSE","ELSEIF","ENABLE","ENCLOSED","ENCODING","ENCRYPTED","END","ENGINE","ENGINES","ENUM","ERRORS","ESCAPE","ESCAPED","ESTIMATE","EVENT","EVENTS","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTENSION","EXTERNAL","EXTERNAL_HOST","EXTERNAL_PORT","EXTRACTOR","EXTRACTORS","EXTRA_JOIN","_FAILOVER","FAILED_LOGIN_ATTEMPTS","FAILURE","FALSE","FAMILY","FAULT","FETCH","FIELDS","FILE","FILES","FILL","FIX_ALTER","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWING","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREGROUND","FOREIGN","FORMAT","FORWARD","FREEZE","FROM","FS","_FSYNC","FULL","FULLTEXT","FUNCTION","FUNCTIONS","GC","GCS","GET_FORMAT","_GC","_GCX","GENERATE","GEOGRAPHY","GEOGRAPHYPOINT","GEOMETRY","GEOMETRYPOINT","GLOBAL","_GLOBAL_VERSION_TIMESTAMP","GRANT","GRANTED","GRANTS","GROUP","GROUPING","GROUPS","GZIP","HANDLE","HANDLER","HARD_CPU_LIMIT_PERCENTAGE","HASH","HAS_TEMP_TABLES","HAVING","HDFS","HEADER","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HISTOGRAM","HOLD","HOLDING","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IDENTITY","IF","IGNORE","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDING","INCREMENT","INCREMENTAL","INDEX","INDEXES","INFILE","INHERIT","INHERITS","_INIT_PROFILE","INIT","INITIALIZE","INITIALLY","INJECT","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTANCE","INSTEAD","IN","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","_INTERNAL_DYNAMIC_TYPECAST","INTERPRETER_MODE","INTERSECT","INTERVAL","INTO","INVOKER","ISOLATION","ITERATE","JOIN","JSON","KAFKA","KEY","KEY_BLOCK_SIZE","KEYS","KILL","KILLALL","LABEL","LAG","LANGUAGE","LARGE","LAST","LAST_VALUE","LATERAL","LATEST","LC_COLLATE","LC_CTYPE","LEAD","LEADING","LEAF","LEAKPROOF","LEAVE","LEAVES","LEFT","LEVEL","LICENSE","LIKE","LIMIT","LINES","LISTEN","LLVM","LOADDATA_WHERE","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCK","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","_LS","LZ4","MANAGEMENT","_MANAGEMENT_THREAD","MAPPING","MASTER","MATCH","MATERIALIZED","MAXVALUE","MAX_CONCURRENCY","MAX_ERRORS","MAX_PARTITIONS_PER_BATCH","MAX_QUEUE_DEPTH","MAX_RETRIES_PER_BATCH_PARTITION","MAX_ROWS","MBC","MPL","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMBER","MEMORY","MEMORY_PERCENTAGE","_MEMSQL_TABLE_ID_LOOKUP","MEMSQL","MEMSQL_DESERIALIZE","MEMSQL_IMITATING_KAFKA","MEMSQL_SERIALIZE","MERGE","METADATA","MICROSECOND","MIDDLEINT","MIN_ROWS","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MINVALUE","MOD","MODE","MODEL","MODIFIES","MODIFY","MONTH","MOVE","MPL","NAMES","NAMED","NAMESPACE","NATIONAL","NATURAL","NCHAR","NEXT","NO","NODE","NONE","NO_QUERY_REWRITE","NOPARAM","NOT","NOTHING","NOTIFY","NOWAIT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NORELY","NTH_VALUE","NTILE","NULL","NULLCOLS","NULLS","NUMERIC","NVARCHAR","OBJECT","OF","OFF","OFFLINE","OFFSET","OFFSETS","OIDS","ON","ONLINE","ONLY","OPEN","OPERATOR","OPTIMIZATION","OPTIMIZE","OPTIMIZER","OPTIMIZER_STATE","OPTION","OPTIONS","OPTIONALLY","OR","ORDER","ORDERED_SERIALIZE","ORPHAN","OUT","OUT_OF_ORDER","OUTER","OUTFILE","OVER","OVERLAPS","OVERLAY","OWNED","OWNER","PACK_KEYS","PAIRED","PARSER","PARQUET","PARTIAL","PARTITION","PARTITION_ID","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PASSWORD_LOCK_TIME","PAUSE","_PAUSE_REPLAY","PERIODIC","PERSISTED","PIPELINE","PIPELINES","PLACING","PLAN","PLANS","PLANCACHE","PLUGINS","POOL","POOLS","PORT","PRECEDING","PRECISION","PREPARE","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROCESS","PROCESSLIST","PROFILE","PROFILES","PROGRAM","PROMOTE","PROXY","PURGE","QUARTER","QUERIES","QUERY","QUERY_TIMEOUT","QUEUE","RANGE","RANK","READ","_READ","READS","REAL","REASSIGN","REBALANCE","RECHECK","RECORD","RECURSIVE","REDUNDANCY","REDUNDANT","REF","REFERENCE","REFERENCES","REFRESH","REGEXP","REINDEX","RELATIVE","RELEASE","RELOAD","RELY","REMOTE","REMOVE","RENAME","REPAIR","_REPAIR_TABLE","REPEAT","REPEATABLE","_REPL","_REPROVISIONING","REPLACE","REPLICA","REPLICATE","REPLICATING","REPLICATION","REQUIRE","RESOURCE","RESOURCE_POOL","RESET","RESTART","RESTORE","RESTRICT","RESULT","_RESURRECT","RETRY","RETURN","RETURNING","RETURNS","REVERSE","RG_POOL","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","ROLES","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_COUNT","ROW_FORMAT","ROW_NUMBER","ROWS","ROWSTORE","RULE","_RPC","RUNNING","S3","SAFE","SAVE","SAVEPOINT","SCALAR","SCHEMA","SCHEMAS","SCHEMA_BINDING","SCROLL","SEARCH","SECOND","SECOND_MICROSECOND","SECURITY","SELECT","SEMI_JOIN","_SEND_THREADS","SENSITIVE","SEPARATOR","SEQUENCE","SEQUENCES","SERIAL","SERIALIZABLE","SERIES","SERVICE_USER","SERVER","SESSION","SESSION_USER","SET","SETOF","SECURITY_LISTS_INTERSECT","SHA","SHARD","SHARDED","SHARDED_ID","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMILAR","SIMPLE","SITE","SKIP","SKIPPED_BATCHES","__SLEEP","SMALLINT","SNAPSHOT","_SNAPSHOT","_SNAPSHOTS","SOFT_CPU_LIMIT_PERCENTAGE","SOME","SONAME","SPARSE","SPATIAL","SPATIAL_CHECK_INDEX","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_MODE","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STDIN","STDOUT","STOP","STORAGE","STRAIGHT_JOIN","STRICT","STRING","STRIP","SUCCESS","SUPER","SYMMETRIC","SYNC_SNAPSHOT","SYNC","_SYNC","_SYNC2","_SYNC_PARTITIONS","_SYNC_SNAPSHOT","SYNCHRONIZE","SYSID","SYSTEM","TABLE","TABLE_CHECKSUM","TABLES","TABLESPACE","TAGS","TARGET_SIZE","TASK","TEMP","TEMPLATE","TEMPORARY","TEMPTABLE","_TERM_BUMP","TERMINATE","TERMINATED","TEXT","THEN","TIME","TIMEOUT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIMEZONE","TINYBLOB","TINYINT","TINYTEXT","TO","TRACELOGS","TRADITIONAL","TRAILING","TRANSFORM","TRANSACTION","_TRANSACTIONS_EXPERIMENTAL","TREAT","TRIGGER","TRIGGERS","TRUE","TRUNC","TRUNCATE","TRUSTED","TWO_PHASE","_TWOPCID","TYPE","TYPES","UNBOUNDED","UNCOMMITTED","UNDEFINED","UNDO","UNENCRYPTED","UNENFORCED","UNHOLD","UNICODE","UNION","UNIQUE","_UNITTEST","UNKNOWN","UNLISTEN","_UNLOAD","UNLOCK","UNLOGGED","UNPIVOT","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USERS","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARIABLES","VARIADIC","VARYING","VERBOSE","VIEW","VOID","VOLATILE","VOTING","WAIT","_WAKE","WARNINGS","WEEK","WHEN","WHERE","WHILE","WHITESPACE","WINDOW","WITH","WITHOUT","WITHIN","_WM_HEARTBEAT","WORK","WORKLOAD","WRAPPER","WRITE","XACT_ID","XOR","YEAR","YEAR_MONTH","YES","ZEROFILL","ZONE"]}),we=D({all:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","USER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR","BIT","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","DECIMAL","DEC","NUMERIC","FIXED","FLOAT","DOUBLE","DOUBLE PRECISION","REAL","DATETIME","TIMESTAMP","TIME","YEAR","CHAR","NATIONAL CHAR","VARCHAR","NATIONAL VARCHAR","BINARY","VARBINARY","BLOB","TEXT","ENUM"]}),Ke=N(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),ke=N(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","SET","CREATE VIEW","CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),$e=N(["UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),Je=N(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),Ze=N(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Qe=N(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN"]),je={tokenizerOptions:{reservedSelect:Ke,reservedClauses:[...ke,...$e],reservedSetOperations:Je,reservedJoins:Ze,reservedPhrases:Qe,reservedKeywords:xe,reservedFunctionNames:we,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>"],postProcess:function(E){return E.map(((e,T)=>{const t=E[T+1]||n;return r.SET(e)&&"("===t.text?{...e,type:R.RESERVED_FUNCTION_NAME}:e}))}},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:$e}};const qe=D({all:["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER \u2014 Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"]}),ze=D({all:["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH"]}),ET=N(["SELECT [ALL | DISTINCT]"]),eT=N(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),TT=N(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","[UNSET] COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),tT=N(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),RT=N(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),AT=N(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),nT={tokenizerOptions:{reservedSelect:ET,reservedClauses:[...eT,...TT],reservedSetOperations:tT,reservedJoins:RT,reservedPhrases:AT,reservedKeywords:ze,reservedFunctionNames:qe,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||",":","=>"]},formatOptions:{alwaysDenseOperators:[":","::"],onelineClauses:TT}},ST=E=>E.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),rT=/\s+/uy,OT=E=>new RegExp(`(?:${E})`,"uy"),NT=E=>E.split("").map((E=>/ /gu.test(E)?"\\s+":`[${E.toUpperCase()}${E.toLowerCase()}]`)).join(""),IT=(E,e=[])=>{const T="open"===E?0:1,t=["()",...e].map((E=>E[T]));return OT(t.map(ST).join("|"))},sT=(E,e={})=>{if(0===E.length)return/^\b$/u;const T=(({rest:E,dashes:e})=>E||e?`(?![${E||""}${e?"-":""}])`:"")(e),t=L(E).map(ST).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${t})${T}\\b`,"iuy")},oT=(E,e)=>{if(!E.length)return;const T=E.map(ST).join("|");return OT(`(?:${T})(?:${e})`)},iT={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":(()=>{const E={"<":">","[":"]","(":")","{":"}"},e=Object.entries(E).map((([E,e])=>"{left}(?:(?!{right}').)*?{right}".replace(/{left}/g,ST(E)).replace(/{right}/g,ST(e)))),T=ST(Object.keys(E).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${T}])(?:(?!\k<tag>').)*?\k<tag>`}|${e.join("|")})'`})()},aT=E=>"string"===typeof E?iT[E]:"regex"in E?E.regex:(({prefixes:E,requirePrefix:e})=>`(?:${E.map(NT).join("|")}${e?"":"|"})`)(E)+iT[E.quote],CT=E=>E.map(aT).join("|"),_T=E=>OT(CT(E)),LT=(E={})=>OT(lT(E)),lT=({first:E,rest:e,dashes:T,allowFirstCharNumber:t}={})=>{const R="\\p{Alphabetic}\\p{Mark}_",A="\\p{Decimal_Number}",n=ST(E??""),S=ST(e??""),r=t?`[${R}${A}${n}][${R}${A}${S}]*`:`[${R}${n}][${R}${A}${S}]*`;return T?(E=>E+"(?:-"+E+")*")(r):r};function cT(E,e){const T=E.slice(0,e).split(/\n/);return{line:T.length,col:T[T.length-1].length+1}}class DT{input="";index=0;constructor(E){this.rules=E}tokenize(E){this.input=E,this.index=0;const e=[];let T;for(;this.index<this.input.length;){const E=this.getWhitespace();if(this.index<this.input.length){if(T=this.getNextToken(),!T)throw this.createParseError();e.push({...T,precedingWhitespace:E})}}return e}createParseError(){const E=this.input.slice(this.index,this.index+10),{line:e,col:T}=cT(this.input,this.index);return new Error(`Parse error: Unexpected "${E}" at line ${e} column ${T}`)}getWhitespace(){rT.lastIndex=this.index;const E=rT.exec(this.input);if(E)return this.index+=E[0].length,E[0]}getNextToken(){for(const E of this.rules){const e=this.match(E);if(e)return e}}match(E){E.regex.lastIndex=this.index;const e=E.regex.exec(this.input);if(e){const T=e[0],t={type:E.type,raw:T,text:E.text?E.text(T):T,start:this.index};return E.key&&(t.key=E.key(T)),this.index+=T.length,t}}}const uT=/\/\*/uy,PT=/([^/*]|\*[^/]|\/[^*])+/uy,MT=/\*\//uy;class UT{lastIndex=0;exec(E){let e,T="",t=0;if(!(e=this.matchSection(uT,E)))return null;for(T+=e,t++;t>0;)if(e=this.matchSection(uT,E))T+=e,t++;else if(e=this.matchSection(MT,E))T+=e,t--;else{if(!(e=this.matchSection(PT,E)))return null;T+=e}return[T]}matchSection(E,e){E.lastIndex=this.lastIndex;const T=E.exec(e);return T&&(this.lastIndex+=T[0].length),T?T[0]:null}}class dT{constructor(E){this.cfg=E,this.rulesBeforeParams=this.buildRulesBeforeParams(E),this.rulesAfterParams=this.buildRulesAfterParams(E)}tokenize(E,e){const T=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,e),...this.rulesAfterParams],t=new DT(T).tokenize(E);return this.cfg.postProcess?this.cfg.postProcess(t):t}buildRulesBeforeParams(E){return this.validRules([{type:R.BLOCK_COMMENT,regex:E.nestedBlockComments?new UT:/(\/\*[^]*?\*\/)/uy},{type:R.LINE_COMMENT,regex:(e=E.lineCommentTypes??["--"],new RegExp(`(?:${e.map(ST).join("|")}).*?(?=\r\n|\r|\n|$)`,"uy"))},{type:R.QUOTED_IDENTIFIER,regex:_T(E.identTypes)},{type:R.NUMBER,regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?!\w)/uy},{type:R.RESERVED_PHRASE,regex:sT(E.reservedPhrases??[],E.identChars),text:pT},{type:R.CASE,regex:/CASE\b/iuy,text:pT},{type:R.END,regex:/END\b/iuy,text:pT},{type:R.BETWEEN,regex:/BETWEEN\b/iuy,text:pT},{type:R.LIMIT,regex:E.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:pT},{type:R.RESERVED_CLAUSE,regex:sT(E.reservedClauses,E.identChars),text:pT},{type:R.RESERVED_SELECT,regex:sT(E.reservedSelect,E.identChars),text:pT},{type:R.RESERVED_SET_OPERATION,regex:sT(E.reservedSetOperations,E.identChars),text:pT},{type:R.WHEN,regex:/WHEN\b/iuy,text:pT},{type:R.ELSE,regex:/ELSE\b/iuy,text:pT},{type:R.THEN,regex:/THEN\b/iuy,text:pT},{type:R.RESERVED_JOIN,regex:sT(E.reservedJoins,E.identChars),text:pT},{type:R.AND,regex:/AND\b/iuy,text:pT},{type:R.OR,regex:/OR\b/iuy,text:pT},{type:R.XOR,regex:E.supportsXor?/XOR\b/iuy:void 0,text:pT},{type:R.RESERVED_FUNCTION_NAME,regex:sT(E.reservedFunctionNames,E.identChars),text:pT},{type:R.RESERVED_KEYWORD,regex:sT(E.reservedKeywords,E.identChars),text:pT}]);var e}buildRulesAfterParams(E){return this.validRules([{type:R.VARIABLE,regex:E.variableTypes?(T=E.variableTypes,OT(T.map((E=>"regex"in E?E.regex:aT(E))).join("|"))):void 0},{type:R.STRING,regex:_T(E.stringTypes)},{type:R.IDENTIFIER,regex:LT(E.identChars)},{type:R.DELIMITER,regex:/[;]/uy},{type:R.COMMA,regex:/[,]/y},{type:R.OPEN_PAREN,regex:IT("open",E.extraParens)},{type:R.CLOSE_PAREN,regex:IT("close",E.extraParens)},{type:R.OPERATOR,regex:(e=["+","-","/",">","<","=","<>","<=",">=","!=",...E.operators??[]],OT(`${L(e).map(ST).join("|")}`))},{type:R.ASTERISK,regex:/[*]/uy},{type:R.DOT,regex:/[.]/uy}]);var e,T}buildParamRules(E,e){var T,t,A,n,S;const r={named:(null===e||void 0===e?void 0:e.named)||(null===(T=E.paramTypes)||void 0===T?void 0:T.named)||[],quoted:(null===e||void 0===e?void 0:e.quoted)||(null===(t=E.paramTypes)||void 0===t?void 0:t.quoted)||[],numbered:(null===e||void 0===e?void 0:e.numbered)||(null===(A=E.paramTypes)||void 0===A?void 0:A.numbered)||[],positional:"boolean"===typeof(null===e||void 0===e?void 0:e.positional)?e.positional:null===(n=E.paramTypes)||void 0===n?void 0:n.positional,custom:(null===e||void 0===e?void 0:e.custom)||(null===(S=E.paramTypes)||void 0===S?void 0:S.custom)||[]};return this.validRules([{type:R.NAMED_PARAMETER,regex:oT(r.named,lT(E.paramChars||E.identChars)),key:E=>E.slice(1)},{type:R.QUOTED_PARAMETER,regex:oT(r.quoted,CT(E.identTypes)),key:E=>(({tokenKey:E,quoteChar:e})=>E.replace(new RegExp(ST("\\"+e),"gu"),e))({tokenKey:E.slice(2,-1),quoteChar:E.slice(-1)})},{type:R.NUMBERED_PARAMETER,regex:oT(r.numbered,"[0-9]+"),key:E=>E.slice(1)},{type:R.POSITIONAL_PARAMETER,regex:r.positional?/[?]/y:void 0},...r.custom.map((E=>({type:R.CUSTOM_PARAMETER,regex:OT(E.regex),key:E.key??(E=>E)})))])}validRules(E){return E.filter((E=>Boolean(E.regex)))}}const pT=E=>c(E.toUpperCase()),fT=new Map,GT=E=>({tokenizer:new dT(E.tokenizerOptions),formatOptions:hT(E.formatOptions)}),hT=E=>({alwaysDenseOperators:E.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(E.onelineClauses.map((E=>[E,!0])))});function mT(E){return"tabularLeft"===E.indentStyle||"tabularRight"===E.indentStyle?" ".repeat(10):E.useTabs?"\t":" ".repeat(E.tabWidth)}function gT(E){return"tabularLeft"===E.indentStyle||"tabularRight"===E.indentStyle}class HT{constructor(E){this.params=E,this.index=0}get({key:E,text:e}){return this.params?E?this.params[E]:this.params[this.index++]:e}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(E){this.index=E}}var BT=T(67606);const FT=(E,e,T)=>{if(O(E.type)){const t=VT(T,e);if(t&&"."===t.text)return{...E,type:R.IDENTIFIER,text:E.raw}}return E},YT=(E,e,T)=>{if(E.type===R.RESERVED_FUNCTION_NAME){const t=vT(T,e);if(!t||!WT(t))return{...E,type:R.RESERVED_KEYWORD}}return E},bT=(E,e,T)=>{if(E.type===R.IDENTIFIER){const t=vT(T,e);if(t&&XT(t))return{...E,type:R.ARRAY_IDENTIFIER}}return E},yT=(E,e,T)=>{if(E.type===R.RESERVED_KEYWORD){const t=vT(T,e);if(t&&XT(t))return{...E,type:R.ARRAY_KEYWORD}}return E},VT=(E,e)=>vT(E,e,-1),vT=(E,e,T=1)=>{let t=1;for(;E[e+t*T]&&xT(E[e+t*T]);)t++;return E[e+t*T]},WT=E=>E.type===R.OPEN_PAREN&&"("===E.text,XT=E=>E.type===R.OPEN_PAREN&&"["===E.text,xT=E=>E.type===R.BLOCK_COMMENT||E.type===R.LINE_COMMENT;class wT{index=0;tokens=[];input="";constructor(E){this.tokenize=E}reset(E,e){this.input=E,this.index=0,this.tokens=this.tokenize(E)}next(){return this.tokens[this.index++]}save(){}formatError(E){const{line:e,col:T}=cT(this.input,E.start);return`Parse error at token: ${E.text} at line ${e} column ${T}`}has(E){return E in R}}let KT;function kT(E){return E[0]}!function(E){E.statement="statement",E.clause="clause",E.set_operation="set_operation",E.function_call="function_call",E.array_subscript="array_subscript",E.property_access="property_access",E.parenthesis="parenthesis",E.between_predicate="between_predicate",E.case_expression="case_expression",E.case_when="case_when",E.case_else="case_else",E.limit_clause="limit_clause",E.all_columns_asterisk="all_columns_asterisk",E.literal="literal",E.identifier="identifier",E.keyword="keyword",E.parameter="parameter",E.operator="operator",E.comma="comma",E.line_comment="line_comment",E.block_comment="block_comment"}(KT||(KT={}));const $T=new wT((E=>[])),JT=([[E]])=>E,ZT=E=>({type:KT.keyword,tokenType:E.type,text:E.text,raw:E.raw}),QT=(E,{leading:e,trailing:T})=>(null!==e&&void 0!==e&&e.length&&(E={...E,leadingComments:e}),null!==T&&void 0!==T&&T.length&&(E={...E,trailingComments:T}),E),jT=(E,{leading:e,trailing:T})=>{if(null!==e&&void 0!==e&&e.length){const[T,...t]=E;E=[QT(T,{leading:e}),...t]}if(null!==T&&void 0!==T&&T.length){const e=E.slice(0,-1),t=E[E.length-1];E=[...e,QT(t,{trailing:T})]}return E},qT={Lexer:$T,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:E=>E[0].concat([E[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([E])=>{const e=E[E.length-1];return e&&!e.hasSemicolon?e.children.length>0?E:E.slice(0,-1):E}},{name:"statement$subexpression$1",symbols:[$T.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[$T.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([E,[e]])=>({type:KT.statement,children:E,hasSemicolon:e.type===R.DELIMITER})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:E=>E[0].concat([E[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([E,e])=>[...E,...e]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:JT},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[$T.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:kT},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[$T.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([E,e,T,t])=>{if(t){const[R,A]=t;return{type:KT.limit_clause,limitKw:QT(ZT(E),{trailing:e}),offset:T,count:A}}return{type:KT.limit_clause,limitKw:QT(ZT(E),{trailing:e}),count:T}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[$T.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([E,[e,T]])=>({type:KT.clause,nameKw:ZT(E),children:[e,...T]})},{name:"select_clause",symbols:[$T.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([E])=>({type:KT.clause,nameKw:ZT(E),children:[]})},{name:"all_columns_asterisk",symbols:[$T.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:KT.all_columns_asterisk})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"other_clause",symbols:[$T.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([E,e])=>({type:KT.clause,nameKw:ZT(E),children:e})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"set_operation",symbols:[$T.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([E,e])=>({type:KT.set_operation,nameKw:ZT(E),children:e})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:E=>E[0].concat([E[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:kT},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:E=>E[0].concat([E[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([E,e])=>[E,...e]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:E=>E[0].concat([E[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([E,e])=>[E,...e]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([E,e])=>QT(E,{trailing:e})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([E,e])=>QT(e,{leading:E})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([E,e])=>QT(e,{leading:E})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:JT},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:JT},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:JT},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:JT},{name:"asteriskless_andless_expression$subexpression$1",symbols:["array_subscript"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["function_call"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["property_access"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["parenthesis"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["curly_braces"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["square_brackets"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["operator"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["identifier"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["parameter"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["literal"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["keyword"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:JT},{name:"array_subscript",symbols:[$T.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([E,e,T])=>({type:KT.array_subscript,array:QT({type:KT.identifier,text:E.text},{trailing:e}),parenthesis:T})},{name:"array_subscript",symbols:[$T.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([E,e,T])=>({type:KT.array_subscript,array:QT(ZT(E),{trailing:e}),parenthesis:T})},{name:"function_call",symbols:[$T.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([E,e,T])=>({type:KT.function_call,nameKw:QT(ZT(E),{trailing:e}),parenthesis:T})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([E,e,T])=>({type:KT.parenthesis,children:e,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([E,e,T])=>({type:KT.parenthesis,children:e,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([E,e,T])=>({type:KT.parenthesis,children:e,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access",symbols:["expression","_",$T.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([E,e,T,t,[R]])=>({type:KT.property_access,object:QT(E,{trailing:e}),property:QT(R,{leading:t})})},{name:"between_predicate",symbols:[$T.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",$T.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([E,e,T,t,R,A,n])=>({type:KT.between_predicate,betweenKw:ZT(E),expr1:jT(T,{leading:e,trailing:t}),andKw:ZT(R),expr2:[QT(n,{leading:A})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:kT},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:E=>E[0].concat([E[1]])},{name:"case_expression",symbols:[$T.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",$T.has("END")?{type:"END"}:END],postprocess:([E,e,T,t,R])=>({type:KT.case_expression,caseKw:QT(ZT(E),{trailing:e}),endKw:ZT(R),expr:T||[],clauses:t})},{name:"case_clause",symbols:[$T.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",$T.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([E,e,T,t,R,A])=>({type:KT.case_when,whenKw:QT(ZT(E),{trailing:e}),thenKw:QT(ZT(t),{trailing:R}),condition:T,result:A})},{name:"case_clause",symbols:[$T.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([E,e,T])=>({type:KT.case_else,elseKw:QT(ZT(E),{trailing:e}),result:T})},{name:"comma$subexpression$1",symbols:[$T.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[E]])=>({type:KT.comma})},{name:"asterisk$subexpression$1",symbols:[$T.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[E]])=>({type:KT.operator,text:E.text})},{name:"operator$subexpression$1",symbols:[$T.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[E]])=>({type:KT.operator,text:E.text})},{name:"identifier$subexpression$1",symbols:[$T.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[$T.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[$T.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[E]])=>({type:KT.identifier,text:E.text})},{name:"parameter$subexpression$1",symbols:[$T.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[$T.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[$T.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[$T.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[$T.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[E]])=>({type:KT.parameter,key:E.key,text:E.text})},{name:"literal$subexpression$1",symbols:[$T.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[$T.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[E]])=>({type:KT.literal,text:E.text})},{name:"keyword$subexpression$1",symbols:[$T.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[$T.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[$T.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[E]])=>ZT(E)},{name:"logic_operator$subexpression$1",symbols:[$T.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[$T.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[$T.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[E]])=>ZT(E)},{name:"other_keyword$subexpression$1",symbols:[$T.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[$T.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[$T.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[$T.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[E]])=>ZT(E)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:E=>E[0].concat([E[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([E])=>E},{name:"comment",symbols:[$T.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([E])=>({type:KT.line_comment,text:E.text,precedingWhitespace:E.precedingWhitespace})},{name:"comment",symbols:[$T.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([E])=>({type:KT.block_comment,text:E.text,precedingWhitespace:E.precedingWhitespace})}],ParserStart:"main"};var zT=qT;const{Parser:Et,Grammar:et}=BT;const Tt=/^\s+/u;function tt(E,e,T){return function(E){const e=[];for(let T=0;T<E.length;T++){const t=[E[T]];for(;E[T].match(/.*,(\s*(--.*)?$)/);)T++,t.push(E[T]);e.push(t)}return e}(E.split("\n")).flatMap((E=>{if(1===E.length)return E;if("tabular"===e)return function(E){const e=l((T=E,T.map((E=>E.replace(/\s*--.*/,"")))))-1;var T;return E.map(((T,t)=>t===E.length-1?T:function(E,e){const[,T,t]=E.match(/^(.*?),(\s*--.*)?$/)||[],R=" ".repeat(e-T.length);return`${T}${R},${t??""}`}(T,e)))}(E);if("before"===e)return function(E,e){return(T=E,T.map((E=>E.replace(/,(\s*(--.*)?$)/,"$1")))).map(((E,T)=>{if(0===T)return E;const[t]=E.match(Tt)||[""];return function(E,e){return E.replace(new RegExp(e+"$"),"")}(t,e)+e.replace(/ {2}$/,", ")+E.trimStart()}));var T}(E,T);throw new Error(`Unexpected commaPosition: ${e}`)})).join("\n")}let Rt;!function(E){E[E.SPACE=0]="SPACE",E[E.NO_SPACE=1]="NO_SPACE",E[E.NO_NEWLINE=2]="NO_NEWLINE",E[E.NEWLINE=3]="NEWLINE",E[E.MANDATORY_NEWLINE=4]="MANDATORY_NEWLINE",E[E.INDENT=5]="INDENT",E[E.SINGLE_INDENT=6]="SINGLE_INDENT"}(Rt||(Rt={}));class At{items=[];constructor(E){this.indentation=E}add(...E){for(const e of E)switch(e){case Rt.SPACE:this.items.push(Rt.SPACE);break;case Rt.NO_SPACE:this.trimHorizontalWhitespace();break;case Rt.NO_NEWLINE:this.trimWhitespace();break;case Rt.NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(Rt.NEWLINE);break;case Rt.MANDATORY_NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(Rt.MANDATORY_NEWLINE);break;case Rt.INDENT:this.addIndentation();break;case Rt.SINGLE_INDENT:this.items.push(Rt.SINGLE_INDENT);break;default:this.items.push(e)}}trimHorizontalWhitespace(){for(;nt(_(this.items));)this.items.pop()}trimWhitespace(){for(;St(_(this.items));)this.items.pop()}addNewline(E){if(this.items.length>0)switch(_(this.items)){case Rt.NEWLINE:this.items.pop(),this.items.push(E);break;case Rt.MANDATORY_NEWLINE:break;default:this.items.push(E)}}addIndentation(){for(let E=0;E<this.indentation.getLevel();E++)this.items.push(Rt.SINGLE_INDENT)}toString(){return this.items.map((E=>this.itemToString(E))).join("")}getLayoutItems(){return this.items}itemToString(E){switch(E){case Rt.SPACE:return" ";case Rt.NEWLINE:case Rt.MANDATORY_NEWLINE:return"\n";case Rt.SINGLE_INDENT:return this.indentation.getSingleIndent();default:return E}}}const nt=E=>E===Rt.SPACE||E===Rt.SINGLE_INDENT,St=E=>E===Rt.SPACE||E===Rt.SINGLE_INDENT||E===Rt.NEWLINE;function rt(E){return(E=>E===R.AND||E===R.OR||E===R.XOR)(E)||E===R.RESERVED_CLAUSE||E===R.RESERVED_SELECT||E===R.RESERVED_SET_OPERATION||E===R.RESERVED_JOIN||E===R.LIMIT}const Ot="top-level";class Nt{indentTypes=[];constructor(E){this.indent=E}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(Ot)}increaseBlockLevel(){this.indentTypes.push("block-level")}decreaseTopLevel(){this.indentTypes.length>0&&_(this.indentTypes)===Ot&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0;){if(this.indentTypes.pop()!==Ot)break}}}class It extends At{length=0;trailingSpace=!1;constructor(E){super(new Nt("")),this.expressionWidth=E}add(...E){if(E.forEach((E=>this.addToLength(E))),this.length>this.expressionWidth)throw new st;super.add(...E)}addToLength(E){if("string"===typeof E)this.length+=E.length,this.trailingSpace=!1;else{if(E===Rt.MANDATORY_NEWLINE||E===Rt.NEWLINE)throw new st;E===Rt.INDENT||E===Rt.SINGLE_INDENT||E===Rt.SPACE?this.trailingSpace||(this.length++,this.trailingSpace=!0):E!==Rt.NO_NEWLINE&&E!==Rt.NO_SPACE||this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}}class st extends Error{}class ot{inline=!1;nodes=[];index=-1;constructor({cfg:E,dialectCfg:e,params:T,layout:t,inline:R=!1}){this.cfg=E,this.dialectCfg=e,this.inline=R,this.params=T,this.layout=t}format(E){for(this.nodes=E,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(E){this.formatComments(E.leadingComments),this.formatNodeWithoutComments(E),this.formatComments(E.trailingComments)}formatNodeWithoutComments(E){switch(E.type){case KT.function_call:return this.formatFunctionCall(E);case KT.array_subscript:return this.formatArraySubscript(E);case KT.property_access:return this.formatPropertyAccess(E);case KT.parenthesis:return this.formatParenthesis(E);case KT.between_predicate:return this.formatBetweenPredicate(E);case KT.case_expression:return this.formatCaseExpression(E);case KT.case_when:return this.formatCaseWhen(E);case KT.case_else:return this.formatCaseElse(E);case KT.clause:return this.formatClause(E);case KT.set_operation:return this.formatSetOperation(E);case KT.limit_clause:return this.formatLimitClause(E);case KT.all_columns_asterisk:return this.formatAllColumnsAsterisk(E);case KT.literal:return this.formatLiteral(E);case KT.identifier:return this.formatIdentifier(E);case KT.parameter:return this.formatParameter(E);case KT.operator:return this.formatOperator(E);case KT.comma:return this.formatComma(E);case KT.line_comment:return this.formatLineComment(E);case KT.block_comment:return this.formatBlockComment(E);case KT.keyword:return this.formatKeywordNode(E)}}formatFunctionCall(E){this.withComments(E.nameKw,(()=>{this.layout.add(this.showKw(E.nameKw))})),this.formatNode(E.parenthesis)}formatArraySubscript(E){this.withComments(E.array,(()=>{this.layout.add(E.array.type===KT.keyword?this.showKw(E.array):E.array.text)})),this.formatNode(E.parenthesis)}formatPropertyAccess(E){this.formatNode(E.object),this.layout.add(Rt.NO_SPACE,"."),this.formatNode(E.property)}formatParenthesis(E){const e=this.formatInlineExpression(E.children);e?(this.layout.add(E.openParen),this.layout.add(...e.getLayoutItems()),this.layout.add(Rt.NO_SPACE,E.closeParen,Rt.SPACE)):(this.layout.add(E.openParen,Rt.NEWLINE),gT(this.cfg)?(this.layout.add(Rt.INDENT),this.layout=this.formatSubExpression(E.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(Rt.INDENT),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(Rt.NEWLINE,Rt.INDENT,E.closeParen,Rt.SPACE))}formatBetweenPredicate(E){this.layout.add(this.showKw(E.betweenKw),Rt.SPACE),this.layout=this.formatSubExpression(E.expr1),this.layout.add(Rt.NO_SPACE,Rt.SPACE,this.showNonTabularKw(E.andKw),Rt.SPACE),this.layout=this.formatSubExpression(E.expr2),this.layout.add(Rt.SPACE)}formatCaseExpression(E){this.formatNode(E.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(E.expr),this.layout=this.formatSubExpression(E.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(Rt.NEWLINE,Rt.INDENT),this.formatNode(E.endKw)}formatCaseWhen(E){this.layout.add(Rt.NEWLINE,Rt.INDENT),this.formatNode(E.whenKw),this.layout=this.formatSubExpression(E.condition),this.formatNode(E.thenKw),this.layout=this.formatSubExpression(E.result)}formatCaseElse(E){this.layout.add(Rt.NEWLINE,Rt.INDENT),this.formatNode(E.elseKw),this.layout=this.formatSubExpression(E.result)}formatClause(E){this.isOnelineClause(E)?this.formatClauseInOnelineStyle(E):gT(this.cfg)?this.formatClauseInTabularStyle(E):this.formatClauseInIndentedStyle(E)}isOnelineClause(E){return this.dialectCfg.onelineClauses[E.nameKw.text]}formatClauseInIndentedStyle(E){this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E.nameKw),Rt.NEWLINE),this.layout.indentation.increaseTopLevel(),this.layout.add(Rt.INDENT),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(E){this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E.nameKw),Rt.SPACE),this.layout=this.formatSubExpression(E.children)}formatClauseInTabularStyle(E){this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E.nameKw),Rt.SPACE),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(E){this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E.nameKw),Rt.NEWLINE),this.layout.add(Rt.INDENT),this.layout=this.formatSubExpression(E.children)}formatLimitClause(E){this.withComments(E.limitKw,(()=>{this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E.limitKw))})),this.layout.indentation.increaseTopLevel(),gT(this.cfg)?this.layout.add(Rt.SPACE):this.layout.add(Rt.NEWLINE,Rt.INDENT),E.offset?(this.layout=this.formatSubExpression(E.offset),this.layout.add(Rt.NO_SPACE,",",Rt.SPACE),this.layout=this.formatSubExpression(E.count)):this.layout=this.formatSubExpression(E.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(E){this.layout.add("*",Rt.SPACE)}formatLiteral(E){this.layout.add(E.text,Rt.SPACE)}formatIdentifier(E){this.layout.add(E.text,Rt.SPACE)}formatParameter(E){this.layout.add(this.params.get(E),Rt.SPACE)}formatOperator({text:E}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(E)?this.layout.add(Rt.NO_SPACE,E):":"===E?this.layout.add(Rt.NO_SPACE,E,Rt.SPACE):this.layout.add(E,Rt.SPACE)}formatComma(E){this.inline?this.layout.add(Rt.NO_SPACE,",",Rt.SPACE):this.layout.add(Rt.NO_SPACE,",",Rt.NEWLINE,Rt.INDENT)}withComments(E,e){this.formatComments(E.leadingComments),e(),this.formatComments(E.trailingComments)}formatComments(E){E&&E.forEach((E=>{E.type===KT.line_comment?this.formatLineComment(E):this.formatBlockComment(E)}))}formatLineComment(E){u(E.precedingWhitespace||"")?this.layout.add(Rt.NEWLINE,Rt.INDENT,E.text,Rt.MANDATORY_NEWLINE,Rt.INDENT):this.layout.getLayoutItems().length>0?this.layout.add(Rt.NO_NEWLINE,Rt.SPACE,E.text,Rt.MANDATORY_NEWLINE,Rt.INDENT):this.layout.add(E.text,Rt.MANDATORY_NEWLINE,Rt.INDENT)}formatBlockComment(E){this.isMultilineBlockComment(E)?(this.splitBlockComment(E.text).forEach((E=>{this.layout.add(Rt.NEWLINE,Rt.INDENT,E)})),this.layout.add(Rt.NEWLINE,Rt.INDENT)):this.layout.add(E.text,Rt.SPACE)}isMultilineBlockComment(E){return u(E.text)||u(E.precedingWhitespace||"")}isDocComment(E){const e=E.split(/\n/);return/^\/\*\*?$/.test(e[0])&&e.slice(1,e.length-1).every((E=>/^\s*\*/.test(E)))&&/^\s*\*\/$/.test(_(e))}splitBlockComment(E){return this.isDocComment(E)?E.split(/\n/).map((E=>/^\s*\*/.test(E)?" "+E.replace(/^\s*/,""):E)):E.split(/\n/).map((E=>E.replace(/^\s*/,"")))}formatSubExpression(E){return new ot({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(E)}formatInlineExpression(E){const e=this.params.getPositionalParameterIndex();try{return new ot({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new It(this.cfg.expressionWidth),inline:!0}).format(E)}catch(T){if(T instanceof st)return void this.params.setPositionalParameterIndex(e);throw T}}formatKeywordNode(E){switch(E.tokenType){case R.RESERVED_JOIN:return this.formatJoin(E);case R.AND:case R.OR:case R.XOR:return this.formatLogicalOperator(E);default:return this.formatKeyword(E)}}formatJoin(E){gT(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E),Rt.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E),Rt.SPACE)}formatKeyword(E){this.layout.add(this.showKw(E),Rt.SPACE)}formatLogicalOperator(E){"before"===this.cfg.logicalOperatorNewline?gT(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E),Rt.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(Rt.NEWLINE,Rt.INDENT,this.showKw(E),Rt.SPACE):this.layout.add(this.showKw(E),Rt.NEWLINE,Rt.INDENT)}showKw(E){return rt(E.tokenType)?function(E,e){if("standard"===e)return E;let T=[];return E.length>=10&&E.includes(" ")&&([E,...T]=E.split(" ")),(E="tabularLeft"===e?E.padEnd(9," "):E.padStart(9," "))+["",...T].join(" ")}(this.showNonTabularKw(E),this.cfg.indentStyle):this.showNonTabularKw(E)}showNonTabularKw(E){switch(this.cfg.keywordCase){case"preserve":return c(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}}class it{constructor(E,e){this.dialect=E,this.cfg=e,this.params=new HT(this.cfg.params)}format(E){const e=this.parse(E),T=this.formatAst(e);return this.postFormat(T).trimEnd()}parse(E){return function(E){let e={};const T=new wT((T=>{return[...(t=E.tokenize(T,e),t.map(FT).map(YT).map(bT).map(yT)),A(T.length)];var t})),t=new Et(et.fromCompiled(zT),{lexer:T});return{parse:(E,T)=>{e=T;const{results:R}=t.feed(E);if(1===R.length)return R[0];throw 0===R.length?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar\n${JSON.stringify(R,void 0,2)}`)}}}(this.dialect.tokenizer).parse(E,this.cfg.paramTypes||{})}formatAst(E){return E.map((E=>this.formatStatement(E))).join("\n".repeat(this.cfg.linesBetweenQueries+1))}formatStatement(E){const e=new ot({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new At(new Nt(mT(this.cfg)))}).format(E.children);return E.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?e.add(Rt.NEWLINE,";"):e.add(Rt.NO_NEWLINE,";")),e.toString()}postFormat(E){return this.cfg.tabulateAlias&&(E=function(E){const e=E.split("\n");let T=[];for(let t=0;t<e.length;t++){if(e[t].match(/^\s*SELECT/i)){let E=[];if(e[t].match(/.*,$/))E=[e[t]];else{if(T.push(e[t]),e[t].match(/^\s*SELECT\s+.+(?!,$)/i))continue;E.push(e[++t])}for(;e[t++].match(/.*,$/);)E.push(e[t]);const R=E.map((E=>({line:E,matches:E.match(/(^.*?\S) (AS )?(\S+,?$)/i)}))).map((({line:E,matches:e})=>e?{precedingText:e[1],as:e[2],alias:e[3]}:{precedingText:E})),A=l(R.map((({precedingText:E})=>E.replace(/\s*,\s*$/,""))));E=R.map((({precedingText:E,as:e,alias:T})=>E+(T?" ".repeat(A-E.length+1)+(e??"")+T:""))),T=[...T,...E]}T.push(e[t])}return T.join("\n")}(E)),"before"!==this.cfg.commaPosition&&"tabular"!==this.cfg.commaPosition||(E=tt(E,this.cfg.commaPosition,mT(this.cfg))),E}}class at extends Error{}function Ct(E){if("multilineLists"in E)throw new at("multilineLists config is no more supported.");if("newlineBeforeOpenParen"in E)throw new at("newlineBeforeOpenParen config is no more supported.");if("newlineBeforeCloseParen"in E)throw new at("newlineBeforeCloseParen config is no more supported.");if("aliasAs"in E)throw new at("aliasAs config is no more supported.");if(E.expressionWidth<=0)throw new at(`expressionWidth config must be positive number. Received ${E.expressionWidth} instead.`);if("before"===E.commaPosition&&E.useTabs)throw new at("commaPosition: before does not work when tabs are used for indentation.");var e;return E.params&&!((e=E.params)instanceof Array?e:Object.values(e)).every((E=>"string"===typeof E))&&console.warn('WARNING: All "params" option values should be strings.'),E}const _t={bigquery:"bigquery",db2:"db2",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},Lt=Object.keys(_t),lt={tabWidth:2,useTabs:!1,keywordCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",tabulateAlias:!1,commaPosition:"after",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},ct=(E,e={})=>{if("string"===typeof e.language&&!Lt.includes(e.language))throw new at(`Unsupported SQL dialect: ${e.language}`);const T=_t[e.language||"sql"];return Dt(E,{...e,dialect:t[T]})},Dt=(E,{dialect:e,...T})=>{if("string"!==typeof E)throw new Error("Invalid query argument. Expected string, instead got "+typeof E);const t=Ct({...lt,...T});return new it((E=>{let e=fT.get(E);return e||(e=GT(E),fT.set(E,e)),e})(e),t).format(E)}}}]);
//# sourceMappingURL=2963.60303adf23a43739.js.map